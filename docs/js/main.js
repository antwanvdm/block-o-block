!function(e){var s={};function t(i){if(s[i])return s[i].exports;var a=s[i]={i:i,l:!1,exports:{}};return e[i].call(a.exports,a,a.exports,t),a.l=!0,a.exports}t.m=e,t.c=s,t.d=function(e,s,i){t.o(e,s)||Object.defineProperty(e,s,{configurable:!1,enumerable:!0,get:i})},t.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},t.n=function(e){var s=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(s,"a",s),s},t.o=function(e,s){return Object.prototype.hasOwnProperty.call(e,s)},t.p="",t(t.s=2)}([function(e){e.exports={game:{levelsPerGame:10,startElementsPerLevel:5,elementsIncreasePerLevel:5,scorePerElement:10,secondsPerLevel:10,blockSpeed:{min:1,max:5},blockPixels:{min:10,max:150},player:{growthFactor:1.5,speed:3,speedIncreaseFactor:.2},badWords:["hitler","jood","slet"]},functionalities:{mLab:!0},mLab:{baseUrl:"https://api.mlab.com/api/1",apiKey:"X17utv1FH2dFTeUo4yhNGL54sA7CY2jS",databaseName:"typescript_scores",collectionName:"scores"}}},function(e,s,t){var i=t(7).words,a=t(6).array,r=function(){function e(e){e=e||{},this.list=e.emptyList&&[]||Array.prototype.concat.apply(i,[a,e.list||[]]),this.exclude=e.exclude||[],this.placeHolder=e.placeHolder||"*",this.regex=e.regex||/[^a-zA-z0-9|\$|\@]|\^/g,this.replaceRegex=e.replaceRegex||/\w/g}return e.prototype.isProfane=function(e){return e.split(" ").map(function(e){return e.toLowerCase().replace(this.regex,"")},this).filter(this.isProfaneLike,this).shift()||!1},e.prototype.isProfaneLike=function(e){return!~this.exclude.indexOf(e)&&(!!~this.list.indexOf(e)||this.list.map(function(e){return new RegExp(e.replace(/(\W)/g,"\\$1"),"gi")},this).reduce(function(s,t){return!!t.test(e)||s},!1))},e.prototype.replaceWord=function(e){return e.replace(this.regex,"").replace(this.replaceRegex,this.placeHolder)},e.prototype.clean=function(e){return e.split(/\b/).map(function(e){return this.isProfane(e)?this.replaceWord(e):e}.bind(this)).join("")},e.prototype.addWords=function(e){e=e instanceof Array?e:[e],this.list=this.list.concat(e),e.forEach(function(e){~this.exclude.indexOf(e)&&this.exclude.splice(this.exclude.indexOf(e),1)},this)},e.prototype.removeWords=function(){var e=Array.prototype.slice.call(arguments);this.exclude.push.apply(this.exclude,e)},e}();e.exports=r},function(e,s,t){"use strict";t.r(s);var i=t(0);class a{constructor(e,s,t,i=""){this.x=s,this.y=t,this.el=document.createElement("div");let a=document.getElementById("main");if(null===a)throw new Error("<main> element doesn't exist!");if(this.x>-1&&this.y>-1&&(this.el.style.transform=`translate(${this.x}px, ${this.y}px)`),this.el.classList.add(`game-${e}`),""===i)a.appendChild(this.el);else{let e=document.querySelector(`.game-${i}`);if(null===e)throw new Error(`<.game-${i}> element doesn't exist!`);e.appendChild(this.el)}}getClientReact(){return this.el.getBoundingClientRect()}}class r extends a{constructor(){super("score",-1,-1,"gui"),this.score=0,this.renderTemplate(),this.el.querySelector(".score-count").innerHTML=this.score.toString(),this.el.classList.add("message","is-warning")}get(){return this.score}update(e,s=!1){this.score=s?e:this.score+e,this.el.querySelector(".score-count").innerHTML=this.score.toString()}renderTemplate(){this.el.innerHTML='\n            <div class="message-body">\n                <span>score: </span>\n                <span class="score-count"></span>\n            </div>\n        '}}class o{static addEventListener(e,s){o.functionMap[e]=s,window.addEventListener(e.split(".")[0],o.functionMap[e])}static removeEventListener(e){window.removeEventListener(e.split(".")[0],o.functionMap[e]),delete o.functionMap[e]}}o.functionMap={};class n extends a{constructor(){super("messagescreen",-1,-1,"gui"),this.isActive=!1,this.gameStates={"game:start":{header:"Welcome to Block-o-Block!",body:"It's time to catch them blocks!<br/><br/>Use your arrow keys to move your player around and press space to start.<br/><br/>Press -<strong>H</strong>- to view the highscore list.",className:"is-info",keyboardTriggerKey:" "},"game:end":{header:"Your game is over!",body:"You made it, your final score is __SCORE__ out of max __MAX_SCORE__ points.<br/><br/>Thanks for playing, press <strong>-N-</strong> to save your score or press enter to restart the madness.<br/><br/>Press -<strong>H</strong>- to view the highscore list.",className:"is-success",keyboardTriggerKey:"enter"},"level:success":{header:"YEAH! Level completed!",body:"Performing like a boss! Press space to proceed to the next level and catch even more blocks.",className:"is-success",keyboardTriggerKey:" "},"level:failed":{header:"AAH! Level failed!",body:"Try again and show us what you're made off! Press space to restart this level.",className:"is-danger",keyboardTriggerKey:" "}},this.el.classList.add("message"),this.renderTemplate(),this.show("game:start"),o.addEventListener("keyup.messagescreen",e=>this.keyBoardHandler(e))}keyBoardHandler(e){e.key.toLowerCase()===this.gameStates[this.currentEvent].keyboardTriggerKey&&!0===this.isActive&&window.dispatchEvent(new Event(`${this.currentEvent}:click`))}show(e,s={}){let t=this.gameStates[e].header,i=this.gameStates[e].body;for(let e in s)i=i.replace(e,s[e]);this.el.querySelector(".message-header").innerHTML=t,this.el.querySelector(".message-body").innerHTML=i,this.el.classList.add("show",this.gameStates[e].className),this.currentEvent=e,this.isActive=!0}hide(){this.el.classList.remove("show","is-info","is-success","is-danger"),this.isActive=!1}renderTemplate(){this.el.innerHTML='\n            <div class="message-header"></div>\n            <div class="message-body"></div>\n        '}}class c{constructor(){this.endPointList=`/databases/${i.mLab.databaseName}/collections/${i.mLab.collectionName}?apiKey=${i.mLab.apiKey}`,this.endPointSave=`/databases/${i.mLab.databaseName}/collections/${i.mLab.collectionName}?apiKey=${i.mLab.apiKey}`,this.offlineUserScores=[],o.addEventListener("online.dataservice",()=>this.saveScoreToMlab())}static getInstance(){return c.instance||(c.instance=new c),c.instance}saveScore(e,s){let t={name:e,score:s};if(!1===i.functionalities.mLab||!1===window.navigator.onLine)return this.offlineUserScores.push(t),new Promise(e=>{e(t)});let a=`${i.mLab.baseUrl}${this.endPointSave}`;return fetch(a,{body:JSON.stringify(t),headers:{"content-type":"application/json"},method:"POST",mode:"cors"}).then(e=>e.json())}getScores(){if(!1===i.functionalities.mLab||!1===window.navigator.onLine)return new Promise(e=>{e(JSON.parse(localStorage.getItem("scores")))});let e=`${i.mLab.baseUrl}${this.endPointList}&s={"score": -1}&l=10`;return fetch(e,{mode:"cors"}).then(e=>e.json()).then(e=>localStorage.getItem("scores")===JSON.stringify(e)?JSON.parse(localStorage.getItem("scores")):(localStorage.setItem("scores",JSON.stringify(e)),e))}saveScoreToMlab(){this.offlineUserScores.length>0&&Promise.all(this.offlineUserScores.map(e=>this.saveScore(e.name,e.score))).then(()=>{this.offlineUserScores=[]})}}class h extends a{constructor(){super("highscorelist",-1,-1,"gui"),this.el.classList.add("modal"),this.renderTemplate(),this.tBody=this.el.querySelector(".tbody"),this.dataService=c.getInstance(),this.loadScoreData(),window.addEventListener("game:scoreSaved",e=>this.updateData(e.detail.data))}loadScoreData(e=!1){this.dataService.getScores().then(s=>{this.scores=s,this.tBody.innerHTML=this.getTbodyTemplate(),!0===e&&this.el.classList.add("is-active")})}updateData(e){((0===this.scores.length?-1:this.scores[this.scores.length-1].score)<e.score||this.scores.length<10)&&(this.scores.push(e),this.scores.sort((e,s)=>s.score-e.score),this.scores.splice(10,1),this.tBody.innerHTML=this.getTbodyTemplate())}show(){void 0===this.scores?this.loadScoreData(!0):this.el.classList.add("is-active")}hide(){this.el.classList.remove("is-active")}getTbodyTemplate(){return`\n            ${this.scores.map((e,s)=>`<tr>\n                <td>${s+1}</td>\n                <td>${e.name}</td>\n                <td>${e.score.toString()}</td>\n            </tr>`).join("")}\n        `}renderTemplate(){this.el.innerHTML='\n            <div class="modal-background"></div>\n            <div class="modal-content">\n                <div class="message is-warning">\n                    <div class="message-header">\n                        <p>Top 10 Scores (press -<strong>ESC</strong>- to return)</p>\n                    </div>\n                    <div class="message-body">\n                        <table class="table">\n                            <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>Name</th>\n                                <th>Score</th>\n                            </tr>\n                            </thead>\n                            <tbody class="tbody"></tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        '}}var u=t(1),l=t.n(u);class k extends a{constructor(){super("nameform",-1,-1,"gui"),this.score=0,this.nameMaxLength=16,this.dataService=c.getInstance(),this.filter=new l.a({list:i.game.badWords}),this.el.classList.add("modal"),this.renderTemplate(),this.form=this.el.querySelector(".name-form"),this.nameField=this.form.querySelector(".name"),this.feedbackMessage=this.el.querySelector(".feedback-message"),this.form.addEventListener("submit",e=>this.saveScore(e))}show(e){this.nameField.classList.remove("is-danger"),this.form.classList.remove("is-hidden"),this.feedbackMessage.classList.add("is-hidden"),this.score=e,this.el.classList.add("is-active"),this.nameField.focus()}hide(){this.el.classList.remove("is-active")}saveScore(e){e.preventDefault();let s=this.nameField.value;""==s||s.length>this.nameMaxLength||this.filter.isProfane(s)?this.nameField.classList.add("is-danger"):this.dataService.saveScore(s,this.score).then(e=>{window.dispatchEvent(new CustomEvent("game:scoreSaved",{detail:{data:e}})),this.feedbackMessage.innerHTML="Your score has been saved, Press <strong>-ESC-</strong> to return to the previous screen!",this.form.classList.add("is-hidden"),this.feedbackMessage.classList.remove("is-hidden")})}renderTemplate(){this.el.innerHTML=`\n            <div class="modal-background"></div>\n            <div class="modal-content">\n                <div class="message is-warning">\n                    <div class="message-header">Please enter your name</div>\n                    <div class="message-body">\n                        <p class="feedback-message is-hidden"></p>\n                        <form method="post" action="" class="name-form">\n                            <div class="control has-icons-left">\n                                <input name="name" class="name input" type="text" placeholder="Enter your name.." maxlength="${this.nameMaxLength}" autocomplete="off"/>\n                                <span class="icon is-small is-left">\n                                    <i class="fas fa-user"></i>\n                                </span>\n                            </div>\n                            <div class="control">\n                                <input type="submit" class="input button" value="Save score"/>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        `}}class d extends a{constructor(){super("gui",-1,-1),this.nameFormVisible=!1,this.highScoreListVisible=!1,this.score=new r,this.messageScreen=new n,this.nameForm=new k,window.addEventListener("level:scoreUpdate",e=>this.score.update(e.detail.score)),this.highScoreList=new h,o.addEventListener("keyup.highscorelist",e=>this.keyBoardHandler(e))}keyBoardHandler(e){let s=e.key.toLowerCase();"h"===s&&!1===this.highScoreListVisible&&!1===this.nameFormVisible?(this.highScoreListVisible=!0,this.highScoreList.show(),this.messageScreen.isActive=!1):"escape"===s&&!0===this.highScoreListVisible&&(this.highScoreListVisible=!1,this.highScoreList.hide(),this.messageScreen.isActive=!0),"n"===s&&!1===this.highScoreListVisible&&!1===this.nameFormVisible&&"game:end"===this.messageScreen.currentEvent?(this.nameFormVisible=!0,this.nameForm.show(this.score.get()),this.messageScreen.isActive=!1):"escape"===s&&!0===this.nameFormVisible&&(this.nameFormVisible=!1,this.nameForm.hide(),this.messageScreen.isActive=!0)}show(e){this.messageScreen.show(e)}hide(){this.messageScreen.hide()}gameEnd(e){this.messageScreen.show("game:end",{__SCORE__:this.score.get().toString(),__MAX_SCORE__:e.toString()})}restart(){this.messageScreen.hide(),this.messageScreen.show("game:start"),this.score.update(0,!0)}}class m{static getRandomColor(){let e=Math.round,s=Math.random;return`rgba(${e(255*s())},${e(255*s())},${e(255*s())},1)`}static getRandomInt(e,s){return Math.floor(Math.random()*(s-e+1))+e}static checkCollision(e,s){return e.left<=s.right&&s.left<=e.right&&e.top<=s.bottom&&s.top<=e.bottom}static isMobile(){const e=navigator.userAgent||navigator.vendor;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od|ad)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}}class g extends a{constructor(e,s,t,i){super("block",0,0,"level"),this.destination={x:0,y:0},this.speed=s,this.width=t,this.height=i,this.color=e,this.el.style.backgroundImage=`repeating-linear-gradient(${m.getRandomInt(0,360)}deg, #000000, #000000 ${m.getRandomInt(2,10)}px, ${this.color} 10px, ${this.color} ${m.getRandomInt(20,40)}px)`,this.el.style.width=`${this.width}px`,this.el.style.height=`${this.height}px`,this.x=m.getRandomInt(0,window.outerWidth-this.width),this.y=m.getRandomInt(0,document.documentElement.clientHeight-this.height),this.el.style.transform=`translate(${this.x}px, ${this.y}px)`}update(){this.x>this.destination.x-this.speed&&this.x<this.destination.x+this.speed&&(this.destination.x=m.getRandomInt(0,window.outerWidth-this.width)),this.y>this.destination.y-this.speed&&this.y<this.destination.y+this.speed&&(this.destination.y=m.getRandomInt(0,document.documentElement.clientHeight-this.height)),this.destination.x>=this.x?this.x+=this.speed:this.x-=this.speed,this.destination.y>=this.y?this.y+=this.speed:this.y-=this.speed,this.el.style.transform=`translate(${this.x}px, ${this.y}px)`}destroy(){this.el.remove()}}class f extends a{constructor(){super("player",0,0,"level"),this.height=10,this.width=10,this.growthFactor=i.game.player.growthFactor,this.speed=i.game.player.speed,this.speedIncreaseFactor=i.game.player.speedIncreaseFactor,this.keysAllowed=["arrowleft","arrowup","arrowright","arrowdown"],this.keysPressed=[],this.x=window.outerWidth/2-this.width/2,this.y=document.documentElement.clientHeight/2-this.height/2,this.el.style.width=`${this.width}px`,this.el.style.height=`${this.height}px`,this.el.style.borderRadius=`${this.width}px`,o.addEventListener("keydown.player",e=>this.keyDownHandler(e)),o.addEventListener("keyup.player",e=>this.keyUpHandler(e))}keyDownHandler(e){let s=e.key.toLowerCase();this.keysAllowed.indexOf(s)>-1&&-1===this.keysPressed.indexOf(s)&&this.keysPressed.push(s)}keyUpHandler(e){let s=e.key.toLowerCase(),t=this.keysPressed.indexOf(s);this.keysAllowed.indexOf(s)>-1&&t>-1&&this.keysPressed.splice(t,1)}update(){this.keysPressed.forEach(e=>{switch(e){case"arrowleft":this.x-=this.speed;break;case"arrowup":this.y-=this.speed;break;case"arrowright":this.x+=this.speed;break;case"arrowdown":this.y+=this.speed;break;default:return}}),this.x<0&&(this.x=0),this.y<0&&(this.y=0),this.x>window.outerWidth-this.width&&(this.x=window.outerWidth-this.width),this.y>document.documentElement.clientHeight-this.height&&(this.y=document.documentElement.clientHeight-this.height),this.el.style.transform=`translate(${this.x}px, ${this.y}px)`}blockCaught(e){this.speed+=this.speedIncreaseFactor,this.width+=this.growthFactor,this.height+=this.growthFactor,this.el.style.height=`${this.height}px`,this.el.style.width=`${this.width}px`,this.el.style.borderRadius=`${this.width}px`,this.el.style.backgroundColor=e.color}destroy(){this.el.remove(),o.removeEventListener("keydown.player"),o.removeEventListener("keyup.player")}}class p extends a{constructor(){super("timer",-1,-1,"level"),this.seconds=i.game.secondsPerLevel,this.renderTemplate(),this.el.classList.add("message","is-primary"),this.el.querySelector(".seconds").innerHTML=this.seconds.toString(),this.intervalId=setInterval(()=>this.update(),1e3)}update(){this.seconds--,this.el.querySelector(".seconds").innerHTML=this.seconds.toString(),this.seconds<=3?(this.el.classList.remove("is-primary"),this.el.classList.add("is-danger")):(this.el.classList.add("is-primary"),this.el.classList.remove("is-danger")),0===this.seconds&&window.dispatchEvent(new Event("timer:done"))}destroy(){clearInterval(this.intervalId)}renderTemplate(){this.el.innerHTML='\n            <div class="message-body">\n                <span>time: </span>\n                <span class="seconds"></span>\n            </div>\n        '}}class b extends a{constructor(e,s){super("level",0,0),this.blocks=[],this.failed=!1,this.totalBlocks=e,this.scorePerBlock=s,this.player=new f,this.timer=new p;for(let e=0;e<this.totalBlocks;e++)this.blocks.push(new g(m.getRandomColor(),m.getRandomInt(i.game.blockSpeed.min,i.game.blockSpeed.max),m.getRandomInt(i.game.blockPixels.min,i.game.blockPixels.max),m.getRandomInt(i.game.blockPixels.min,i.game.blockPixels.max)));o.addEventListener("timer:done",()=>{this.failed=!0,this.destroy("level:failed")})}update(){this.player.update(),this.blocks.forEach((e,s)=>{e.update(),m.checkCollision(this.player.getClientReact(),e.getClientReact())&&!1===this.failed&&(this.player.blockCaught(e),e.destroy(),this.blocks.splice(s,1),window.dispatchEvent(new CustomEvent("level:scoreUpdate",{detail:{score:this.scorePerBlock}})),0===this.blocks.length&&this.destroy("level:success"))})}destroy(e){this.timer.destroy(),this.player.destroy(),this.blocks.forEach((e,s)=>{e.destroy(),this.blocks.splice(s,1)}),o.removeEventListener("timer:done"),window.dispatchEvent(new Event(e)),this.el.remove()}}window.addEventListener("load",()=>m.isMobile()?new class extends a{constructor(){super("nomobile",-1,-1),this.el.classList.add("modal","is-active"),this.renderTemplate()}renderTemplate(){this.el.innerHTML='\n            <div class="modal-background"></div>\n            <div class="modal-content">\n                <div class="message is-warning">\n                    <div class="message-header">Whoops! No support yet..</div>\n                    <div class="message-body">\n                        Currently this game is not playable on touch devices. Please use your desktop keyboard to enter the competition and set a perfect high score!\n                    </div>\n                </div>\n            </div>\n        '}}:new class{constructor(){this.levelsPerGame=i.game.levelsPerGame,this.currentLevelsPlayed=0,this.startElementsPerLevel=i.game.startElementsPerLevel,this.elementsIncreasePerLevel=i.game.elementsIncreasePerLevel,this.scorePerElement=i.game.scorePerElement,this.gui=new d,this.maxScore=this.calculateMaxScore(),this.gameLoop(),["level:success","level:failed"].map(e=>{window.addEventListener(e,e=>this.update(e.type))}),["game:start:click","level:success:click","level:failed:click"].map(e=>{window.addEventListener(e,()=>this.startNewLevel())}),window.addEventListener("game:end:click",()=>this.restart())}calculateMaxScore(){let e=0;for(let s=0;s<this.levelsPerGame;s++)e+=(this.startElementsPerLevel+(0===s?0:this.elementsIncreasePerLevel*s))*this.scorePerElement;return e}gameLoop(){void 0!==this.level&&this.level.update(),requestAnimationFrame(()=>this.gameLoop())}update(e){this.currentLevelsPlayed++,this.currentLevelsPlayed!==this.levelsPerGame?this.gui.show(e):this.gui.gameEnd(this.maxScore)}startNewLevel(){this.level&&!1===this.level.failed&&(this.startElementsPerLevel+=this.elementsIncreasePerLevel),delete this.level,this.gui.hide(),this.level=new b(this.startElementsPerLevel,this.scorePerElement)}restart(){this.gui.restart(),this.currentLevelsPlayed=0,this.startElementsPerLevel=i.game.startElementsPerLevel,delete this.level}})},function(e,s){e.exports=/\b(4r5e|5h1t|5hit|a55|anal|anus|ar5e|arrse|arse|ass|ass-fucker|asses|assfucker|assfukka|asshole|assholes|asswhole|a_s_s|b!tch|b00bs|b17ch|b1tch|ballbag|balls|ballsack|bastard|beastial|beastiality|bellend|bestial|bestiality|bi\+ch|biatch|bitch|bitcher|bitchers|bitches|bitchin|bitching|bloody|blow job|blowjob|blowjobs|boiolas|bollock|bollok|boner|boob|boobs|booobs|boooobs|booooobs|booooooobs|breasts|buceta|bugger|bum|bunny fucker|butt|butthole|buttmuch|buttplug|c0ck|c0cksucker|carpet muncher|cawk|chink|cipa|cl1t|clit|clitoris|clits|cnut|cock|cock-sucker|cockface|cockhead|cockmunch|cockmuncher|cocks|cocksuck|cocksucked|cocksucker|cocksucking|cocksucks|cocksuka|cocksukka|cok|cokmuncher|coksucka|coon|cox|crap|cum|cummer|cumming|cums|cumshot|cunilingus|cunillingus|cunnilingus|cunt|cuntlick|cuntlicker|cuntlicking|cunts|cyalis|cyberfuc|cyberfuck|cyberfucked|cyberfucker|cyberfuckers|cyberfucking|d1ck|damn|dick|dickhead|dildo|dildos|dink|dinks|dirsa|dlck|dog-fucker|doggin|dogging|donkeyribber|doosh|duche|dyke|ejaculate|ejaculated|ejaculates|ejaculating|ejaculatings|ejaculation|ejakulate|f u c k|f u c k e r|f4nny|fag|fagging|faggitt|faggot|faggs|fagot|fagots|fags|fanny|fannyflaps|fannyfucker|fanyy|fatass|fcuk|fcuker|fcuking|feck|fecker|felching|fellate|fellatio|fingerfuck|fingerfucked|fingerfucker|fingerfuckers|fingerfucking|fingerfucks|fistfuck|fistfucked|fistfucker|fistfuckers|fistfucking|fistfuckings|fistfucks|flange|fook|fooker|fuck|fucka|fucked|fucker|fuckers|fuckhead|fuckheads|fuckin|fucking|fuckings|fuckingshitmotherfucker|fuckme|fucks|fuckwhit|fuckwit|fudge packer|fudgepacker|fuk|fuker|fukker|fukkin|fuks|fukwhit|fukwit|fux|fux0r|f_u_c_k|gangbang|gangbanged|gangbangs|gaylord|gaysex|goatse|God|god-dam|god-damned|goddamn|goddamned|hardcoresex|hell|heshe|hoar|hoare|hoer|homo|hore|horniest|horny|hotsex|jack-off|jackoff|jap|jerk-off|jism|jiz|jizm|jizz|kawk|knob|knobead|knobed|knobend|knobhead|knobjocky|knobjokey|kock|kondum|kondums|kum|kummer|kumming|kums|kunilingus|l3i\+ch|l3itch|labia|lust|lusting|m0f0|m0fo|m45terbate|ma5terb8|ma5terbate|masochist|master-bate|masterb8|masterbat*|masterbat3|masterbate|masterbation|masterbations|masturbate|mo-fo|mof0|mofo|mothafuck|mothafucka|mothafuckas|mothafuckaz|mothafucked|mothafucker|mothafuckers|mothafuckin|mothafucking|mothafuckings|mothafucks|mother fucker|motherfuck|motherfucked|motherfucker|motherfuckers|motherfuckin|motherfucking|motherfuckings|motherfuckka|motherfucks|muff|mutha|muthafecker|muthafuckker|muther|mutherfucker|n1gga|n1gger|nazi|nigg3r|nigg4h|nigga|niggah|niggas|niggaz|nigger|niggers|nob|nob jokey|nobhead|nobjocky|nobjokey|numbnuts|nutsack|orgasim|orgasims|orgasm|orgasms|p0rn|pawn|pecker|penis|penisfucker|phonesex|phuck|phuk|phuked|phuking|phukked|phukking|phuks|phuq|pigfucker|pimpis|piss|pissed|pisser|pissers|pisses|pissflaps|pissin|pissing|pissoff|poop|porn|porno|pornography|pornos|prick|pricks|pron|pube|pusse|pussi|pussies|pussy|pussys|rectum|retard|rimjaw|rimming|s hit|s.o.b.|sadist|schlong|screwing|scroat|scrote|scrotum|semen|sex|sh!\+|sh!t|sh1t|shag|shagger|shaggin|shagging|shemale|shi\+|shit|shitdick|shite|shited|shitey|shitfuck|shitfull|shithead|shiting|shitings|shits|shitted|shitter|shitters|shitting|shittings|shitty|skank|slut|sluts|smegma|smut|snatch|son-of-a-bitch|spac|spunk|s_h_i_t|t1tt1e5|t1tties|teets|teez|testical|testicle|tit|titfuck|tits|titt|tittie5|tittiefucker|titties|tittyfuck|tittywank|titwank|tosser|turd|tw4t|twat|twathead|twatty|twunt|twunter|v14gra|v1gra|vagina|viagra|vulva|w00se|wang|wank|wanker|wanky|whoar|whore|willies|willy|xrated|xxx)\b/gi},function(e,s){e.exports=["4r5e","5h1t","5hit","a55","anal","anus","ar5e","arrse","arse","ass","ass-fucker","asses","assfucker","assfukka","asshole","assholes","asswhole","a_s_s","b!tch","b00bs","b17ch","b1tch","ballbag","balls","ballsack","bastard","beastial","beastiality","bellend","bestial","bestiality","bi+ch","biatch","bitch","bitcher","bitchers","bitches","bitchin","bitching","bloody","blow job","blowjob","blowjobs","boiolas","bollock","bollok","boner","boob","boobs","booobs","boooobs","booooobs","booooooobs","breasts","buceta","bugger","bum","bunny fucker","butt","butthole","buttmuch","buttplug","c0ck","c0cksucker","carpet muncher","cawk","chink","cipa","cl1t","clit","clitoris","clits","cnut","cock","cock-sucker","cockface","cockhead","cockmunch","cockmuncher","cocks","cocksuck","cocksucked","cocksucker","cocksucking","cocksucks","cocksuka","cocksukka","cok","cokmuncher","coksucka","coon","cox","crap","cum","cummer","cumming","cums","cumshot","cunilingus","cunillingus","cunnilingus","cunt","cuntlick","cuntlicker","cuntlicking","cunts","cyalis","cyberfuc","cyberfuck","cyberfucked","cyberfucker","cyberfuckers","cyberfucking","d1ck","damn","dick","dickhead","dildo","dildos","dink","dinks","dirsa","dlck","dog-fucker","doggin","dogging","donkeyribber","doosh","duche","dyke","ejaculate","ejaculated","ejaculates","ejaculating","ejaculatings","ejaculation","ejakulate","f u c k","f u c k e r","f4nny","fag","fagging","faggitt","faggot","faggs","fagot","fagots","fags","fanny","fannyflaps","fannyfucker","fanyy","fatass","fcuk","fcuker","fcuking","feck","fecker","felching","fellate","fellatio","fingerfuck","fingerfucked","fingerfucker","fingerfuckers","fingerfucking","fingerfucks","fistfuck","fistfucked","fistfucker","fistfuckers","fistfucking","fistfuckings","fistfucks","flange","fook","fooker","fuck","fucka","fucked","fucker","fuckers","fuckhead","fuckheads","fuckin","fucking","fuckings","fuckingshitmotherfucker","fuckme","fucks","fuckwhit","fuckwit","fudge packer","fudgepacker","fuk","fuker","fukker","fukkin","fuks","fukwhit","fukwit","fux","fux0r","f_u_c_k","gangbang","gangbanged","gangbangs","gaylord","gaysex","goatse","God","god-dam","god-damned","goddamn","goddamned","hardcoresex","hell","heshe","hoar","hoare","hoer","homo","hore","horniest","horny","hotsex","jack-off","jackoff","jap","jerk-off","jism","jiz","jizm","jizz","kawk","knob","knobead","knobed","knobend","knobhead","knobjocky","knobjokey","kock","kondum","kondums","kum","kummer","kumming","kums","kunilingus","l3i+ch","l3itch","labia","lust","lusting","m0f0","m0fo","m45terbate","ma5terb8","ma5terbate","masochist","master-bate","masterb8","masterbat*","masterbat3","masterbate","masterbation","masterbations","masturbate","mo-fo","mof0","mofo","mothafuck","mothafucka","mothafuckas","mothafuckaz","mothafucked","mothafucker","mothafuckers","mothafuckin","mothafucking","mothafuckings","mothafucks","mother fucker","motherfuck","motherfucked","motherfucker","motherfuckers","motherfuckin","motherfucking","motherfuckings","motherfuckka","motherfucks","muff","mutha","muthafecker","muthafuckker","muther","mutherfucker","n1gga","n1gger","nazi","nigg3r","nigg4h","nigga","niggah","niggas","niggaz","nigger","niggers","nob","nob jokey","nobhead","nobjocky","nobjokey","numbnuts","nutsack","orgasim","orgasims","orgasm","orgasms","p0rn","pawn","pecker","penis","penisfucker","phonesex","phuck","phuk","phuked","phuking","phukked","phukking","phuks","phuq","pigfucker","pimpis","piss","pissed","pisser","pissers","pisses","pissflaps","pissin","pissing","pissoff","poop","porn","porno","pornography","pornos","prick","pricks","pron","pube","pusse","pussi","pussies","pussy","pussys","rectum","retard","rimjaw","rimming","s hit","s.o.b.","sadist","schlong","screwing","scroat","scrote","scrotum","semen","sex","sh!+","sh!t","sh1t","shag","shagger","shaggin","shagging","shemale","shi+","shit","shitdick","shite","shited","shitey","shitfuck","shitfull","shithead","shiting","shitings","shits","shitted","shitter","shitters","shitting","shittings","shitty","skank","slut","sluts","smegma","smut","snatch","son-of-a-bitch","spac","spunk","s_h_i_t","t1tt1e5","t1tties","teets","teez","testical","testicle","tit","titfuck","tits","titt","tittie5","tittiefucker","titties","tittyfuck","tittywank","titwank","tosser","turd","tw4t","twat","twathead","twatty","twunt","twunter","v14gra","v1gra","vagina","viagra","vulva","w00se","wang","wank","wanker","wanky","whoar","whore","willies","willy","xrated","xxx"]},function(e,s){e.exports={"4r5e":1,"5h1t":1,"5hit":1,a55:1,anal:1,anus:1,ar5e:1,arrse:1,arse:1,ass:1,"ass-fucker":1,asses:1,assfucker:1,assfukka:1,asshole:1,assholes:1,asswhole:1,a_s_s:1,"b!tch":1,b00bs:1,b17ch:1,b1tch:1,ballbag:1,balls:1,ballsack:1,bastard:1,beastial:1,beastiality:1,bellend:1,bestial:1,bestiality:1,"bi+ch":1,biatch:1,bitch:1,bitcher:1,bitchers:1,bitches:1,bitchin:1,bitching:1,bloody:1,"blow job":1,blowjob:1,blowjobs:1,boiolas:1,bollock:1,bollok:1,boner:1,boob:1,boobs:1,booobs:1,boooobs:1,booooobs:1,booooooobs:1,breasts:1,buceta:1,bugger:1,bum:1,"bunny fucker":1,butt:1,butthole:1,buttmuch:1,buttplug:1,c0ck:1,c0cksucker:1,"carpet muncher":1,cawk:1,chink:1,cipa:1,cl1t:1,clit:1,clitoris:1,clits:1,cnut:1,cock:1,"cock-sucker":1,cockface:1,cockhead:1,cockmunch:1,cockmuncher:1,cocks:1,cocksuck:1,cocksucked:1,cocksucker:1,cocksucking:1,cocksucks:1,cocksuka:1,cocksukka:1,cok:1,cokmuncher:1,coksucka:1,coon:1,cox:1,crap:1,cum:1,cummer:1,cumming:1,cums:1,cumshot:1,cunilingus:1,cunillingus:1,cunnilingus:1,cunt:1,cuntlick:1,cuntlicker:1,cuntlicking:1,cunts:1,cyalis:1,cyberfuc:1,cyberfuck:1,cyberfucked:1,cyberfucker:1,cyberfuckers:1,cyberfucking:1,d1ck:1,damn:1,dick:1,dickhead:1,dildo:1,dildos:1,dink:1,dinks:1,dirsa:1,dlck:1,"dog-fucker":1,doggin:1,dogging:1,donkeyribber:1,doosh:1,duche:1,dyke:1,ejaculate:1,ejaculated:1,ejaculates:1,ejaculating:1,ejaculatings:1,ejaculation:1,ejakulate:1,"f u c k":1,"f u c k e r":1,f4nny:1,fag:1,fagging:1,faggitt:1,faggot:1,faggs:1,fagot:1,fagots:1,fags:1,fanny:1,fannyflaps:1,fannyfucker:1,fanyy:1,fatass:1,fcuk:1,fcuker:1,fcuking:1,feck:1,fecker:1,felching:1,fellate:1,fellatio:1,fingerfuck:1,fingerfucked:1,fingerfucker:1,fingerfuckers:1,fingerfucking:1,fingerfucks:1,fistfuck:1,fistfucked:1,fistfucker:1,fistfuckers:1,fistfucking:1,fistfuckings:1,fistfucks:1,flange:1,fook:1,fooker:1,fuck:1,fucka:1,fucked:1,fucker:1,fuckers:1,fuckhead:1,fuckheads:1,fuckin:1,fucking:1,fuckings:1,fuckingshitmotherfucker:1,fuckme:1,fucks:1,fuckwhit:1,fuckwit:1,"fudge packer":1,fudgepacker:1,fuk:1,fuker:1,fukker:1,fukkin:1,fuks:1,fukwhit:1,fukwit:1,fux:1,fux0r:1,f_u_c_k:1,gangbang:1,gangbanged:1,gangbangs:1,gaylord:1,gaysex:1,goatse:1,God:1,"god-dam":1,"god-damned":1,goddamn:1,goddamned:1,hardcoresex:1,hell:1,heshe:1,hoar:1,hoare:1,hoer:1,homo:1,hore:1,horniest:1,horny:1,hotsex:1,"jack-off":1,jackoff:1,jap:1,"jerk-off":1,jism:1,jiz:1,jizm:1,jizz:1,kawk:1,knob:1,knobead:1,knobed:1,knobend:1,knobhead:1,knobjocky:1,knobjokey:1,kock:1,kondum:1,kondums:1,kum:1,kummer:1,kumming:1,kums:1,kunilingus:1,"l3i+ch":1,l3itch:1,labia:1,lust:1,lusting:1,m0f0:1,m0fo:1,m45terbate:1,ma5terb8:1,ma5terbate:1,masochist:1,"master-bate":1,masterb8:1,"masterbat*":1,masterbat3:1,masterbate:1,masterbation:1,masterbations:1,masturbate:1,"mo-fo":1,mof0:1,mofo:1,mothafuck:1,mothafucka:1,mothafuckas:1,mothafuckaz:1,mothafucked:1,mothafucker:1,mothafuckers:1,mothafuckin:1,mothafucking:1,mothafuckings:1,mothafucks:1,"mother fucker":1,motherfuck:1,motherfucked:1,motherfucker:1,motherfuckers:1,motherfuckin:1,motherfucking:1,motherfuckings:1,motherfuckka:1,motherfucks:1,muff:1,mutha:1,muthafecker:1,muthafuckker:1,muther:1,mutherfucker:1,n1gga:1,n1gger:1,nazi:1,nigg3r:1,nigg4h:1,nigga:1,niggah:1,niggas:1,niggaz:1,nigger:1,niggers:1,nob:1,"nob jokey":1,nobhead:1,nobjocky:1,nobjokey:1,numbnuts:1,nutsack:1,orgasim:1,orgasims:1,orgasm:1,orgasms:1,p0rn:1,pawn:1,pecker:1,penis:1,penisfucker:1,phonesex:1,phuck:1,phuk:1,phuked:1,phuking:1,phukked:1,phukking:1,phuks:1,phuq:1,pigfucker:1,pimpis:1,piss:1,pissed:1,pisser:1,pissers:1,pisses:1,pissflaps:1,pissin:1,pissing:1,pissoff:1,poop:1,porn:1,porno:1,pornography:1,pornos:1,prick:1,pricks:1,pron:1,pube:1,pusse:1,pussi:1,pussies:1,pussy:1,pussys:1,rectum:1,retard:1,rimjaw:1,rimming:1,"s hit":1,"s.o.b.":1,sadist:1,schlong:1,screwing:1,scroat:1,scrote:1,scrotum:1,semen:1,sex:1,"sh!+":1,"sh!t":1,sh1t:1,shag:1,shagger:1,shaggin:1,shagging:1,shemale:1,"shi+":1,shit:1,shitdick:1,shite:1,shited:1,shitey:1,shitfuck:1,shitfull:1,shithead:1,shiting:1,shitings:1,shits:1,shitted:1,shitter:1,shitters:1,shitting:1,shittings:1,shitty:1,skank:1,slut:1,sluts:1,smegma:1,smut:1,snatch:1,"son-of-a-bitch":1,spac:1,spunk:1,s_h_i_t:1,t1tt1e5:1,t1tties:1,teets:1,teez:1,testical:1,testicle:1,tit:1,titfuck:1,tits:1,titt:1,tittie5:1,tittiefucker:1,titties:1,tittyfuck:1,tittywank:1,titwank:1,tosser:1,turd:1,tw4t:1,twat:1,twathead:1,twatty:1,twunt:1,twunter:1,v14gra:1,v1gra:1,vagina:1,viagra:1,vulva:1,w00se:1,wang:1,wank:1,wanker:1,wanky:1,whoar:1,whore:1,willies:1,willy:1,xrated:1,xxx:1}},function(e,s,t){e.exports={object:t(5),array:t(4),regex:t(3)}},function(e){e.exports={words:["ahole","anus","ash0le","ash0les","asholes","ass","Ass Monkey","Assface","assh0le","assh0lez","asshole","assholes","assholz","asswipe","azzhole","bassterds","bastard","bastards","bastardz","basterds","basterdz","Biatch","bitch","bitches","Blow Job","boffing","butthole","buttwipe","c0ck","c0cks","c0k","Carpet Muncher","cawk","cawks","Clit","cnts","cntz","cock","cockhead","cock-head","cocks","CockSucker","cock-sucker","crap","cum","cunt","cunts","cuntz","dick","dild0","dild0s","dildo","dildos","dilld0","dilld0s","dominatricks","dominatrics","dominatrix","dyke","enema","f u c k","f u c k e r","fag","fag1t","faget","fagg1t","faggit","faggot","fagit","fags","fagz","faig","faigs","fart","flipping the bird","fuck","fucker","fuckin","fucking","fucks","Fudge Packer","fuk","Fukah","Fuken","fuker","Fukin","Fukk","Fukkah","Fukken","Fukker","Fukkin","g00k","gay","gayboy","gaygirl","gays","gayz","God-damned","h00r","h0ar","h0re","hells","hoar","hoor","hoore","jackoff","jap","japs","jerk-off","jisim","jiss","jizm","jizz","knob","knobs","knobz","kunt","kunts","kuntz","Lesbian","Lezzian","Lipshits","Lipshitz","masochist","masokist","massterbait","masstrbait","masstrbate","masterbaiter","masterbate","masterbates","Motha Fucker","Motha Fuker","Motha Fukkah","Motha Fukker","Mother Fucker","Mother Fukah","Mother Fuker","Mother Fukkah","Mother Fukker","mother-fucker","Mutha Fucker","Mutha Fukah","Mutha Fuker","Mutha Fukkah","Mutha Fukker","n1gr","nastt","nigger;","nigur;","niiger;","niigr;","orafis","orgasim;","orgasm","orgasum","oriface","orifice","orifiss","packi","packie","packy","paki","pakie","paky","pecker","peeenus","peeenusss","peenus","peinus","pen1s","penas","penis","penis-breath","penus","penuus","Phuc","Phuck","Phuk","Phuker","Phukker","polac","polack","polak","Poonani","pr1c","pr1ck","pr1k","pusse","pussee","pussy","puuke","puuker","queer","queers","queerz","qweers","qweerz","qweir","recktum","rectum","retard","sadist","scank","schlong","screwing","semen","sex","sexy","Sh!t","sh1t","sh1ter","sh1ts","sh1tter","sh1tz","shit","shits","shitter","Shitty","Shity","shitz","Shyt","Shyte","Shytty","Shyty","skanck","skank","skankee","skankey","skanks","Skanky","slag","slut","sluts","Slutty","slutz","son-of-a-bitch","tit","turd","va1jina","vag1na","vagiina","vagina","vaj1na","vajina","vullva","vulva","w0p","wh00r","wh0re","whore","xrated","xxx","b!+ch","bitch","blowjob","clit","arschloch","fuck","shit","ass","asshole","b!tch","b17ch","b1tch","bastard","bi+ch","boiolas","buceta","c0ck","cawk","chink","cipa","clits","cock","cum","cunt","dildo","dirsa","ejakulate","fatass","fcuk","fuk","fux0r","hoer","hore","jism","kawk","l3itch","l3i+ch","lesbian","masturbate","masterbat*","masterbat3","motherfucker","s.o.b.","mofo","nazi","nigga","nigger","nutsack","phuck","pimpis","pusse","pussy","scrotum","sh!t","shemale","shi+","sh!+","slut","smut","teets","tits","boobs","b00bs","teez","testical","testicle","titt","w00se","jackoff","wank","whoar","whore","*damn","*dyke","*fuck*","*shit*","@$$","amcik","andskota","arse*","assrammer","ayir","bi7ch","bitch*","bollock*","breasts","butt-pirate","cabron","cazzo","chraa","chuj","Cock*","cunt*","d4mn","daygo","dego","dick*","dike*","dupa","dziwka","ejackulate","Ekrem*","Ekto","enculer","faen","fag*","fanculo","fanny","feces","feg","Felcher","ficken","fitt*","Flikker","foreskin","Fotze","Fu(*","fuk*","futkretzn","gay","gook","guiena","h0r","h4x0r","hell","helvete","hoer*","honkey","Huevon","hui","injun","jizz","kanker*","kike","klootzak","kraut","knulle","kuk","kuksuger","Kurac","kurwa","kusi*","kyrpa*","lesbo","mamhoon","masturbat*","merd*","mibun","monkleigh","mouliewop","muie","mulkku","muschi","nazis","nepesaurio","nigger*","orospu","paska*","perse","picka","pierdol*","pillu*","pimmel","piss*","pizda","poontsee","poop","porn","p0rn","pr0n","preteen","pula","pule","puta","puto","qahbeh","queef*","rautenberg","schaffer","scheiss*","schlampe","schmuck","screw","sh!t*","sharmuta","sharmute","shipal","shiz","skribz","skurwysyn","sphencter","spic","spierdalaj","splooge","suka","b00b*","testicle*","titt*","twat","vittu","wank*","wetback*","wichser","wop*","yed","zabourah"]}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhZC13b3Jkcy9saWIvYmFkd29yZHMuanMiLCJ3ZWJwYWNrOi8vLy4vZGV2L2hlbHBlcnMvZG9tZWxlbWVudC50cyIsIndlYnBhY2s6Ly8vLi9kZXYvZ3VpL3Njb3JlLnRzIiwid2VicGFjazovLy8uL2Rldi9oZWxwZXJzL3dpbmRvd2V2ZW50aGFuZGxlci50cyIsIndlYnBhY2s6Ly8vLi9kZXYvZ3VpL21lc3NhZ2VzY3JlZW4udHMiLCJ3ZWJwYWNrOi8vLy4vZGV2L2RhdGFzZXJ2aWNlLnRzIiwid2VicGFjazovLy8uL2Rldi9ndWkvaGlnaHNjb3JlbGlzdC50cyIsIndlYnBhY2s6Ly8vLi9kZXYvZ3VpL25hbWVmb3JtLnRzIiwid2VicGFjazovLy8uL2Rldi9ndWkvZ3VpLnRzIiwid2VicGFjazovLy8uL2Rldi9oZWxwZXJzL3V0aWxzLnRzIiwid2VicGFjazovLy8uL2Rldi9sZXZlbC9ibG9jay50cyIsIndlYnBhY2s6Ly8vLi9kZXYvbGV2ZWwvcGxheWVyLnRzIiwid2VicGFjazovLy8uL2Rldi9sZXZlbC90aW1lci50cyIsIndlYnBhY2s6Ly8vLi9kZXYvbGV2ZWwvbGV2ZWwudHMiLCJ3ZWJwYWNrOi8vLy4vZGV2L21haW4udHMiLCJ3ZWJwYWNrOi8vLy4vZGV2L2d1aS9ub21vYmlsZS50cyIsIndlYnBhY2s6Ly8vLi9kZXYvZ2FtZS50cyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFkd29yZHMtbGlzdC9saWIvcmVnZXhwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWR3b3Jkcy1saXN0L2xpYi9hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFkd29yZHMtbGlzdC9saWIvb2JqZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9iYWR3b3Jkcy1saXN0L2xpYi9pbmRleC5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJ2YWx1ZSIsIm4iLCJfX2VzTW9kdWxlIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwibG9jYWxMaXN0Iiwid29yZHMiLCJiYXNlTGlzdCIsImFycmF5IiwiRmlsdGVyIiwib3B0aW9ucyIsInRoaXMiLCJsaXN0IiwiZW1wdHlMaXN0IiwiQXJyYXkiLCJjb25jYXQiLCJhcHBseSIsImV4Y2x1ZGUiLCJwbGFjZUhvbGRlciIsInJlZ2V4IiwicmVwbGFjZVJlZ2V4IiwiaXNQcm9mYW5lIiwic3RyaW5nIiwic3BsaXQiLCJtYXAiLCJ3IiwidG9Mb3dlckNhc2UiLCJyZXBsYWNlIiwiZmlsdGVyIiwiaXNQcm9mYW5lTGlrZSIsInNoaWZ0Iiwid29yZCIsImluZGV4T2YiLCJSZWdFeHAiLCJyZWR1Y2UiLCJvdXRjb21lIiwid29yZEV4cCIsInRlc3QiLCJyZXBsYWNlV29yZCIsImNsZWFuIiwiYmluZCIsImpvaW4iLCJhZGRXb3JkcyIsImZvckVhY2giLCJzcGxpY2UiLCJyZW1vdmVXb3JkcyIsInNsaWNlIiwiYXJndW1lbnRzIiwicHVzaCIsIkRvbUVsZW1lbnQiLCJbb2JqZWN0IE9iamVjdF0iLCJ0eXBlIiwieCIsInkiLCJwYXJlbnRDbGFzcyIsImVsIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwibWFpbiIsImdldEVsZW1lbnRCeUlkIiwiRXJyb3IiLCJzdHlsZSIsInRyYW5zZm9ybSIsImNsYXNzTGlzdCIsImFkZCIsImFwcGVuZENoaWxkIiwicGFyZW50RWwiLCJxdWVyeVNlbGVjdG9yIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0Iiwic2NvcmVfU2NvcmUiLCJzdXBlciIsInNjb3JlIiwicmVuZGVyVGVtcGxhdGUiLCJpbm5lckhUTUwiLCJ0b1N0cmluZyIsInJlc2V0IiwiV2luZG93RXZlbnRIYW5kbGVyIiwiZXZlbnQiLCJmdW5jIiwiZnVuY3Rpb25NYXAiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIm1lc3NhZ2VzY3JlZW5fTWVzc2FnZVNjcmVlbiIsImlzQWN0aXZlIiwiZ2FtZVN0YXRlcyIsImdhbWU6c3RhcnQiLCJoZWFkZXIiLCJib2R5IiwiY2xhc3NOYW1lIiwia2V5Ym9hcmRUcmlnZ2VyS2V5IiwiZ2FtZTplbmQiLCJsZXZlbDpzdWNjZXNzIiwibGV2ZWw6ZmFpbGVkIiwic2hvdyIsImUiLCJrZXlCb2FyZEhhbmRsZXIiLCJrZXkiLCJjdXJyZW50RXZlbnQiLCJkaXNwYXRjaEV2ZW50IiwiRXZlbnQiLCJib2R5UmVwbGFjZW1lbnRzIiwibWVzc2FnZUhlYWRlciIsIm1lc3NhZ2VCb2R5IiwicmVwbGFjZW1lbnQiLCJyZW1vdmUiLCJkYXRhc2VydmljZV9EYXRhU2VydmljZSIsImVuZFBvaW50TGlzdCIsImNvbmZpZyIsIm1MYWIiLCJkYXRhYmFzZU5hbWUiLCJjb2xsZWN0aW9uTmFtZSIsImFwaUtleSIsImVuZFBvaW50U2F2ZSIsIm9mZmxpbmVVc2VyU2NvcmVzIiwic2F2ZVNjb3JlVG9NbGFiIiwiaW5zdGFuY2UiLCJ1c2VyU2NvcmUiLCJmdW5jdGlvbmFsaXRpZXMiLCJuYXZpZ2F0b3IiLCJvbkxpbmUiLCJQcm9taXNlIiwicmVzb2x2ZSIsInVybCIsImJhc2VVcmwiLCJmZXRjaCIsIkpTT04iLCJzdHJpbmdpZnkiLCJoZWFkZXJzIiwiY29udGVudC10eXBlIiwibWV0aG9kIiwibW9kZSIsInRoZW4iLCJyZXNwb25zZSIsImpzb24iLCJwYXJzZSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJkYXRhIiwic2V0SXRlbSIsImxlbmd0aCIsImFsbCIsInVzZXIiLCJzYXZlU2NvcmUiLCJoaWdoc2NvcmVsaXN0X0hpZ2hTY29yZUxpc3QiLCJ0Qm9keSIsImRhdGFTZXJ2aWNlIiwiZ2V0SW5zdGFuY2UiLCJsb2FkU2NvcmVEYXRhIiwidXBkYXRlRGF0YSIsImRldGFpbCIsInNob3dTY3JlZW4iLCJnZXRTY29yZXMiLCJzY29yZXMiLCJnZXRUYm9keVRlbXBsYXRlIiwic29ydCIsImEiLCJiIiwiaXRlbSIsImluZGV4IiwibmFtZWZvcm1fTmFtZUZvcm0iLCJuYW1lTWF4TGVuZ3RoIiwiYmFkd29yZHNfZGVmYXVsdCIsImdhbWUiLCJiYWRXb3JkcyIsImZvcm0iLCJuYW1lRmllbGQiLCJmZWVkYmFja01lc3NhZ2UiLCJmb2N1cyIsInByZXZlbnREZWZhdWx0IiwiQ3VzdG9tRXZlbnQiLCJndWlfR1VJIiwibmFtZUZvcm1WaXNpYmxlIiwiaGlnaFNjb3JlTGlzdFZpc2libGUiLCJtZXNzYWdlU2NyZWVuIiwibmFtZUZvcm0iLCJ1cGRhdGUiLCJoaWdoU2NvcmVMaXN0IiwiaGlkZSIsIm1heFNjb3JlIiwiX19TQ09SRV9fIiwiX19NQVhfU0NPUkVfXyIsIlV0aWxzIiwiTWF0aCIsInJvdW5kIiwicmFuZG9tIiwibWluIiwibWF4IiwiZmxvb3IiLCJsZWZ0IiwicmlnaHQiLCJ0b3AiLCJib3R0b20iLCJ1c2VyQWdlbnQiLCJ2ZW5kb3IiLCJzdWJzdHIiLCJibG9ja19CbG9jayIsImNvbG9yIiwic3BlZWQiLCJ3aWR0aCIsImhlaWdodCIsImRlc3RpbmF0aW9uIiwiYmFja2dyb3VuZEltYWdlIiwiZ2V0UmFuZG9tSW50Iiwib3V0ZXJXaWR0aCIsImRvY3VtZW50RWxlbWVudCIsImNsaWVudEhlaWdodCIsInBsYXllcl9QbGF5ZXIiLCJncm93dGhGYWN0b3IiLCJwbGF5ZXIiLCJzcGVlZEluY3JlYXNlRmFjdG9yIiwia2V5c0FsbG93ZWQiLCJrZXlzUHJlc3NlZCIsImJvcmRlclJhZGl1cyIsImtleURvd25IYW5kbGVyIiwia2V5VXBIYW5kbGVyIiwia2V5UHJlc3NlZFBvc2l0aW9uIiwiYmxvY2siLCJiYWNrZ3JvdW5kQ29sb3IiLCJ0aW1lcl9UaW1lciIsInNlY29uZHMiLCJzZWNvbmRzUGVyTGV2ZWwiLCJpbnRlcnZhbElkIiwic2V0SW50ZXJ2YWwiLCJjbGVhckludGVydmFsIiwibGV2ZWxfTGV2ZWwiLCJ0b3RhbEJsb2NrcyIsInNjb3JlUGVyQmxvY2siLCJibG9ja3MiLCJmYWlsZWQiLCJ0aW1lciIsImdldFJhbmRvbUNvbG9yIiwiYmxvY2tTcGVlZCIsImJsb2NrUGl4ZWxzIiwiZGVzdHJveSIsImNoZWNrQ29sbGlzaW9uIiwiZ2V0Q2xpZW50UmVhY3QiLCJibG9ja0NhdWdodCIsImV2ZW50VHlwZSIsImlzTW9iaWxlIiwibGV2ZWxzUGVyR2FtZSIsImN1cnJlbnRMZXZlbHNQbGF5ZWQiLCJzdGFydEVsZW1lbnRzUGVyTGV2ZWwiLCJlbGVtZW50c0luY3JlYXNlUGVyTGV2ZWwiLCJzY29yZVBlckVsZW1lbnQiLCJndWkiLCJjYWxjdWxhdGVNYXhTY29yZSIsImdhbWVMb29wIiwic3RhcnROZXdMZXZlbCIsInJlc3RhcnQiLCJsZXZlbCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImdhbWVFbmQiLCI0cjVlIiwiNWgxdCIsIjVoaXQiLCJhNTUiLCJhbmFsIiwiYW51cyIsImFyNWUiLCJhcnJzZSIsImFyc2UiLCJhc3MiLCJhc3MtZnVja2VyIiwiYXNzZXMiLCJhc3NmdWNrZXIiLCJhc3NmdWtrYSIsImFzc2hvbGUiLCJhc3Nob2xlcyIsImFzc3dob2xlIiwiYV9zX3MiLCJiIXRjaCIsImIwMGJzIiwiYjE3Y2giLCJiMXRjaCIsImJhbGxiYWciLCJiYWxscyIsImJhbGxzYWNrIiwiYmFzdGFyZCIsImJlYXN0aWFsIiwiYmVhc3RpYWxpdHkiLCJiZWxsZW5kIiwiYmVzdGlhbCIsImJlc3RpYWxpdHkiLCJiaStjaCIsImJpYXRjaCIsImJpdGNoIiwiYml0Y2hlciIsImJpdGNoZXJzIiwiYml0Y2hlcyIsImJpdGNoaW4iLCJiaXRjaGluZyIsImJsb29keSIsImJsb3cgam9iIiwiYmxvd2pvYiIsImJsb3dqb2JzIiwiYm9pb2xhcyIsImJvbGxvY2siLCJib2xsb2siLCJib25lciIsImJvb2IiLCJib29icyIsImJvb29icyIsImJvb29vYnMiLCJib29vb29icyIsImJvb29vb29vYnMiLCJicmVhc3RzIiwiYnVjZXRhIiwiYnVnZ2VyIiwiYnVtIiwiYnVubnkgZnVja2VyIiwiYnV0dCIsImJ1dHRob2xlIiwiYnV0dG11Y2giLCJidXR0cGx1ZyIsImMwY2siLCJjMGNrc3Vja2VyIiwiY2FycGV0IG11bmNoZXIiLCJjYXdrIiwiY2hpbmsiLCJjaXBhIiwiY2wxdCIsImNsaXQiLCJjbGl0b3JpcyIsImNsaXRzIiwiY251dCIsImNvY2siLCJjb2NrLXN1Y2tlciIsImNvY2tmYWNlIiwiY29ja2hlYWQiLCJjb2NrbXVuY2giLCJjb2NrbXVuY2hlciIsImNvY2tzIiwiY29ja3N1Y2siLCJjb2Nrc3Vja2VkIiwiY29ja3N1Y2tlciIsImNvY2tzdWNraW5nIiwiY29ja3N1Y2tzIiwiY29ja3N1a2EiLCJjb2Nrc3Vra2EiLCJjb2siLCJjb2ttdW5jaGVyIiwiY29rc3Vja2EiLCJjb29uIiwiY294IiwiY3JhcCIsImN1bSIsImN1bW1lciIsImN1bW1pbmciLCJjdW1zIiwiY3Vtc2hvdCIsImN1bmlsaW5ndXMiLCJjdW5pbGxpbmd1cyIsImN1bm5pbGluZ3VzIiwiY3VudCIsImN1bnRsaWNrIiwiY3VudGxpY2tlciIsImN1bnRsaWNraW5nIiwiY3VudHMiLCJjeWFsaXMiLCJjeWJlcmZ1YyIsImN5YmVyZnVjayIsImN5YmVyZnVja2VkIiwiY3liZXJmdWNrZXIiLCJjeWJlcmZ1Y2tlcnMiLCJjeWJlcmZ1Y2tpbmciLCJkMWNrIiwiZGFtbiIsImRpY2siLCJkaWNraGVhZCIsImRpbGRvIiwiZGlsZG9zIiwiZGluayIsImRpbmtzIiwiZGlyc2EiLCJkbGNrIiwiZG9nLWZ1Y2tlciIsImRvZ2dpbiIsImRvZ2dpbmciLCJkb25rZXlyaWJiZXIiLCJkb29zaCIsImR1Y2hlIiwiZHlrZSIsImVqYWN1bGF0ZSIsImVqYWN1bGF0ZWQiLCJlamFjdWxhdGVzIiwiZWphY3VsYXRpbmciLCJlamFjdWxhdGluZ3MiLCJlamFjdWxhdGlvbiIsImVqYWt1bGF0ZSIsImYgdSBjIGsiLCJmIHUgYyBrIGUgciIsImY0bm55IiwiZmFnIiwiZmFnZ2luZyIsImZhZ2dpdHQiLCJmYWdnb3QiLCJmYWdncyIsImZhZ290IiwiZmFnb3RzIiwiZmFncyIsImZhbm55IiwiZmFubnlmbGFwcyIsImZhbm55ZnVja2VyIiwiZmFueXkiLCJmYXRhc3MiLCJmY3VrIiwiZmN1a2VyIiwiZmN1a2luZyIsImZlY2siLCJmZWNrZXIiLCJmZWxjaGluZyIsImZlbGxhdGUiLCJmZWxsYXRpbyIsImZpbmdlcmZ1Y2siLCJmaW5nZXJmdWNrZWQiLCJmaW5nZXJmdWNrZXIiLCJmaW5nZXJmdWNrZXJzIiwiZmluZ2VyZnVja2luZyIsImZpbmdlcmZ1Y2tzIiwiZmlzdGZ1Y2siLCJmaXN0ZnVja2VkIiwiZmlzdGZ1Y2tlciIsImZpc3RmdWNrZXJzIiwiZmlzdGZ1Y2tpbmciLCJmaXN0ZnVja2luZ3MiLCJmaXN0ZnVja3MiLCJmbGFuZ2UiLCJmb29rIiwiZm9va2VyIiwiZnVjayIsImZ1Y2thIiwiZnVja2VkIiwiZnVja2VyIiwiZnVja2VycyIsImZ1Y2toZWFkIiwiZnVja2hlYWRzIiwiZnVja2luIiwiZnVja2luZyIsImZ1Y2tpbmdzIiwiZnVja2luZ3NoaXRtb3RoZXJmdWNrZXIiLCJmdWNrbWUiLCJmdWNrcyIsImZ1Y2t3aGl0IiwiZnVja3dpdCIsImZ1ZGdlIHBhY2tlciIsImZ1ZGdlcGFja2VyIiwiZnVrIiwiZnVrZXIiLCJmdWtrZXIiLCJmdWtraW4iLCJmdWtzIiwiZnVrd2hpdCIsImZ1a3dpdCIsImZ1eCIsImZ1eDByIiwiZl91X2NfayIsImdhbmdiYW5nIiwiZ2FuZ2JhbmdlZCIsImdhbmdiYW5ncyIsImdheWxvcmQiLCJnYXlzZXgiLCJnb2F0c2UiLCJHb2QiLCJnb2QtZGFtIiwiZ29kLWRhbW5lZCIsImdvZGRhbW4iLCJnb2RkYW1uZWQiLCJoYXJkY29yZXNleCIsImhlbGwiLCJoZXNoZSIsImhvYXIiLCJob2FyZSIsImhvZXIiLCJob21vIiwiaG9yZSIsImhvcm5pZXN0IiwiaG9ybnkiLCJob3RzZXgiLCJqYWNrLW9mZiIsImphY2tvZmYiLCJqYXAiLCJqZXJrLW9mZiIsImppc20iLCJqaXoiLCJqaXptIiwiaml6eiIsImthd2siLCJrbm9iIiwia25vYmVhZCIsImtub2JlZCIsImtub2JlbmQiLCJrbm9iaGVhZCIsImtub2Jqb2NreSIsImtub2Jqb2tleSIsImtvY2siLCJrb25kdW0iLCJrb25kdW1zIiwia3VtIiwia3VtbWVyIiwia3VtbWluZyIsImt1bXMiLCJrdW5pbGluZ3VzIiwibDNpK2NoIiwibDNpdGNoIiwibGFiaWEiLCJsdXN0IiwibHVzdGluZyIsIm0wZjAiLCJtMGZvIiwibTQ1dGVyYmF0ZSIsIm1hNXRlcmI4IiwibWE1dGVyYmF0ZSIsIm1hc29jaGlzdCIsIm1hc3Rlci1iYXRlIiwibWFzdGVyYjgiLCJtYXN0ZXJiYXQqIiwibWFzdGVyYmF0MyIsIm1hc3RlcmJhdGUiLCJtYXN0ZXJiYXRpb24iLCJtYXN0ZXJiYXRpb25zIiwibWFzdHVyYmF0ZSIsIm1vLWZvIiwibW9mMCIsIm1vZm8iLCJtb3RoYWZ1Y2siLCJtb3RoYWZ1Y2thIiwibW90aGFmdWNrYXMiLCJtb3RoYWZ1Y2theiIsIm1vdGhhZnVja2VkIiwibW90aGFmdWNrZXIiLCJtb3RoYWZ1Y2tlcnMiLCJtb3RoYWZ1Y2tpbiIsIm1vdGhhZnVja2luZyIsIm1vdGhhZnVja2luZ3MiLCJtb3RoYWZ1Y2tzIiwibW90aGVyIGZ1Y2tlciIsIm1vdGhlcmZ1Y2siLCJtb3RoZXJmdWNrZWQiLCJtb3RoZXJmdWNrZXIiLCJtb3RoZXJmdWNrZXJzIiwibW90aGVyZnVja2luIiwibW90aGVyZnVja2luZyIsIm1vdGhlcmZ1Y2tpbmdzIiwibW90aGVyZnVja2thIiwibW90aGVyZnVja3MiLCJtdWZmIiwibXV0aGEiLCJtdXRoYWZlY2tlciIsIm11dGhhZnVja2tlciIsIm11dGhlciIsIm11dGhlcmZ1Y2tlciIsIm4xZ2dhIiwibjFnZ2VyIiwibmF6aSIsIm5pZ2czciIsIm5pZ2c0aCIsIm5pZ2dhIiwibmlnZ2FoIiwibmlnZ2FzIiwibmlnZ2F6IiwibmlnZ2VyIiwibmlnZ2VycyIsIm5vYiIsIm5vYiBqb2tleSIsIm5vYmhlYWQiLCJub2Jqb2NreSIsIm5vYmpva2V5IiwibnVtYm51dHMiLCJudXRzYWNrIiwib3JnYXNpbSIsIm9yZ2FzaW1zIiwib3JnYXNtIiwib3JnYXNtcyIsInAwcm4iLCJwYXduIiwicGVja2VyIiwicGVuaXMiLCJwZW5pc2Z1Y2tlciIsInBob25lc2V4IiwicGh1Y2siLCJwaHVrIiwicGh1a2VkIiwicGh1a2luZyIsInBodWtrZWQiLCJwaHVra2luZyIsInBodWtzIiwicGh1cSIsInBpZ2Z1Y2tlciIsInBpbXBpcyIsInBpc3MiLCJwaXNzZWQiLCJwaXNzZXIiLCJwaXNzZXJzIiwicGlzc2VzIiwicGlzc2ZsYXBzIiwicGlzc2luIiwicGlzc2luZyIsInBpc3NvZmYiLCJwb29wIiwicG9ybiIsInBvcm5vIiwicG9ybm9ncmFwaHkiLCJwb3Jub3MiLCJwcmljayIsInByaWNrcyIsInByb24iLCJwdWJlIiwicHVzc2UiLCJwdXNzaSIsInB1c3NpZXMiLCJwdXNzeSIsInB1c3N5cyIsInJlY3R1bSIsInJldGFyZCIsInJpbWphdyIsInJpbW1pbmciLCJzIGhpdCIsInMuby5iLiIsInNhZGlzdCIsInNjaGxvbmciLCJzY3Jld2luZyIsInNjcm9hdCIsInNjcm90ZSIsInNjcm90dW0iLCJzZW1lbiIsInNleCIsInNoISsiLCJzaCF0Iiwic2gxdCIsInNoYWciLCJzaGFnZ2VyIiwic2hhZ2dpbiIsInNoYWdnaW5nIiwic2hlbWFsZSIsInNoaSsiLCJzaGl0Iiwic2hpdGRpY2siLCJzaGl0ZSIsInNoaXRlZCIsInNoaXRleSIsInNoaXRmdWNrIiwic2hpdGZ1bGwiLCJzaGl0aGVhZCIsInNoaXRpbmciLCJzaGl0aW5ncyIsInNoaXRzIiwic2hpdHRlZCIsInNoaXR0ZXIiLCJzaGl0dGVycyIsInNoaXR0aW5nIiwic2hpdHRpbmdzIiwic2hpdHR5Iiwic2thbmsiLCJzbHV0Iiwic2x1dHMiLCJzbWVnbWEiLCJzbXV0Iiwic25hdGNoIiwic29uLW9mLWEtYml0Y2giLCJzcGFjIiwic3B1bmsiLCJzX2hfaV90IiwidDF0dDFlNSIsInQxdHRpZXMiLCJ0ZWV0cyIsInRlZXoiLCJ0ZXN0aWNhbCIsInRlc3RpY2xlIiwidGl0IiwidGl0ZnVjayIsInRpdHMiLCJ0aXR0IiwidGl0dGllNSIsInRpdHRpZWZ1Y2tlciIsInRpdHRpZXMiLCJ0aXR0eWZ1Y2siLCJ0aXR0eXdhbmsiLCJ0aXR3YW5rIiwidG9zc2VyIiwidHVyZCIsInR3NHQiLCJ0d2F0IiwidHdhdGhlYWQiLCJ0d2F0dHkiLCJ0d3VudCIsInR3dW50ZXIiLCJ2MTRncmEiLCJ2MWdyYSIsInZhZ2luYSIsInZpYWdyYSIsInZ1bHZhIiwidzAwc2UiLCJ3YW5nIiwid2FuayIsIndhbmtlciIsIndhbmt5Iiwid2hvYXIiLCJ3aG9yZSIsIndpbGxpZXMiLCJ3aWxseSIsInhyYXRlZCIsInh4eCJdLCJtYXBwaW5ncyI6ImFBQ0EsSUFBQUEsS0FHQSxTQUFBQyxFQUFBQyxHQUdBLEdBQUFGLEVBQUFFLEdBQ0EsT0FBQUYsRUFBQUUsR0FBQUMsUUFHQSxJQUFBQyxFQUFBSixFQUFBRSxJQUNBRyxFQUFBSCxFQUNBSSxHQUFBLEVBQ0FILFlBVUEsT0FOQUksRUFBQUwsR0FBQU0sS0FBQUosRUFBQUQsUUFBQUMsSUFBQUQsUUFBQUYsR0FHQUcsRUFBQUUsR0FBQSxFQUdBRixFQUFBRCxRQUtBRixFQUFBUSxFQUFBRixFQUdBTixFQUFBUyxFQUFBVixFQUdBQyxFQUFBVSxFQUFBLFNBQUFSLEVBQUFTLEVBQUFDLEdBQ0FaLEVBQUFhLEVBQUFYLEVBQUFTLElBQ0FHLE9BQUFDLGVBQUFiLEVBQUFTLEdBQ0FLLGNBQUEsRUFDQUMsWUFBQSxFQUNBQyxJQUFBTixLQU1BWixFQUFBbUIs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LEVBQUFELFNBQWtCbVIsT0FBQSxFQUFBQyxPQUFBLEVBQUFDLE9BQUEsRUFBQUMsSUFBQSxFQUFBQyxLQUFBLEVBQUFDLEtBQUEsRUFBQUMsS0FBQSxFQUFBQyxNQUFBLEVBQUFDLEtBQUEsRUFBQUMsSUFBQSxFQUFBQyxhQUFBLEVBQUFDLE1BQUEsRUFBQUMsVUFBQSxFQUFBQyxTQUFBLEVBQUFDLFFBQUEsRUFBQUMsU0FBQSxFQUFBQyxTQUFBLEVBQUFDLE1BQUEsRUFBQUMsUUFBQSxFQUFBQyxNQUFBLEVBQUFDLE1BQUEsRUFBQUMsTUFBQSxFQUFBQyxRQUFBLEVBQUFDLE1BQUEsRUFBQUMsU0FBQSxFQUFBQyxRQUFBLEVBQUFDLFNBQUEsRUFBQUMsWUFBQSxFQUFBQyxRQUFBLEVBQUFDLFFBQUEsRUFBQUMsV0FBQSxFQUFBQyxRQUFBLEVBQUFDLE9BQUEsRUFBQUMsTUFBQSxFQUFBQyxRQUFBLEVBQUFDLFNBQUEsRUFBQUMsUUFBQSxFQUFBQyxRQUFBLEVBQUFDLFNBQUEsRUFBQUMsT0FBQSxFQUFBQyxXQUFBLEVBQUFDLFFBQUEsRUFBQUMsU0FBQSxFQUFBQyxRQUFBLEVBQUFDLFFBQUEsRUFBQUMsT0FBQSxFQUFBQyxNQUFBLEVBQUFDLEtBQUEsRUFBQUMsTUFBQSxFQUFBQyxPQUFBLEVBQUFDLFFBQUEsRUFBQUMsU0FBQSxFQUFBQyxXQUFBLEVBQUFDLFFBQUEsRUFBQUMsT0FBQSxFQUFBQyxPQUFBLEVBQUFDLElBQUEsRUFBQUMsZUFBQSxFQUFBQyxLQUFBLEVBQUFDLFNBQUEsRUFBQUMsU0FBQSxFQUFBQyxTQUFBLEVBQUFDLEtBQUEsRUFBQUMsV0FBQSxFQUFBQyxpQkFBQSxFQUFBQyxLQUFBLEVBQUFDLE1BQUEsRUFBQUMsS0FBQSxFQUFBQyxLQUFBLEVBQUFDLEtBQUEsRUFBQUMsU0FBQSxFQUFBQyxNQUFBLEVBQUFDLEtBQUEsRUFBQUMsS0FBQSxFQUFBQyxjQUFBLEVBQUFDLFNBQUEsRUFBQUMsU0FBQSxFQUFBQyxVQUFBLEVBQUFDLFlBQUEsRUFBQUMsTUFBQSxFQUFBQyxTQUFBLEVBQUFDLFdBQUEsRUFBQUMsV0FBQSxFQUFBQyxZQUFBLEVBQUFDLFVBQUEsRUFBQUMsU0FBQSxFQUFBQyxVQUFBLEVBQUFDLElBQUEsRUFBQUMsV0FBQSxFQUFBQyxTQUFBLEVBQUFDLEtBQUEsRUFBQUMsSUFBQSxFQUFBQyxLQUFBLEVBQUFDLElBQUEsRUFBQUMsT0FBQSxFQUFBQyxRQUFBLEVBQUFDLEtBQUEsRUFBQUMsUUFBQSxFQUFBQyxXQUFBLEVBQUFDLFlBQUEsRUFBQUMsWUFBQSxFQUFBQyxLQUFBLEVBQUFDLFNBQUEsRUFBQUMsV0FBQSxFQUFBQyxZQUFBLEVBQUFDLE1BQUEsRUFBQUMsT0FBQSxFQUFBQyxTQUFBLEVBQUFDLFVBQUEsRUFBQUMsWUFBQSxFQUFBQyxZQUFBLEVBQUFDLGFBQUEsRUFBQUMsYUFBQSxFQUFBQyxLQUFBLEVBQUFDLEtBQUEsRUFBQUMsS0FBQSxFQUFBQyxTQUFBLEVBQUFDLE1BQUEsRUFBQUMsT0FBQSxFQUFBQyxLQUFBLEVBQUFDLE1BQUEsRUFBQUMsTUFBQSxFQUFBQyxLQUFBLEVBQUFDLGFBQUEsRUFBQUMsT0FBQSxFQUFBQyxRQUFBLEVBQUFDLGFBQUEsRUFBQUMsTUFBQSxFQUFBQyxNQUFBLEVBQUFDLEtBQUEsRUFBQUMsVUFBQSxFQUFBQyxXQUFBLEVBQUFDLFdBQUEsRUFBQUMsWUFBQSxFQUFBQyxhQUFBLEVBQUFDLFlBQUEsRUFBQUMsVUFBQSxFQUFBQyxVQUFBLEVBQUFDLGNBQUEsRUFBQUMsTUFBQSxFQUFBQyxJQUFBLEVBQUFDLFFBQUEsRUFBQUMsUUFBQSxFQUFBQyxPQUFBLEVBQUFDLE1BQUEsRUFBQUMsTUFBQSxFQUFBQyxPQUFBLEVBQUFDLEtBQUEsRUFBQUMsTUFBQSxFQUFBQyxXQUFBLEVBQUFDLFlBQUEsRUFBQUMsTUFBQSxFQUFBQyxPQUFBLEVBQUFDLEtBQUEsRUFBQUMsT0FBQSxFQUFBQyxRQUFBLEVBQUFDLEtBQUEsRUFBQUMsT0FBQSxFQUFBQyxTQUFBLEVBQUFDLFFBQUEsRUFBQUMsU0FBQSxFQUFBQyxXQUFBLEVBQUFDLGFBQUEsRUFBQUMsYUFBQSxFQUFBQyxjQUFBLEVBQUFDLGNBQUEsRUFBQUMsWUFBQSxFQUFBQyxTQUFBLEVBQUFDLFdBQUEsRUFBQUMsV0FBQSxFQUFBQyxZQUFBLEVBQUFDLFlBQUEsRUFBQUMsYUFBQSxFQUFBQyxVQUFBLEVBQUFDLE9BQUEsRUFBQUMsS0FBQSxFQUFBQyxPQUFBLEVBQUFDLEtBQUEsRUFBQUMsTUFBQSxFQUFBQyxPQUFBLEVBQUFDLE9BQUEsRUFBQUMsUUFBQSxFQUFBQyxTQUFBLEVBQUFDLFVBQUEsRUFBQUMsT0FBQSxFQUFBQyxRQUFBLEVBQUFDLFNBQUEsRUFBQUMsd0JBQUEsRUFBQUMsT0FBQSxFQUFBQyxNQUFBLEVBQUFDLFNBQUEsRUFBQUMsUUFBQSxFQUFBQyxlQUFBLEVBQUFDLFlBQUEsRUFBQUMsSUFBQSxFQUFBQyxNQUFBLEVBQUFDLE9BQUEsRUFBQUMsT0FBQSxFQUFBQyxLQUFBLEVBQUFDLFFBQUEsRUFBQUMsT0FBQSxFQUFBQyxJQUFBLEVBQUFDLE1BQUEsRUFBQUMsUUFBQSxFQUFBQyxTQUFBLEVBQUFDLFdBQUEsRUFBQUMsVUFBQSxFQUFBQyxRQUFBLEVBQUFDLE9BQUEsRUFBQUMsT0FBQSxFQUFBQyxJQUFBLEVBQUFDLFVBQUEsRUFBQUMsYUFBQSxFQUFBQyxRQUFBLEVBQUFDLFVBQUEsRUFBQUMsWUFBQSxFQUFBQyxLQUFBLEVBQUFDLE1BQUEsRUFBQUMsS0FBQSxFQUFBQyxNQUFBLEVBQUFDLEtBQUEsRUFBQUMsS0FBQSxFQUFBQyxLQUFBLEVBQUFDLFNBQUEsRUFBQUMsTUFBQSxFQUFBQyxPQUFBLEVBQUFDLFdBQUEsRUFBQUMsUUFBQSxFQUFBQyxJQUFBLEVBQUFDLFdBQUEsRUFBQUMsS0FBQSxFQUFBQyxJQUFBLEVBQUFDLEtBQUEsRUFBQUMsS0FBQSxFQUFBQyxLQUFBLEVBQUFDLEtBQUEsRUFBQUMsUUFBQSxFQUFBQyxPQUFBLEVBQUFDLFFBQUEsRUFBQUMsU0FBQSxFQUFBQyxVQUFBLEVBQUFDLFVBQUEsRUFBQUMsS0FBQSxFQUFBQyxPQUFBLEVBQUFDLFFBQUEsRUFBQUMsSUFBQSxFQUFBQyxPQUFBLEVBQUFDLFFBQUEsRUFBQUMsS0FBQSxFQUFBQyxXQUFBLEVBQUFDLFNBQUEsRUFBQUMsT0FBQSxFQUFBQyxNQUFBLEVBQUFDLEtBQUEsRUFBQUMsUUFBQSxFQUFBQyxLQUFBLEVBQUFDLEtBQUEsRUFBQUMsV0FBQSxFQUFBQyxTQUFBLEVBQUFDLFdBQUEsRUFBQUMsVUFBQSxFQUFBQyxjQUFBLEVBQUFDLFNBQUEsRUFBQUMsYUFBQSxFQUFBQyxXQUFBLEVBQUFDLFdBQUEsRUFBQUMsYUFBQSxFQUFBQyxjQUFBLEVBQUFDLFdBQUEsRUFBQUMsUUFBQSxFQUFBQyxLQUFBLEVBQUFDLEtBQUEsRUFBQUMsVUFBQSxFQUFBQyxXQUFBLEVBQUFDLFlBQUEsRUFBQUMsWUFBQSxFQUFBQyxZQUFBLEVBQUFDLFlBQUEsRUFBQUMsYUFBQSxFQUFBQyxZQUFBLEVBQUFDLGFBQUEsRUFBQUMsY0FBQSxFQUFBQyxXQUFBLEVBQUFDLGdCQUFBLEVBQUFDLFdBQUEsRUFBQUMsYUFBQSxFQUFBQyxhQUFBLEVBQUFDLGNBQUEsRUFBQUMsYUFBQSxFQUFBQyxjQUFBLEVBQUFDLGVBQUEsRUFBQUMsYUFBQSxFQUFBQyxZQUFBLEVBQUFDLEtBQUEsRUFBQUMsTUFBQSxFQUFBQyxZQUFBLEVBQUFDLGFBQUEsRUFBQUMsT0FBQSxFQUFBQyxhQUFBLEVBQUFDLE1BQUEsRUFBQUMsT0FBQSxFQUFBQyxLQUFBLEVBQUFDLE9BQUEsRUFBQUMsT0FBQSxFQUFBQyxNQUFBLEVBQUFDLE9BQUEsRUFBQUMsT0FBQSxFQUFBQyxPQUFBLEVBQUFDLE9BQUEsRUFBQUMsUUFBQSxFQUFBQyxJQUFBLEVBQUFDLFlBQUEsRUFBQUMsUUFBQSxFQUFBQyxTQUFBLEVBQUFDLFNBQUEsRUFBQUMsU0FBQSxFQUFBQyxRQUFBLEVBQUFDLFFBQUEsRUFBQUMsU0FBQSxFQUFBQyxPQUFBLEVBQUFDLFFBQUEsRUFBQUMsS0FBQSxFQUFBQyxLQUFBLEVBQUFDLE9BQUEsRUFBQUMsTUFBQSxFQUFBQyxZQUFBLEVBQUFDLFNBQUEsRUFBQUMsTUFBQSxFQUFBQyxLQUFBLEVBQUFDLE9BQUEsRUFBQUMsUUFBQSxFQUFBQyxRQUFBLEVBQUFDLFNBQUEsRUFBQUMsTUFBQSxFQUFBQyxLQUFBLEVBQUFDLFVBQUEsRUFBQUMsT0FBQSxFQUFBQyxLQUFBLEVBQUFDLE9BQUEsRUFBQUMsT0FBQSxFQUFBQyxRQUFBLEVBQUFDLE9BQUEsRUFBQUMsVUFBQSxFQUFBQyxPQUFBLEVBQUFDLFFBQUEsRUFBQUMsUUFBQSxFQUFBQyxLQUFBLEVBQUFDLEtBQUEsRUFBQUMsTUFBQSxFQUFBQyxZQUFBLEVBQUFDLE9BQUEsRUFBQUMsTUFBQSxFQUFBQyxPQUFBLEVBQUFDLEtBQUEsRUFBQUMsS0FBQSxFQUFBQyxNQUFBLEVBQUFDLE1BQUEsRUFBQUMsUUFBQSxFQUFBQyxNQUFBLEVBQUFDLE9BQUEsRUFBQUMsT0FBQSxFQUFBQyxPQUFBLEVBQUFDLE9BQUEsRUFBQUMsUUFBQSxFQUFBQyxRQUFBLEVBQUFDLFNBQUEsRUFBQUMsT0FBQSxFQUFBQyxRQUFBLEVBQUFDLFNBQUEsRUFBQUMsT0FBQSxFQUFBQyxPQUFBLEVBQUFDLFFBQUEsRUFBQUMsTUFBQSxFQUFBQyxJQUFBLEVBQUFDLE9BQUEsRUFBQUMsT0FBQSxFQUFBQyxLQUFBLEVBQUFDLEtBQUEsRUFBQUMsUUFBQSxFQUFBQyxRQUFBLEVBQUFDLFNBQUEsRUFBQUMsUUFBQSxFQUFBQyxPQUFBLEVBQUFDLEtBQUEsRUFBQUMsU0FBQSxFQUFBQyxNQUFBLEVBQUFDLE9BQUEsRUFBQUMsT0FBQSxFQUFBQyxTQUFBLEVBQUFDLFNBQUEsRUFBQUMsU0FBQSxFQUFBQyxRQUFBLEVBQUFDLFNBQUEsRUFBQUMsTUFBQSxFQUFBQyxRQUFBLEVBQUFDLFFBQUEsRUFBQUMsU0FBQSxFQUFBQyxTQUFBLEVBQUFDLFVBQUEsRUFBQUMsT0FBQSxFQUFBQyxNQUFBLEVBQUFDLEtBQUEsRUFBQUMsTUFBQSxFQUFBQyxPQUFBLEVBQUFDLEtBQUEsRUFBQUMsT0FBQSxFQUFBQyxpQkFBQSxFQUFBQyxLQUFBLEVBQUFDLE1BQUEsRUFBQUMsUUFBQSxFQUFBQyxRQUFBLEVBQUFDLFFBQUEsRUFBQUMsTUFBQSxFQUFBQyxLQUFBLEVBQUFDLFNBQUEsRUFBQUMsU0FBQSxFQUFBQyxJQUFBLEVBQUFDLFFBQUEsRUFBQUMsS0FBQSxFQUFBQyxLQUFBLEVBQUFDLFFBQUEsRUFBQUMsYUFBQSxFQUFBQyxRQUFBLEVBQUFDLFVBQUEsRUFBQUMsVUFBQSxFQUFBQyxRQUFBLEVBQUFDLE9BQUEsRUFBQUMsS0FBQSxFQUFBQyxLQUFBLEVBQUFDLEtBQUEsRUFBQUMsU0FBQSxFQUFBQyxPQUFBLEVBQUFDLE1BQUEsRUFBQUMsUUFBQSxFQUFBQyxPQUFBLEVBQUFDLE1BQUEsRUFBQUMsT0FBQSxFQUFBQyxPQUFBLEVBQUFDLE1BQUEsRUFBQUMsTUFBQSxFQUFBQyxLQUFBLEVBQUFDLEtBQUEsRUFBQUMsT0FBQSxFQUFBQyxNQUFBLEVBQUFDLE1BQUEsRUFBQUMsTUFBQSxFQUFBQyxRQUFBLEVBQUFDLE1BQUEsRUFBQUMsT0FBQSxFQUFBQyxJQUFBLG9CQ0FsQm50QixFQUFBRCxTQUNBcUIsT0FBQXZCLEVBQUEsR0FDQWdDLE1BQUFoQyxFQUFBLEdBQ0EyQyxNQUFBM0MsRUFBQSIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7XG4gXHRcdFx0XHRjb25maWd1cmFibGU6IGZhbHNlLFxuIFx0XHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcbiBcdFx0XHRcdGdldDogZ2V0dGVyXG4gXHRcdFx0fSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAyKTtcbiIsInZhciBsb2NhbExpc3QgPSByZXF1aXJlKCcuL2xhbmcuanNvbicpLndvcmRzO1xudmFyIGJhc2VMaXN0ID0gcmVxdWlyZSgnYmFkd29yZHMtbGlzdCcpLmFycmF5O1xudmFyIEZpbHRlciA9IChmdW5jdGlvbigpIHtcbiAgLyoqXG4gICAqIEZpbHRlciBjb25zdHJ1Y3Rvci5cbiAgICogQGNvbnN0cnVjdG9yXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zIC0gRmlsdGVyIGluc3RhbmNlIG9wdGlvbnNcbiAgICogQHBhcmFtIHtib29sZWFufSBvcHRpb25zLmVtcHR5TGlzdCAtIEluc3RhbnRpYXRlIGZpbHRlciB3aXRoIG5vIGJsYWNrbGlzdFxuICAgKiBAcGFyYW0ge2FycmF5fSBvcHRpb25zLmxpc3QgLSBJbnN0YW50aWF0ZSBmaWx0ZXIgd2l0aCBjdXN0b20gbGlzdFxuICAgKiBAcGFyYW0ge3N0cmluZ30gb3B0aW9ucy5wbGFjZUhvbGRlciAtIENoYXJhY3RlciB1c2VkIHRvIHJlcGxhY2UgcHJvZmFuZSB3b3Jkcy5cbiAgICogQHBhcmFtIHtzdHJpbmd9IG9wdGlvbnMucmVnZXggLSBSZWd1bGFyIGV4cHJlc3Npb24gdXNlZCB0byBzYW5pdGl6ZSB3b3JkcyBiZWZvcmUgY29tcGFyaW5nIHRoZW0gdG8gYmxhY2tsaXN0LlxuICAgKiBAcGFyYW0ge3N0cmluZ30gb3B0aW9ucy5yZXBsYWNlUmVnZXggLSBSZWd1bGFyIGV4cHJlc3Npb24gdXNlZCB0byByZXBsYWNlIHByb2ZhbmUgd29yZHMgd2l0aCBwbGFjZUhvbGRlci5cbiAgICovXG4gIGZ1bmN0aW9uIEZpbHRlcihvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gICAgdGhpcy5saXN0ID0gb3B0aW9ucy5lbXB0eUxpc3QgJiYgW10gfHwgQXJyYXkucHJvdG90eXBlLmNvbmNhdC5hcHBseShsb2NhbExpc3QsIFtiYXNlTGlzdCwgb3B0aW9ucy5saXN0IHx8IFtdXSk7XG4gICAgdGhpcy5leGNsdWRlID0gb3B0aW9ucy5leGNsdWRlIHx8IFtdO1xuICAgIHRoaXMucGxhY2VIb2xkZXIgPSBvcHRpb25zLnBsYWNlSG9sZGVyIHx8ICcqJztcbiAgICB0aGlzLnJlZ2V4ID0gb3B0aW9ucy5yZWdleCB8fCAvW15hLXpBLXowLTl8XFwkfFxcQF18XFxeL2c7XG4gICAgdGhpcy5yZXBsYWNlUmVnZXggPSBvcHRpb25zLnJlcGxhY2VSZWdleCB8fCAvXFx3L2c7XG4gIH1cblxuICAvKipcbiAgICogRGV0ZXJtaW5lIGlmIGEgc3RyaW5nIGNvbnRhaW5zIHByb2ZhbmUgbGFuZ3VhZ2UuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmcgLSBTdHJpbmcgdG8gZXZhbHVhdGUgZm9yIHByb2Zhbml0eS5cbiAgICovXG4gIEZpbHRlci5wcm90b3R5cGUuaXNQcm9mYW5lID0gZnVuY3Rpb24gaXNQcm9mYW5lKHN0cmluZykge1xuICAgIHJldHVybiBzdHJpbmdcbiAgICAgIC5zcGxpdCgnICcpXG4gICAgICAubWFwKGZ1bmN0aW9uKHcpIHtcbiAgICAgICAgcmV0dXJuIHcudG9Mb3dlckNhc2UoKS5yZXBsYWNlKHRoaXMucmVnZXgsICcnKTtcbiAgICAgIH0sIHRoaXMpXG4gICAgICAuZmlsdGVyKHRoaXMuaXNQcm9mYW5lTGlrZSwgdGhpcylcbiAgICAgIC5zaGlmdCgpIHx8IGZhbHNlO1xuICB9O1xuXG4gIC8qKlxuICAgKiBEZXRlcm1pbmUgaWYgYSBzaW5nbGUgd29yZCBpcyBwcm9mYW5lIG9yIGxvb2tzIHByb2ZhbmUuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB3b3JkIC0gU3RyaW5nIHRvIGV2YWx1YXRlIGZvciBwcm9mYW5pdHkuXG4gICAqL1xuICBGaWx0ZXIucHJvdG90eXBlLmlzUHJvZmFuZUxpa2UgPSBmdW5jdGlvbiBwcm9mYW5lTGlrZSh3b3JkKSB7XG4gICAgcmV0dXJuICEhfnRoaXMuZXhjbHVkZS5pbmRleE9mKHdvcmQpID8gZmFsc2UgOiAhIX50aGlzLmxpc3QuaW5kZXhPZih3b3JkKSB8fCB0aGlzLmxpc3RcbiAgICAgIC5tYXAoZnVuY3Rpb24odykge1xuICAgICAgICByZXR1cm4gbmV3IFJlZ0V4cCh3LnJlcGxhY2UoLyhcXFcpL2csICdcXFxcJDEnKSwgJ2dpJyk7XG4gICAgICB9LCB0aGlzKVxuICAgICAgLnJlZHVjZShmdW5jdGlvbihvdXRjb21lLCB3b3JkRXhwKSB7XG4gICAgICAgIGlmICh3b3JkRXhwLnRlc3Qod29yZCkpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gb3V0Y29tZTtcbiAgICAgIH0sIGZhbHNlKTtcbiAgfTtcblxuICAvKipcbiAgICogUmVwbGFjZSBhIHdvcmQgd2l0aCBwbGFjZUhvbGRlciBjaGFyYWN0ZXJzO1xuICAgKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nIC0gU3RyaW5nIHRvIHJlcGxhY2UuXG4gICAqL1xuICBGaWx0ZXIucHJvdG90eXBlLnJlcGxhY2VXb3JkID0gZnVuY3Rpb24gcmVwbGFjZVdvcmQoc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKHRoaXMucmVnZXgsICcnKS5yZXBsYWNlKHRoaXMucmVwbGFjZVJlZ2V4LCB0aGlzLnBsYWNlSG9sZGVyKTtcbiAgfTtcblxuICAvKipcbiAgICogRXZhbHVhdGUgYSBzdHJpbmcgZm9yIHByb2Zhbml0eSBhbmQgcmV0dXJuIGFuIGVkaXRlZCB2ZXJzaW9uLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nIC0gU2VudGVuY2UgdG8gZmlsdGVyLlxuICAgKi9cbiAgRmlsdGVyLnByb3RvdHlwZS5jbGVhbiA9IGZ1bmN0aW9uIGNsZWFuKHN0cmluZykge1xuICAgIHJldHVybiBzdHJpbmcuc3BsaXQoL1xcYi8pLm1hcChmdW5jdGlvbih3b3JkKSB7XG4gICAgICByZXR1cm4gdGhpcy5pc1Byb2ZhbmUod29yZCkgPyB0aGlzLnJlcGxhY2VXb3JkKHdvcmQpIDogd29yZDtcbiAgICB9LmJpbmQodGhpcykpLmpvaW4oJycpO1xuICB9O1xuXG4gIC8qKlxuICAgKiBBZGQgd29yZHMgdG8gYmxhY2tsaXN0IGZpbHRlciAvIHJlbW92ZSB3b3JkcyBmcm9tIHdoaXRlbGlzdCBmaWx0ZXJcbiAgICogQHBhcmFtIHsoc3RyaW5nfHN0cmluZ1tdKX1cbiAgICovIFxuICBGaWx0ZXIucHJvdG90eXBlLmFkZFdvcmRzID0gZnVuY3Rpb24gYWRkV29yZHMod29yZHMpIHtcbiAgICB3b3JkcyA9ICh3b3JkcyBpbnN0YW5jZW9mIEFycmF5KSA/IHdvcmRzIDogW3dvcmRzXTtcbiAgICB0aGlzLmxpc3QgPSB0aGlzLmxpc3QuY29uY2F0KHdvcmRzKTtcblxuICAgIHdvcmRzLmZvckVhY2goZnVuY3Rpb24od29yZCkge1xuICAgICAgaWYoISF+dGhpcy5leGNsdWRlLmluZGV4T2Yod29yZCkpIHtcbiAgICAgICAgdGhpcy5leGNsdWRlLnNwbGljZSh0aGlzLmV4Y2x1ZGUuaW5kZXhPZih3b3JkKSwgMSk7XG4gICAgICB9XG4gICAgfSwgdGhpcyk7XG4gIH07XG5cbiAgLyoqXG4gICAqIEFkZCB3b3JkcyB0byB3aGl0ZWxpc3QgZmlsdGVyXG4gICAqIEBwYXJhbSB7Li4uc3RyaW5nfSB3b3JkIC0gV29yZCB0byBhZGQgdG8gd2hpdGVsaXN0LlxuICAgKi8gXG4gIEZpbHRlci5wcm90b3R5cGUucmVtb3ZlV29yZHMgPSBmdW5jdGlvbiByZW1vdmVXb3JkcygpIHtcbiAgICB2YXIgd29yZHMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpO1xuICAgIHRoaXMuZXhjbHVkZS5wdXNoLmFwcGx5KHRoaXMuZXhjbHVkZSwgd29yZHMpO1xuICB9O1xuXG4gIHJldHVybiBGaWx0ZXI7XG59KSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEZpbHRlcjsiLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBEb21FbGVtZW50IHtcbiAgICBwcm90ZWN0ZWQgZWw6IEhUTUxEaXZFbGVtZW50O1xuICAgIHByb3RlY3RlZCB4OiBudW1iZXI7XG4gICAgcHJvdGVjdGVkIHk6IG51bWJlcjtcblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0eXBlXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHhcbiAgICAgKiBAcGFyYW0ge251bWJlcn0geVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwYXJlbnRDbGFzc1xuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHR5cGU6IHN0cmluZywgeDogbnVtYmVyLCB5OiBudW1iZXIsIHBhcmVudENsYXNzOiBzdHJpbmcgPSAnJykge1xuICAgICAgICB0aGlzLnggPSB4O1xuICAgICAgICB0aGlzLnkgPSB5O1xuXG4gICAgICAgIHRoaXMuZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgbGV0IG1haW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFpbicpO1xuICAgICAgICBpZiAobWFpbiA9PT0gbnVsbCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiPG1haW4+IGVsZW1lbnQgZG9lc24ndCBleGlzdCFcIik7XG4gICAgICAgIH1cblxuICAgICAgICAvLy0xIGNoZWNrIGlzIHRvIGxldCBDU1MgZG8gaXRzIG93biBqb2IgQHRvZG8gY2xlYW5lciBzb2x1dGlvbj9cbiAgICAgICAgaWYgKHRoaXMueCA+IC0xICYmIHRoaXMueSA+IC0xKSB7XG4gICAgICAgICAgICB0aGlzLmVsLnN0eWxlLnRyYW5zZm9ybSA9IGB0cmFuc2xhdGUoJHt0aGlzLnh9cHgsICR7dGhpcy55fXB4KWA7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5lbC5jbGFzc0xpc3QuYWRkKGBnYW1lLSR7dHlwZX1gKTtcblxuICAgICAgICBpZiAocGFyZW50Q2xhc3MgPT09ICcnKSB7XG4gICAgICAgICAgICBtYWluLmFwcGVuZENoaWxkKHRoaXMuZWwpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbGV0IHBhcmVudEVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLmdhbWUtJHtwYXJlbnRDbGFzc31gKTtcbiAgICAgICAgICAgIGlmIChwYXJlbnRFbCA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgPC5nYW1lLSR7cGFyZW50Q2xhc3N9PiBlbGVtZW50IGRvZXNuJ3QgZXhpc3QhYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwYXJlbnRFbC5hcHBlbmRDaGlsZCh0aGlzLmVsKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEByZXR1cm5zIENsaWVudFJlY3RcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0Q2xpZW50UmVhY3QoKTogQ2xpZW50UmVjdCB8IERPTVJlY3Qge1xuICAgICAgICByZXR1cm4gdGhpcy5lbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICB9XG59XG4iLCJpbXBvcnQgRG9tRWxlbWVudCBmcm9tIFwiLi4vaGVscGVycy9kb21lbGVtZW50XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNjb3JlIGV4dGVuZHMgRG9tRWxlbWVudCB7XG4gICAgcHJpdmF0ZSBzY29yZTogbnVtYmVyID0gMDtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcignc2NvcmUnLCAtMSwgLTEsICdndWknKTtcblxuICAgICAgICB0aGlzLnJlbmRlclRlbXBsYXRlKCk7XG4gICAgICAgIHRoaXMuZWwucXVlcnlTZWxlY3RvcignLnNjb3JlLWNvdW50JykuaW5uZXJIVE1MID0gdGhpcy5zY29yZS50b1N0cmluZygpO1xuICAgICAgICB0aGlzLmVsLmNsYXNzTGlzdC5hZGQoJ21lc3NhZ2UnLCAnaXMtd2FybmluZycpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldHJpZXZlIGN1cnJlbnQgc2NvcmVcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHtudW1iZXJ9XG4gICAgICovXG4gICAgcHVibGljIGdldCgpOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gdGhpcy5zY29yZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBVcGRhdGUgdGhlIHNjb3JlIGJhc2VkIG9uIGEgQ3VzdG9tIEV2ZW50IGZyb20gdGhlIEJsb2NrIG9iamVjdFxuICAgICAqXG4gICAgICogQHBhcmFtIHNjb3JlXG4gICAgICogQHBhcmFtIFtyZXNldF1cbiAgICAgKi9cbiAgICBwdWJsaWMgdXBkYXRlKHNjb3JlOiBudW1iZXIsIHJlc2V0OiBib29sZWFuID0gZmFsc2UpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5zY29yZSA9IHJlc2V0ID8gc2NvcmUgOiB0aGlzLnNjb3JlICsgc2NvcmU7XG4gICAgICAgIHRoaXMuZWwucXVlcnlTZWxlY3RvcignLnNjb3JlLWNvdW50JykuaW5uZXJIVE1MID0gdGhpcy5zY29yZS50b1N0cmluZygpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRlbXBsYXRlIG5lZWRlZCB0byBzaG93IG1vcmUgZWxlbWVudHNcbiAgICAgKi9cbiAgICBwcml2YXRlIHJlbmRlclRlbXBsYXRlKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmVsLmlubmVySFRNTCA9IGBcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlLWJvZHlcIj5cbiAgICAgICAgICAgICAgICA8c3Bhbj5zY29yZTogPC9zcGFuPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwic2NvcmUtY291bnRcIj48L3NwYW4+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgYDtcbiAgICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBXaW5kb3dFdmVudEhhbmRsZXIge1xuICAgIHByaXZhdGUgc3RhdGljIGZ1bmN0aW9uTWFwOiB7IFtrOiBzdHJpbmddOiBhbnkgfSA9IHt9O1xuXG4gICAgLyoqXG4gICAgICogQWRkIGxpc3RlbmVyIHRvIHdpbmRvdyB3aXRoIG5hbWUgc3BhY2luZ1xuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGV2ZW50XG4gICAgICogQHBhcmFtIGZ1bmNcbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGFkZEV2ZW50TGlzdGVuZXIoZXZlbnQ6IHN0cmluZywgZnVuYzogYW55KTogdm9pZCB7XG4gICAgICAgIFdpbmRvd0V2ZW50SGFuZGxlci5mdW5jdGlvbk1hcFtldmVudF0gPSBmdW5jO1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihldmVudC5zcGxpdCgnLicpWzBdLCBXaW5kb3dFdmVudEhhbmRsZXIuZnVuY3Rpb25NYXBbZXZlbnRdKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmUgbGlzdGVuZXIgZnJvbSB3aW5kb3cgd2l0aCBuYW1lIHNwYWNpbmdcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBldmVudFxuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgcmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudDogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LnNwbGl0KCcuJylbMF0sIFdpbmRvd0V2ZW50SGFuZGxlci5mdW5jdGlvbk1hcFtldmVudF0pO1xuICAgICAgICBkZWxldGUgV2luZG93RXZlbnRIYW5kbGVyLmZ1bmN0aW9uTWFwW2V2ZW50XTtcbiAgICB9XG59XG4iLCJpbXBvcnQgRG9tRWxlbWVudCBmcm9tIFwiLi4vaGVscGVycy9kb21lbGVtZW50XCI7XG5pbXBvcnQgV2luZG93RXZlbnRIYW5kbGVyIGZyb20gXCIuLi9oZWxwZXJzL3dpbmRvd2V2ZW50aGFuZGxlclwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNZXNzYWdlU2NyZWVuIGV4dGVuZHMgRG9tRWxlbWVudCB7XG4gICAgcHVibGljIGN1cnJlbnRFdmVudDogc3RyaW5nO1xuICAgIHB1YmxpYyBpc0FjdGl2ZTogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgcHJpdmF0ZSBnYW1lU3RhdGVzOiB7IFtrOiBzdHJpbmddOiB7ICdoZWFkZXInOiBzdHJpbmcsICdib2R5Jzogc3RyaW5nLCAnY2xhc3NOYW1lJzogc3RyaW5nLCAna2V5Ym9hcmRUcmlnZ2VyS2V5Jzogc3RyaW5nIH0gfSA9IHtcbiAgICAgICAgJ2dhbWU6c3RhcnQnOiB7XG4gICAgICAgICAgICAnaGVhZGVyJzogJ1dlbGNvbWUgdG8gQmxvY2stby1CbG9jayEnLFxuICAgICAgICAgICAgJ2JvZHknOiAnSXRcXCdzIHRpbWUgdG8gY2F0Y2ggdGhlbSBibG9ja3MhPGJyLz48YnIvPlVzZSB5b3VyIGFycm93IGtleXMgdG8gbW92ZSB5b3VyIHBsYXllciBhcm91bmQgYW5kIHByZXNzIHNwYWNlIHRvIHN0YXJ0Ljxici8+PGJyLz5QcmVzcyAtPHN0cm9uZz5IPC9zdHJvbmc+LSB0byB2aWV3IHRoZSBoaWdoc2NvcmUgbGlzdC4nLFxuICAgICAgICAgICAgJ2NsYXNzTmFtZSc6ICdpcy1pbmZvJyxcbiAgICAgICAgICAgICdrZXlib2FyZFRyaWdnZXJLZXknOiAnICdcbiAgICAgICAgfSxcbiAgICAgICAgJ2dhbWU6ZW5kJzoge1xuICAgICAgICAgICAgJ2hlYWRlcic6ICdZb3VyIGdhbWUgaXMgb3ZlciEnLFxuICAgICAgICAgICAgJ2JvZHknOiAnWW91IG1hZGUgaXQsIHlvdXIgZmluYWwgc2NvcmUgaXMgX19TQ09SRV9fIG91dCBvZiBtYXggX19NQVhfU0NPUkVfXyBwb2ludHMuPGJyLz48YnIvPlRoYW5rcyBmb3IgcGxheWluZywgcHJlc3MgPHN0cm9uZz4tTi08L3N0cm9uZz4gdG8gc2F2ZSB5b3VyIHNjb3JlIG9yIHByZXNzIGVudGVyIHRvIHJlc3RhcnQgdGhlIG1hZG5lc3MuPGJyLz48YnIvPlByZXNzIC08c3Ryb25nPkg8L3N0cm9uZz4tIHRvIHZpZXcgdGhlIGhpZ2hzY29yZSBsaXN0LicsXG4gICAgICAgICAgICAnY2xhc3NOYW1lJzogJ2lzLXN1Y2Nlc3MnLFxuICAgICAgICAgICAgJ2tleWJvYXJkVHJpZ2dlcktleSc6ICdlbnRlcidcbiAgICAgICAgfSxcbiAgICAgICAgJ2xldmVsOnN1Y2Nlc3MnOiB7XG4gICAgICAgICAgICAnaGVhZGVyJzogJ1lFQUghIExldmVsIGNvbXBsZXRlZCEnLFxuICAgICAgICAgICAgJ2JvZHknOiAnUGVyZm9ybWluZyBsaWtlIGEgYm9zcyEgUHJlc3Mgc3BhY2UgdG8gcHJvY2VlZCB0byB0aGUgbmV4dCBsZXZlbCBhbmQgY2F0Y2ggZXZlbiBtb3JlIGJsb2Nrcy4nLFxuICAgICAgICAgICAgJ2NsYXNzTmFtZSc6ICdpcy1zdWNjZXNzJyxcbiAgICAgICAgICAgICdrZXlib2FyZFRyaWdnZXJLZXknOiAnICdcbiAgICAgICAgfSxcbiAgICAgICAgJ2xldmVsOmZhaWxlZCc6IHtcbiAgICAgICAgICAgICdoZWFkZXInOiAnQUFIISBMZXZlbCBmYWlsZWQhJyxcbiAgICAgICAgICAgICdib2R5JzogJ1RyeSBhZ2FpbiBhbmQgc2hvdyB1cyB3aGF0IHlvdVxcJ3JlIG1hZGUgb2ZmISBQcmVzcyBzcGFjZSB0byByZXN0YXJ0IHRoaXMgbGV2ZWwuJyxcbiAgICAgICAgICAgICdjbGFzc05hbWUnOiAnaXMtZGFuZ2VyJyxcbiAgICAgICAgICAgICdrZXlib2FyZFRyaWdnZXJLZXknOiAnICdcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoJ21lc3NhZ2VzY3JlZW4nLCAtMSwgLTEsICdndWknKTtcbiAgICAgICAgdGhpcy5lbC5jbGFzc0xpc3QuYWRkKCdtZXNzYWdlJyk7XG5cbiAgICAgICAgdGhpcy5yZW5kZXJUZW1wbGF0ZSgpO1xuICAgICAgICB0aGlzLnNob3coJ2dhbWU6c3RhcnQnKTtcbiAgICAgICAgV2luZG93RXZlbnRIYW5kbGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwLm1lc3NhZ2VzY3JlZW4nLCAoZTogS2V5Ym9hcmRFdmVudCkgPT4gdGhpcy5rZXlCb2FyZEhhbmRsZXIoZSkpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEhhbmRsZSB0aGUgc3BhY2ViYXJcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7S2V5Ym9hcmRFdmVudH0gZVxuICAgICAqL1xuICAgIHByaXZhdGUga2V5Qm9hcmRIYW5kbGVyKGU6IEtleWJvYXJkRXZlbnQpOiB2b2lkIHtcbiAgICAgICAgbGV0IGtleSA9IGUua2V5LnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIGxldCBrZXlUb1VzZSA9IHRoaXMuZ2FtZVN0YXRlc1t0aGlzLmN1cnJlbnRFdmVudF0ua2V5Ym9hcmRUcmlnZ2VyS2V5O1xuXG4gICAgICAgIGlmIChrZXkgPT09IGtleVRvVXNlICYmIHRoaXMuaXNBY3RpdmUgPT09IHRydWUpIHtcbiAgICAgICAgICAgIHdpbmRvdy5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudChgJHt0aGlzLmN1cnJlbnRFdmVudH06Y2xpY2tgKSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTaG93IHRoZSBkZXNpcmVkIG1lc3NhZ2UgKHR5cGUgbWF0Y2hlcyBpbmRleCBpbiBvYmplY3QpXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdHlwZVxuICAgICAqIEBwYXJhbSBbYm9keVJlcGxhY2VtZW50c11cbiAgICAgKi9cbiAgICBwdWJsaWMgc2hvdyh0eXBlOiBzdHJpbmcsIGJvZHlSZXBsYWNlbWVudHM6IHsgW2s6IHN0cmluZ106IHN0cmluZyB9ID0ge30pOiB2b2lkIHtcbiAgICAgICAgbGV0IG1lc3NhZ2VIZWFkZXIgPSB0aGlzLmdhbWVTdGF0ZXNbdHlwZV0uaGVhZGVyO1xuICAgICAgICBsZXQgbWVzc2FnZUJvZHkgPSB0aGlzLmdhbWVTdGF0ZXNbdHlwZV0uYm9keTtcbiAgICAgICAgZm9yIChsZXQgcmVwbGFjZW1lbnQgaW4gYm9keVJlcGxhY2VtZW50cykge1xuICAgICAgICAgICAgbWVzc2FnZUJvZHkgPSBtZXNzYWdlQm9keS5yZXBsYWNlKHJlcGxhY2VtZW50LCBib2R5UmVwbGFjZW1lbnRzW3JlcGxhY2VtZW50XSk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmVsLnF1ZXJ5U2VsZWN0b3IoJy5tZXNzYWdlLWhlYWRlcicpLmlubmVySFRNTCA9IG1lc3NhZ2VIZWFkZXI7XG4gICAgICAgIHRoaXMuZWwucXVlcnlTZWxlY3RvcignLm1lc3NhZ2UtYm9keScpLmlubmVySFRNTCA9IG1lc3NhZ2VCb2R5O1xuXG4gICAgICAgIHRoaXMuZWwuY2xhc3NMaXN0LmFkZCgnc2hvdycsIHRoaXMuZ2FtZVN0YXRlc1t0eXBlXS5jbGFzc05hbWUpO1xuICAgICAgICB0aGlzLmN1cnJlbnRFdmVudCA9IHR5cGU7XG4gICAgICAgIHRoaXMuaXNBY3RpdmUgPSB0cnVlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEhpZGUgbWVzc2FnZSBvbiBzY3JlZW5cbiAgICAgKi9cbiAgICBwdWJsaWMgaGlkZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5lbC5jbGFzc0xpc3QucmVtb3ZlKCdzaG93JywgJ2lzLWluZm8nLCAnaXMtc3VjY2VzcycsICdpcy1kYW5nZXInKTtcbiAgICAgICAgdGhpcy5pc0FjdGl2ZSA9IGZhbHNlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRlbXBsYXRlIG5lZWRlZCB0byBzaG93IG1vcmUgZWxlbWVudHNcbiAgICAgKi9cbiAgICBwcml2YXRlIHJlbmRlclRlbXBsYXRlKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmVsLmlubmVySFRNTCA9IGBcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlLWhlYWRlclwiPjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1lc3NhZ2UtYm9keVwiPjwvZGl2PlxuICAgICAgICBgO1xuICAgIH1cbn1cbiIsImltcG9ydCBjb25maWcgZnJvbSAnLi9jb25maWcuanNvbic7XG5pbXBvcnQgV2luZG93RXZlbnRIYW5kbGVyIGZyb20gXCIuL2hlbHBlcnMvd2luZG93ZXZlbnRoYW5kbGVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERhdGFTZXJ2aWNlIHtcbiAgICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogRGF0YVNlcnZpY2U7XG5cbiAgICBwcml2YXRlIGVuZFBvaW50TGlzdDogc3RyaW5nID0gYC9kYXRhYmFzZXMvJHtjb25maWcubUxhYi5kYXRhYmFzZU5hbWV9L2NvbGxlY3Rpb25zLyR7Y29uZmlnLm1MYWIuY29sbGVjdGlvbk5hbWV9P2FwaUtleT0ke2NvbmZpZy5tTGFiLmFwaUtleX1gO1xuICAgIHByaXZhdGUgZW5kUG9pbnRTYXZlOiBzdHJpbmcgPSBgL2RhdGFiYXNlcy8ke2NvbmZpZy5tTGFiLmRhdGFiYXNlTmFtZX0vY29sbGVjdGlvbnMvJHtjb25maWcubUxhYi5jb2xsZWN0aW9uTmFtZX0/YXBpS2V5PSR7Y29uZmlnLm1MYWIuYXBpS2V5fWA7XG4gICAgcHJpdmF0ZSBvZmZsaW5lVXNlclNjb3JlczogeyBuYW1lOiBzdHJpbmcsIHNjb3JlOiBudW1iZXIgfVtdID0gW107XG5cbiAgICBwcml2YXRlIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBXaW5kb3dFdmVudEhhbmRsZXIuYWRkRXZlbnRMaXN0ZW5lcignb25saW5lLmRhdGFzZXJ2aWNlJywgKCkgPT4gdGhpcy5zYXZlU2NvcmVUb01sYWIoKSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhpcyBjbGFzcyBuZWVkcyB0byB3b3JrIGFzIFNpbmdsZVRvbiB0byBwcmV2ZW50IGRvdWJsZSBkYXRhIGNhbGxzIGV0Yy5cbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHtEYXRhU2VydmljZX1cbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGdldEluc3RhbmNlKCk6IERhdGFTZXJ2aWNlIHtcbiAgICAgICAgaWYgKCFEYXRhU2VydmljZS5pbnN0YW5jZSkge1xuICAgICAgICAgICAgRGF0YVNlcnZpY2UuaW5zdGFuY2UgPSBuZXcgRGF0YVNlcnZpY2UoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gRGF0YVNlcnZpY2UuaW5zdGFuY2U7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU3RvcmUgdGhlIGxhdGVzdCBzY29yZSBpbiB0aGUgREJcbiAgICAgKlxuICAgICAqIEBwYXJhbSBuYW1lXG4gICAgICogQHBhcmFtIHNjb3JlXG4gICAgICogQHJldHVybnMge1Byb21pc2U8e30+fVxuICAgICAqL1xuICAgIHB1YmxpYyBzYXZlU2NvcmUobmFtZTogc3RyaW5nLCBzY29yZTogbnVtYmVyKTogUHJvbWlzZTxhbnk+IHtcbiAgICAgICAgbGV0IHVzZXJTY29yZSA9IHtuYW1lLCBzY29yZX07XG5cbiAgICAgICAgaWYgKGNvbmZpZy5mdW5jdGlvbmFsaXRpZXMubUxhYiA9PT0gZmFsc2UgfHwgd2luZG93Lm5hdmlnYXRvci5vbkxpbmUgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICB0aGlzLm9mZmxpbmVVc2VyU2NvcmVzLnB1c2godXNlclNjb3JlKTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICAgICAgICAgIHJlc29sdmUodXNlclNjb3JlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgbGV0IHVybCA9IGAke2NvbmZpZy5tTGFiLmJhc2VVcmx9JHt0aGlzLmVuZFBvaW50U2F2ZX1gO1xuICAgICAgICByZXR1cm4gZmV0Y2godXJsLCB7XG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh1c2VyU2NvcmUpLFxuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgICdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgICAgIG1vZGU6ICdjb3JzJ1xuICAgICAgICB9KS50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2V0IGFsbCB0aGUgY3VycmVudCBzY29yZXMgZnJvbSB0aGUgREJcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPFtdPn1cbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0U2NvcmVzKCk6IFByb21pc2U8YW55PiB7XG4gICAgICAgIGlmIChjb25maWcuZnVuY3Rpb25hbGl0aWVzLm1MYWIgPT09IGZhbHNlIHx8IHdpbmRvdy5uYXZpZ2F0b3Iub25MaW5lID09PSBmYWxzZSkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZShKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdzY29yZXMnKSkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgdXJsID0gYCR7Y29uZmlnLm1MYWIuYmFzZVVybH0ke3RoaXMuZW5kUG9pbnRMaXN0fSZzPXtcInNjb3JlXCI6IC0xfSZsPTEwYDtcbiAgICAgICAgcmV0dXJuIGZldGNoKHVybCwge1xuICAgICAgICAgICAgbW9kZTogJ2NvcnMnXG4gICAgICAgIH0pLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKS50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgICAgICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Njb3JlcycpID09PSBKU09OLnN0cmluZ2lmeShkYXRhKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdzY29yZXMnKSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdzY29yZXMnLCBKU09OLnN0cmluZ2lmeShkYXRhKSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNhdmUgdGhlIHNjb3JlIHRvIG1MYWIgb25jZSBiYWNrIG9ubGluZVxuICAgICAqL1xuICAgIHByaXZhdGUgc2F2ZVNjb3JlVG9NbGFiKCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5vZmZsaW5lVXNlclNjb3Jlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBQcm9taXNlLmFsbCh0aGlzLm9mZmxpbmVVc2VyU2NvcmVzLm1hcCgodXNlcikgPT4gdGhpcy5zYXZlU2NvcmUodXNlci5uYW1lLCB1c2VyLnNjb3JlKSkpLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMub2ZmbGluZVVzZXJTY29yZXMgPSBbXTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxufVxuIiwiaW1wb3J0IERvbUVsZW1lbnQgZnJvbSBcIi4uL2hlbHBlcnMvZG9tZWxlbWVudFwiO1xuaW1wb3J0IERhdGFTZXJ2aWNlIGZyb20gXCIuLi9kYXRhc2VydmljZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBIaWdoU2NvcmVMaXN0IGV4dGVuZHMgRG9tRWxlbWVudCB7XG4gICAgcHJpdmF0ZSBkYXRhU2VydmljZTogRGF0YVNlcnZpY2U7XG4gICAgcHJpdmF0ZSBzY29yZXM6IHsgbmFtZTogc3RyaW5nLCBzY29yZTogbnVtYmVyLCBfaWQ6IHsgJG9pZDogc3RyaW5nIH0gfVtdO1xuICAgIHByaXZhdGUgdEJvZHk6IEhUTUxUYWJsZVNlY3Rpb25FbGVtZW50O1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCdoaWdoc2NvcmVsaXN0JywgLTEsIC0xLCAnZ3VpJyk7XG4gICAgICAgIHRoaXMuZWwuY2xhc3NMaXN0LmFkZCgnbW9kYWwnKTtcblxuICAgICAgICB0aGlzLnJlbmRlclRlbXBsYXRlKCk7XG4gICAgICAgIHRoaXMudEJvZHkgPSB0aGlzLmVsLnF1ZXJ5U2VsZWN0b3IoJy50Ym9keScpO1xuXG4gICAgICAgIHRoaXMuZGF0YVNlcnZpY2UgPSBEYXRhU2VydmljZS5nZXRJbnN0YW5jZSgpO1xuICAgICAgICB0aGlzLmxvYWRTY29yZURhdGEoKTtcblxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignZ2FtZTpzY29yZVNhdmVkJywgKGUpID0+IHRoaXMudXBkYXRlRGF0YSgoZSBhcyBDdXN0b21FdmVudCkuZGV0YWlsLmRhdGEpKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBJbml0aWFsIHNjb3JlIGxvYWRpbmdcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gc2hvd1NjcmVlblxuICAgICAqL1xuICAgIHByaXZhdGUgbG9hZFNjb3JlRGF0YShzaG93U2NyZWVuOiBib29sZWFuID0gZmFsc2UpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5kYXRhU2VydmljZS5nZXRTY29yZXMoKS50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnNjb3JlcyA9IGRhdGE7XG4gICAgICAgICAgICB0aGlzLnRCb2R5LmlubmVySFRNTCA9IHRoaXMuZ2V0VGJvZHlUZW1wbGF0ZSgpO1xuXG4gICAgICAgICAgICBpZiAoc2hvd1NjcmVlbiA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuZWwuY2xhc3NMaXN0LmFkZCgnaXMtYWN0aXZlJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVXBkYXRlIGN1cnJlbnQgc2NvcmUgb2YgdXNlciBpbiBhdmFpbGFibGUgZGF0YVxuICAgICAqXG4gICAgICogQHBhcmFtIHt7fX0gZGF0YVxuICAgICAqL1xuICAgIHByaXZhdGUgdXBkYXRlRGF0YShkYXRhOiB7IG5hbWU6IHN0cmluZywgc2NvcmU6IG51bWJlciwgX2lkOiB7ICRvaWQ6IHN0cmluZyB9IH0pOiB2b2lkIHtcbiAgICAgICAgLy9DaGVjayBpZiBnaXZlbiBzY29yZSBpcyB0b3AgMTAgd29ydGh5XG4gICAgICAgIGxldCBsb3dlc3RDdXJyZW50U2NvcmUgPSB0aGlzLnNjb3Jlcy5sZW5ndGggPT09IDAgPyAtMSA6IHRoaXMuc2NvcmVzW3RoaXMuc2NvcmVzLmxlbmd0aCAtIDFdLnNjb3JlO1xuICAgICAgICBpZiAobG93ZXN0Q3VycmVudFNjb3JlIDwgZGF0YS5zY29yZSB8fCB0aGlzLnNjb3Jlcy5sZW5ndGggPCAxMCkge1xuICAgICAgICAgICAgLy9VcGRhdGluZyB0aGUgc2NvcmVzIGFycmF5ICYgcHJlc2VudFxuICAgICAgICAgICAgdGhpcy5zY29yZXMucHVzaChkYXRhKTtcbiAgICAgICAgICAgIHRoaXMuc2NvcmVzLnNvcnQoKGEsIGIpID0+IGIuc2NvcmUgLSBhLnNjb3JlKTtcbiAgICAgICAgICAgIHRoaXMuc2NvcmVzLnNwbGljZSgxMCwgMSk7XG4gICAgICAgICAgICB0aGlzLnRCb2R5LmlubmVySFRNTCA9IHRoaXMuZ2V0VGJvZHlUZW1wbGF0ZSgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2hvdyB0aGUgaGlnaCBzY29yZSBsaXN0XG4gICAgICovXG4gICAgcHVibGljIHNob3coKTogdm9pZCB7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5zY29yZXMgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICB0aGlzLmxvYWRTY29yZURhdGEodHJ1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmVsLmNsYXNzTGlzdC5hZGQoJ2lzLWFjdGl2ZScpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogSGlkZSBpdCBwZXJpb2RcbiAgICAgKi9cbiAgICBwdWJsaWMgaGlkZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5lbC5jbGFzc0xpc3QucmVtb3ZlKCdpcy1hY3RpdmUnKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm4gdGhlIG1hcHBlZCBIVE1MIDx0cj4gbGlzdCBmb3IgYXBwZW5kaW5nIGluIDx0Ym9keT5cbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAgICovXG4gICAgcHJpdmF0ZSBnZXRUYm9keVRlbXBsYXRlKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiBgXG4gICAgICAgICAgICAke3RoaXMuc2NvcmVzLm1hcCgoaXRlbSwgaW5kZXgpID0+IGA8dHI+XG4gICAgICAgICAgICAgICAgPHRkPiR7aW5kZXggKyAxfTwvdGQ+XG4gICAgICAgICAgICAgICAgPHRkPiR7aXRlbS5uYW1lfTwvdGQ+XG4gICAgICAgICAgICAgICAgPHRkPiR7aXRlbS5zY29yZS50b1N0cmluZygpfTwvdGQ+XG4gICAgICAgICAgICA8L3RyPmApLmpvaW4oJycpfVxuICAgICAgICBgO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRlbXBsYXRlIG5lZWRlZCB0byBzaG93IG1vcmUgZWxlbWVudHNcbiAgICAgKi9cbiAgICBwcml2YXRlIHJlbmRlclRlbXBsYXRlKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmVsLmlubmVySFRNTCA9IGBcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1iYWNrZ3JvdW5kXCI+PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwibW9kYWwtY29udGVudFwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlIGlzLXdhcm5pbmdcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1lc3NhZ2UtaGVhZGVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8cD5Ub3AgMTAgU2NvcmVzIChwcmVzcyAtPHN0cm9uZz5FU0M8L3N0cm9uZz4tIHRvIHJldHVybik8L3A+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWVzc2FnZS1ib2R5XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9XCJ0YWJsZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aGVhZD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD4jPC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPk5hbWU8L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+U2NvcmU8L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90aGVhZD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHkgY2xhc3M9XCJ0Ym9keVwiPjwvdGJvZHk+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICBgO1xuICAgIH1cbn1cbiIsImltcG9ydCBEb21FbGVtZW50IGZyb20gXCIuLi9oZWxwZXJzL2RvbWVsZW1lbnRcIjtcbmltcG9ydCBEYXRhU2VydmljZSBmcm9tIFwiLi4vZGF0YXNlcnZpY2VcIjtcbmltcG9ydCBGaWx0ZXIgZnJvbSBcImJhZC13b3Jkc1wiO1xuaW1wb3J0IGNvbmZpZyBmcm9tIFwiLi4vY29uZmlnLmpzb25cIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTmFtZUZvcm0gZXh0ZW5kcyBEb21FbGVtZW50IHtcbiAgICBwcml2YXRlIGZpbHRlcjogRmlsdGVyO1xuICAgIHByaXZhdGUgZGF0YVNlcnZpY2U6IERhdGFTZXJ2aWNlO1xuICAgIHByaXZhdGUgc2NvcmU6IG51bWJlciA9IDA7XG4gICAgcHJpdmF0ZSBmb3JtOiBIVE1MRm9ybUVsZW1lbnQ7XG4gICAgcHJpdmF0ZSBmZWVkYmFja01lc3NhZ2U6IEhUTUxQYXJhZ3JhcGhFbGVtZW50O1xuICAgIHByaXZhdGUgbmFtZUZpZWxkOiBIVE1MSW5wdXRFbGVtZW50O1xuICAgIHByaXZhdGUgbmFtZU1heExlbmd0aDogbnVtYmVyID0gMTY7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoJ25hbWVmb3JtJywgLTEsIC0xLCAnZ3VpJyk7XG4gICAgICAgIHRoaXMuZGF0YVNlcnZpY2UgPSBEYXRhU2VydmljZS5nZXRJbnN0YW5jZSgpO1xuICAgICAgICB0aGlzLmZpbHRlciA9IG5ldyBGaWx0ZXIoe2xpc3Q6IGNvbmZpZy5nYW1lLmJhZFdvcmRzfSk7XG5cbiAgICAgICAgdGhpcy5lbC5jbGFzc0xpc3QuYWRkKCdtb2RhbCcpO1xuICAgICAgICB0aGlzLnJlbmRlclRlbXBsYXRlKCk7XG5cbiAgICAgICAgdGhpcy5mb3JtID0gdGhpcy5lbC5xdWVyeVNlbGVjdG9yKCcubmFtZS1mb3JtJyk7XG4gICAgICAgIHRoaXMubmFtZUZpZWxkID0gdGhpcy5mb3JtLnF1ZXJ5U2VsZWN0b3IoJy5uYW1lJyk7XG4gICAgICAgIHRoaXMuZmVlZGJhY2tNZXNzYWdlID0gdGhpcy5lbC5xdWVyeVNlbGVjdG9yKCcuZmVlZGJhY2stbWVzc2FnZScpO1xuXG4gICAgICAgIHRoaXMuZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZSkgPT4gdGhpcy5zYXZlU2NvcmUoZSkpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNob3cgb3VyIGZvcm1cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBzY29yZVxuICAgICAqL1xuICAgIHB1YmxpYyBzaG93KHNjb3JlOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5uYW1lRmllbGQuY2xhc3NMaXN0LnJlbW92ZSgnaXMtZGFuZ2VyJyk7XG4gICAgICAgIHRoaXMuZm9ybS5jbGFzc0xpc3QucmVtb3ZlKCdpcy1oaWRkZW4nKTtcbiAgICAgICAgdGhpcy5mZWVkYmFja01lc3NhZ2UuY2xhc3NMaXN0LmFkZCgnaXMtaGlkZGVuJyk7XG5cbiAgICAgICAgdGhpcy5zY29yZSA9IHNjb3JlO1xuICAgICAgICB0aGlzLmVsLmNsYXNzTGlzdC5hZGQoJ2lzLWFjdGl2ZScpO1xuICAgICAgICB0aGlzLm5hbWVGaWVsZC5mb2N1cygpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEhpZGUgb3VyIGZvcm1cbiAgICAgKi9cbiAgICBwdWJsaWMgaGlkZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5lbC5jbGFzc0xpc3QucmVtb3ZlKCdpcy1hY3RpdmUnKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTYXZlIHNjb3JlIHdpdGggd2ViIHNlcnZpY2UsIGFuZCBtYWtlIHN1cmUgdG8gaGlkZSBvdXIgZm9ybSBhZnRlcndhcmRzXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0V2ZW50fSBlXG4gICAgICovXG4gICAgcHJpdmF0ZSBzYXZlU2NvcmUoZTogRXZlbnQpOiB2b2lkIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBsZXQgbmFtZSA9IHRoaXMubmFtZUZpZWxkLnZhbHVlO1xuXG4gICAgICAgIGlmIChuYW1lID09IFwiXCIgfHwgbmFtZS5sZW5ndGggPiB0aGlzLm5hbWVNYXhMZW5ndGggfHwgdGhpcy5maWx0ZXIuaXNQcm9mYW5lKG5hbWUpKSB7XG4gICAgICAgICAgICB0aGlzLm5hbWVGaWVsZC5jbGFzc0xpc3QuYWRkKCdpcy1kYW5nZXInKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZGF0YVNlcnZpY2Uuc2F2ZVNjb3JlKG5hbWUsIHRoaXMuc2NvcmUpLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgICAgICAgIHdpbmRvdy5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudCgnZ2FtZTpzY29yZVNhdmVkJywge2RldGFpbDoge2RhdGF9fSkpO1xuXG4gICAgICAgICAgICB0aGlzLmZlZWRiYWNrTWVzc2FnZS5pbm5lckhUTUwgPSAnWW91ciBzY29yZSBoYXMgYmVlbiBzYXZlZCwgUHJlc3MgPHN0cm9uZz4tRVNDLTwvc3Ryb25nPiB0byByZXR1cm4gdG8gdGhlIHByZXZpb3VzIHNjcmVlbiEnO1xuICAgICAgICAgICAgdGhpcy5mb3JtLmNsYXNzTGlzdC5hZGQoJ2lzLWhpZGRlbicpO1xuICAgICAgICAgICAgdGhpcy5mZWVkYmFja01lc3NhZ2UuY2xhc3NMaXN0LnJlbW92ZSgnaXMtaGlkZGVuJyk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRlbXBsYXRlIG5lZWRlZCB0byBzaG93IG1vcmUgZWxlbWVudHNcbiAgICAgKi9cbiAgICBwcml2YXRlIHJlbmRlclRlbXBsYXRlKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmVsLmlubmVySFRNTCA9IGBcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1iYWNrZ3JvdW5kXCI+PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwibW9kYWwtY29udGVudFwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlIGlzLXdhcm5pbmdcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1lc3NhZ2UtaGVhZGVyXCI+UGxlYXNlIGVudGVyIHlvdXIgbmFtZTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWVzc2FnZS1ib2R5XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz1cImZlZWRiYWNrLW1lc3NhZ2UgaXMtaGlkZGVuXCI+PC9wPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGZvcm0gbWV0aG9kPVwicG9zdFwiIGFjdGlvbj1cIlwiIGNsYXNzPVwibmFtZS1mb3JtXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRyb2wgaGFzLWljb25zLWxlZnRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IG5hbWU9XCJuYW1lXCIgY2xhc3M9XCJuYW1lIGlucHV0XCIgdHlwZT1cInRleHRcIiBwbGFjZWhvbGRlcj1cIkVudGVyIHlvdXIgbmFtZS4uXCIgbWF4bGVuZ3RoPVwiJHt0aGlzLm5hbWVNYXhMZW5ndGh9XCIgYXV0b2NvbXBsZXRlPVwib2ZmXCIvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImljb24gaXMtc21hbGwgaXMtbGVmdFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJmYXMgZmEtdXNlclwiPjwvaT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb250cm9sXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwic3VibWl0XCIgY2xhc3M9XCJpbnB1dCBidXR0b25cIiB2YWx1ZT1cIlNhdmUgc2NvcmVcIi8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Zvcm0+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIGA7XG4gICAgfVxufVxuIiwiaW1wb3J0IFNjb3JlIGZyb20gJy4vc2NvcmUnO1xuaW1wb3J0IE1lc3NhZ2VTY3JlZW4gZnJvbSAnLi9tZXNzYWdlc2NyZWVuJztcbmltcG9ydCBEb21FbGVtZW50IGZyb20gXCIuLi9oZWxwZXJzL2RvbWVsZW1lbnRcIjtcbmltcG9ydCBIaWdoU2NvcmVMaXN0IGZyb20gXCIuL2hpZ2hzY29yZWxpc3RcIjtcbmltcG9ydCBOYW1lRm9ybSBmcm9tICcuL25hbWVmb3JtJztcbmltcG9ydCBXaW5kb3dFdmVudEhhbmRsZXIgZnJvbSBcIi4uL2hlbHBlcnMvd2luZG93ZXZlbnRoYW5kbGVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdVSSBleHRlbmRzIERvbUVsZW1lbnQge1xuICAgIHByaXZhdGUgc2NvcmU6IFNjb3JlO1xuICAgIHByaXZhdGUgbWVzc2FnZVNjcmVlbjogTWVzc2FnZVNjcmVlbjtcbiAgICBwcml2YXRlIG5hbWVGb3JtOiBOYW1lRm9ybTtcbiAgICBwcml2YXRlIG5hbWVGb3JtVmlzaWJsZTogYm9vbGVhbiA9IGZhbHNlO1xuICAgIHByaXZhdGUgaGlnaFNjb3JlTGlzdDogSGlnaFNjb3JlTGlzdDtcbiAgICBwcml2YXRlIGhpZ2hTY29yZUxpc3RWaXNpYmxlOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoJ2d1aScsIC0xLCAtMSk7XG5cbiAgICAgICAgdGhpcy5zY29yZSA9IG5ldyBTY29yZSgpO1xuICAgICAgICB0aGlzLm1lc3NhZ2VTY3JlZW4gPSBuZXcgTWVzc2FnZVNjcmVlbigpO1xuICAgICAgICB0aGlzLm5hbWVGb3JtID0gbmV3IE5hbWVGb3JtKCk7XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsZXZlbDpzY29yZVVwZGF0ZScsIChlKSA9PiB0aGlzLnNjb3JlLnVwZGF0ZSgoZSBhcyBDdXN0b21FdmVudCkuZGV0YWlsLnNjb3JlKSk7XG5cbiAgICAgICAgdGhpcy5oaWdoU2NvcmVMaXN0ID0gbmV3IEhpZ2hTY29yZUxpc3QoKTtcbiAgICAgICAgV2luZG93RXZlbnRIYW5kbGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwLmhpZ2hzY29yZWxpc3QnLCAoZTogS2V5Ym9hcmRFdmVudCkgPT4gdGhpcy5rZXlCb2FyZEhhbmRsZXIoZSkpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEhhbmRsZSB0aGUgc3BhY2ViYXJcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7S2V5Ym9hcmRFdmVudH0gZVxuICAgICAqL1xuICAgIGtleUJvYXJkSGFuZGxlcihlOiBLZXlib2FyZEV2ZW50KTogdm9pZCB7XG4gICAgICAgIGxldCBrZXkgPSBlLmtleS50b0xvd2VyQ2FzZSgpO1xuXG4gICAgICAgIC8vQ2hlY2tzIGZvciB0aGUgaGlnaCBzY29yZSBtb2RhbCBzaG93L2hpZGVcbiAgICAgICAgaWYgKGtleSA9PT0gJ2gnICYmIHRoaXMuaGlnaFNjb3JlTGlzdFZpc2libGUgPT09IGZhbHNlICYmIHRoaXMubmFtZUZvcm1WaXNpYmxlID09PSBmYWxzZSkge1xuICAgICAgICAgICAgdGhpcy5oaWdoU2NvcmVMaXN0VmlzaWJsZSA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLmhpZ2hTY29yZUxpc3Quc2hvdygpO1xuICAgICAgICAgICAgdGhpcy5tZXNzYWdlU2NyZWVuLmlzQWN0aXZlID0gZmFsc2U7XG4gICAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSAnZXNjYXBlJyAmJiB0aGlzLmhpZ2hTY29yZUxpc3RWaXNpYmxlID09PSB0cnVlKSB7XG4gICAgICAgICAgICB0aGlzLmhpZ2hTY29yZUxpc3RWaXNpYmxlID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLmhpZ2hTY29yZUxpc3QuaGlkZSgpO1xuICAgICAgICAgICAgdGhpcy5tZXNzYWdlU2NyZWVuLmlzQWN0aXZlID0gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vQ2hlY2tzIGZvciB0aGUgbmFtZSBlbnRlcmluZyBtb2RhbCBzaG93L2hpZGVcbiAgICAgICAgaWYgKGtleSA9PT0gJ24nICYmIHRoaXMuaGlnaFNjb3JlTGlzdFZpc2libGUgPT09IGZhbHNlICYmIHRoaXMubmFtZUZvcm1WaXNpYmxlID09PSBmYWxzZSAmJiB0aGlzLm1lc3NhZ2VTY3JlZW4uY3VycmVudEV2ZW50ID09PSAnZ2FtZTplbmQnKSB7XG4gICAgICAgICAgICB0aGlzLm5hbWVGb3JtVmlzaWJsZSA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLm5hbWVGb3JtLnNob3codGhpcy5zY29yZS5nZXQoKSk7XG4gICAgICAgICAgICB0aGlzLm1lc3NhZ2VTY3JlZW4uaXNBY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgfSBlbHNlIGlmIChrZXkgPT09ICdlc2NhcGUnICYmIHRoaXMubmFtZUZvcm1WaXNpYmxlID09PSB0cnVlKSB7XG4gICAgICAgICAgICB0aGlzLm5hbWVGb3JtVmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5uYW1lRm9ybS5oaWRlKCk7XG4gICAgICAgICAgICB0aGlzLm1lc3NhZ2VTY3JlZW4uaXNBY3RpdmUgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVHJpZ2dlcmVkIHdoZW4gYSBsZXZlbCBpcyBkb25lXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdHlwZVxuICAgICAqL1xuICAgIHB1YmxpYyBzaG93KHR5cGU6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICB0aGlzLm1lc3NhZ2VTY3JlZW4uc2hvdyh0eXBlKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUcmlnZ2VyZWQgd2hlbiBhIG5ldyBsZXZlbCBzdGFydHNcbiAgICAgKi9cbiAgICBwdWJsaWMgaGlkZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5tZXNzYWdlU2NyZWVuLmhpZGUoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUcmlnZ2VyZWQgd2hlbiB0aGUgZ2FtZSBpcyBkb25lXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbWF4U2NvcmVcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2FtZUVuZChtYXhTY29yZTogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIHRoaXMubWVzc2FnZVNjcmVlbi5zaG93KCdnYW1lOmVuZCcsIHtcbiAgICAgICAgICAgICdfX1NDT1JFX18nOiB0aGlzLnNjb3JlLmdldCgpLnRvU3RyaW5nKCksXG4gICAgICAgICAgICAnX19NQVhfU0NPUkVfXyc6IG1heFNjb3JlLnRvU3RyaW5nKClcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVHJpZ2dlcmVkIHdoZW4gd2UgbmVlZCB0byByZXN0YXJ0LCBnbyB0byBmaXJzdCBzY3JlZW4gYW5kIHNldCBzY29yZSB0byAwXG4gICAgICovXG4gICAgcHVibGljIHJlc3RhcnQoKTogdm9pZCB7XG4gICAgICAgIHRoaXMubWVzc2FnZVNjcmVlbi5oaWRlKCk7XG4gICAgICAgIHRoaXMubWVzc2FnZVNjcmVlbi5zaG93KCdnYW1lOnN0YXJ0Jyk7XG4gICAgICAgIHRoaXMuc2NvcmUudXBkYXRlKDAsIHRydWUpO1xuICAgIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFV0aWxzIHtcbiAgICAvKipcbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfVxuICAgICAqL1xuICAgIHN0YXRpYyBnZXRSYW5kb21Db2xvcigpOiBzdHJpbmcge1xuICAgICAgICBsZXQgbyA9IE1hdGgucm91bmQsIHIgPSBNYXRoLnJhbmRvbSwgcyA9IDI1NTtcbiAgICAgICAgcmV0dXJuIGByZ2JhKCR7byhyKCkgKiBzKX0sJHtvKHIoKSAqIHMpfSwke28ocigpICogcyl9LDEpYDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gbWluXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IG1heFxuICAgICAqIEByZXR1cm5zIHtudW1iZXJ9XG4gICAgICovXG4gICAgc3RhdGljIGdldFJhbmRvbUludChtaW46IG51bWJlciwgbWF4OiBudW1iZXIpOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbiArIDEpKSArIG1pbjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge0NsaWVudFJlY3R9IGFcbiAgICAgKiBAcGFyYW0ge0NsaWVudFJlY3R9IGJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAgICAgKi9cbiAgICBzdGF0aWMgY2hlY2tDb2xsaXNpb24oYTogQ2xpZW50UmVjdCwgYjogQ2xpZW50UmVjdCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gKGEubGVmdCA8PSBiLnJpZ2h0ICYmXG4gICAgICAgICAgICBiLmxlZnQgPD0gYS5yaWdodCAmJlxuICAgICAgICAgICAgYS50b3AgPD0gYi5ib3R0b20gJiZcbiAgICAgICAgICAgIGIudG9wIDw9IGEuYm90dG9tKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAbGluayBodHRwOi8vZGV0ZWN0bW9iaWxlYnJvd3NlcnMuY29tL1xuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgICAqL1xuICAgIHN0YXRpYyBpc01vYmlsZSgpOiBib29sZWFuIHtcbiAgICAgICAgY29uc3QgYSA9IG5hdmlnYXRvci51c2VyQWdlbnQgfHwgbmF2aWdhdG9yLnZlbmRvcjtcbiAgICAgICAgcmV0dXJuIC8oYW5kcm9pZHxiYlxcZCt8bWVlZ28pLittb2JpbGV8YXZhbnRnb3xiYWRhXFwvfGJsYWNrYmVycnl8YmxhemVyfGNvbXBhbHxlbGFpbmV8ZmVubmVjfGhpcHRvcHxpZW1vYmlsZXxpcChob25lfG9kfGFkKXxpcmlzfGtpbmRsZXxsZ2UgfG1hZW1vfG1pZHB8bW1wfG1vYmlsZS4rZmlyZWZveHxuZXRmcm9udHxvcGVyYSBtKG9ifGluKWl8cGFsbSggb3MpP3xwaG9uZXxwKGl4aXxyZSlcXC98cGx1Y2tlcnxwb2NrZXR8cHNwfHNlcmllcyg0fDYpMHxzeW1iaWFufHRyZW98dXBcXC4oYnJvd3NlcnxsaW5rKXx2b2RhZm9uZXx3YXB8d2luZG93cyBjZXx4ZGF8eGlpbm8vaS50ZXN0KGEpIHx8IC8xMjA3fDYzMTB8NjU5MHwzZ3NvfDR0aHB8NTBbMS02XWl8Nzcwc3w4MDJzfGEgd2F8YWJhY3xhYyhlcnxvb3xzXFwtKXxhaShrb3xybil8YWwoYXZ8Y2F8Y28pfGFtb2l8YW4oZXh8bnl8eXcpfGFwdHV8YXIoY2h8Z28pfGFzKHRlfHVzKXxhdHR3fGF1KGRpfFxcLW18ciB8cyApfGF2YW58YmUoY2t8bGx8bnEpfGJpKGxifHJkKXxibChhY3xheil8YnIoZXx2KXd8YnVtYnxid1xcLShufHUpfGM1NVxcL3xjYXBpfGNjd2F8Y2RtXFwtfGNlbGx8Y2h0bXxjbGRjfGNtZFxcLXxjbyhtcHxuZCl8Y3Jhd3xkYShpdHxsbHxuZyl8ZGJ0ZXxkY1xcLXN8ZGV2aXxkaWNhfGRtb2J8ZG8oY3xwKW98ZHMoMTJ8XFwtZCl8ZWwoNDl8YWkpfGVtKGwyfHVsKXxlcihpY3xrMCl8ZXNsOHxleihbNC03XTB8b3N8d2F8emUpfGZldGN8Zmx5KFxcLXxfKXxnMSB1fGc1NjB8Z2VuZXxnZlxcLTV8Z1xcLW1vfGdvKFxcLnd8b2QpfGdyKGFkfHVuKXxoYWllfGhjaXR8aGRcXC0obXxwfHQpfGhlaVxcLXxoaShwdHx0YSl8aHAoIGl8aXApfGhzXFwtY3xodChjKFxcLXwgfF98YXxnfHB8c3x0KXx0cCl8aHUoYXd8dGMpfGlcXC0oMjB8Z298bWEpfGkyMzB8aWFjKCB8XFwtfFxcLyl8aWJyb3xpZGVhfGlnMDF8aWtvbXxpbTFrfGlubm98aXBhcXxpcmlzfGphKHR8dilhfGpicm98amVtdXxqaWdzfGtkZGl8a2VqaXxrZ3QoIHxcXC8pfGtsb258a3B0IHxrd2NcXC18a3lvKGN8ayl8bGUobm98eGkpfGxnKCBnfFxcLyhrfGx8dSl8NTB8NTR8XFwtW2Etd10pfGxpYnd8bHlueHxtMVxcLXd8bTNnYXxtNTBcXC98bWEodGV8dWl8eG8pfG1jKDAxfDIxfGNhKXxtXFwtY3J8bWUocmN8cmkpfG1pKG84fG9hfHRzKXxtbWVmfG1vKDAxfDAyfGJpfGRlfGRvfHQoXFwtfCB8b3x2KXx6eil8bXQoNTB8cDF8diApfG13YnB8bXl3YXxuMTBbMC0yXXxuMjBbMi0zXXxuMzAoMHwyKXxuNTAoMHwyfDUpfG43KDAoMHwxKXwxMCl8bmUoKGN8bSlcXC18b258dGZ8d2Z8d2d8d3QpfG5vayg2fGkpfG56cGh8bzJpbXxvcCh0aXx3dil8b3Jhbnxvd2cxfHA4MDB8cGFuKGF8ZHx0KXxwZHhnfHBnKDEzfFxcLShbMS04XXxjKSl8cGhpbHxwaXJlfHBsKGF5fHVjKXxwblxcLTJ8cG8oY2t8cnR8c2UpfHByb3h8cHNpb3xwdFxcLWd8cWFcXC1hfHFjKDA3fDEyfDIxfDMyfDYwfFxcLVsyLTddfGlcXC0pfHF0ZWt8cjM4MHxyNjAwfHJha3N8cmltOXxybyh2ZXx6byl8czU1XFwvfHNhKGdlfG1hfG1tfG1zfG55fHZhKXxzYygwMXxoXFwtfG9vfHBcXC0pfHNka1xcL3xzZShjKFxcLXwwfDEpfDQ3fG1jfG5kfHJpKXxzZ2hcXC18c2hhcnxzaWUoXFwtfG0pfHNrXFwtMHxzbCg0NXxpZCl8c20oYWx8YXJ8YjN8aXR8dDUpfHNvKGZ0fG55KXxzcCgwMXxoXFwtfHZcXC18diApfHN5KDAxfG1iKXx0MigxOHw1MCl8dDYoMDB8MTB8MTgpfHRhKGd0fGxrKXx0Y2xcXC18dGRnXFwtfHRlbChpfG0pfHRpbVxcLXx0XFwtbW98dG8ocGx8c2gpfHRzKDcwfG1cXC18bTN8bTUpfHR4XFwtOXx1cChcXC5ifGcxfHNpKXx1dHN0fHY0MDB8djc1MHx2ZXJpfHZpKHJnfHRlKXx2ayg0MHw1WzAtM118XFwtdil8dm00MHx2b2RhfHZ1bGN8dngoNTJ8NTN8NjB8NjF8NzB8ODB8ODF8ODN8ODV8OTgpfHczYyhcXC18ICl8d2ViY3x3aGl0fHdpKGcgfG5jfG53KXx3bWxifHdvbnV8eDcwMHx5YXNcXC18eW91cnx6ZXRvfHp0ZVxcLS9pLnRlc3QoYS5zdWJzdHIoMCwgNCkpO1xuICAgIH1cblxufVxuIiwiaW1wb3J0IERvbUVsZW1lbnQgZnJvbSBcIi4uL2hlbHBlcnMvZG9tZWxlbWVudFwiO1xuaW1wb3J0IFV0aWxzIGZyb20gXCIuLi9oZWxwZXJzL3V0aWxzXCI7XG5pbXBvcnQgTGV2ZWxFbnRpdHkgZnJvbSBcIi4vbGV2ZWxlbnRpdHlcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmxvY2sgZXh0ZW5kcyBEb21FbGVtZW50IGltcGxlbWVudHMgTGV2ZWxFbnRpdHkge1xuICAgIHByaXZhdGUgcmVhZG9ubHkgc3BlZWQ6IG51bWJlcjtcbiAgICBwcml2YXRlIHJlYWRvbmx5IHdpZHRoOiBudW1iZXI7XG4gICAgcHJpdmF0ZSByZWFkb25seSBoZWlnaHQ6IG51bWJlcjtcbiAgICBwdWJsaWMgY29sb3I6IHN0cmluZztcbiAgICBwcml2YXRlIGRlc3RpbmF0aW9uID0ge3g6IDAsIHk6IDB9O1xuXG4gICAgY29uc3RydWN0b3IoY29sb3I6IHN0cmluZywgc3BlZWQ6IG51bWJlciwgd2lkdGg6IG51bWJlciwgaGVpZ2h0OiBudW1iZXIpIHtcbiAgICAgICAgc3VwZXIoJ2Jsb2NrJywgMCwgMCwgJ2xldmVsJyk7XG5cbiAgICAgICAgdGhpcy5zcGVlZCA9IHNwZWVkO1xuICAgICAgICB0aGlzLndpZHRoID0gd2lkdGg7XG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gaGVpZ2h0O1xuICAgICAgICB0aGlzLmNvbG9yID0gY29sb3I7XG5cbiAgICAgICAgdGhpcy5lbC5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2UgPSBgcmVwZWF0aW5nLWxpbmVhci1ncmFkaWVudCgke1V0aWxzLmdldFJhbmRvbUludCgwLCAzNjApfWRlZywgIzAwMDAwMCwgIzAwMDAwMCAke1V0aWxzLmdldFJhbmRvbUludCgyLCAxMCl9cHgsICR7dGhpcy5jb2xvcn0gMTBweCwgJHt0aGlzLmNvbG9yfSAke1V0aWxzLmdldFJhbmRvbUludCgyMCwgNDApfXB4KWA7XG4gICAgICAgIHRoaXMuZWwuc3R5bGUud2lkdGggPSBgJHt0aGlzLndpZHRofXB4YDtcbiAgICAgICAgdGhpcy5lbC5zdHlsZS5oZWlnaHQgPSBgJHt0aGlzLmhlaWdodH1weGA7XG5cbiAgICAgICAgdGhpcy54ID0gVXRpbHMuZ2V0UmFuZG9tSW50KDAsICh3aW5kb3cub3V0ZXJXaWR0aCAtIHRoaXMud2lkdGgpKTtcbiAgICAgICAgdGhpcy55ID0gVXRpbHMuZ2V0UmFuZG9tSW50KDAsIChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0IC0gdGhpcy5oZWlnaHQpKTtcbiAgICAgICAgdGhpcy5lbC5zdHlsZS50cmFuc2Zvcm0gPSBgdHJhbnNsYXRlKCR7dGhpcy54fXB4LCAke3RoaXMueX1weClgO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIE1haW4gdXBkYXRlIGhhbmRsZXIgZm9yIHRoZSBnYW1lIGZvciBtb3Zpbmcgb3VyIGJsb2NrIHJhbmRvbWx5IG92ZXIgdGhlIHNjcmVlblxuICAgICAqL1xuICAgIHB1YmxpYyB1cGRhdGUoKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLnggPiAodGhpcy5kZXN0aW5hdGlvbi54IC0gdGhpcy5zcGVlZCkgJiYgdGhpcy54IDwgKHRoaXMuZGVzdGluYXRpb24ueCArIHRoaXMuc3BlZWQpKSB7XG4gICAgICAgICAgICB0aGlzLmRlc3RpbmF0aW9uLnggPSBVdGlscy5nZXRSYW5kb21JbnQoMCwgKHdpbmRvdy5vdXRlcldpZHRoIC0gdGhpcy53aWR0aCkpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnkgPiAodGhpcy5kZXN0aW5hdGlvbi55IC0gdGhpcy5zcGVlZCkgJiYgdGhpcy55IDwgKHRoaXMuZGVzdGluYXRpb24ueSArIHRoaXMuc3BlZWQpKSB7XG4gICAgICAgICAgICB0aGlzLmRlc3RpbmF0aW9uLnkgPSBVdGlscy5nZXRSYW5kb21JbnQoMCwgKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQgLSB0aGlzLmhlaWdodCkpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMuZGVzdGluYXRpb24ueCA+PSB0aGlzLngpIHtcbiAgICAgICAgICAgIHRoaXMueCArPSB0aGlzLnNwZWVkO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy54IC09IHRoaXMuc3BlZWQ7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5kZXN0aW5hdGlvbi55ID49IHRoaXMueSkge1xuICAgICAgICAgICAgdGhpcy55ICs9IHRoaXMuc3BlZWQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnkgLT0gdGhpcy5zcGVlZDtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZWwuc3R5bGUudHJhbnNmb3JtID0gYHRyYW5zbGF0ZSgke3RoaXMueH1weCwgJHt0aGlzLnl9cHgpYDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBIYW5kbGVyIGZvciBjbGlja2luZyB0aGUgYmxvY2tzXG4gICAgICovXG4gICAgcHVibGljIGRlc3Ryb3koKTogdm9pZCB7XG4gICAgICAgIHRoaXMuZWwucmVtb3ZlKCk7XG4gICAgfVxufVxuIiwiaW1wb3J0IGNvbmZpZyBmcm9tICcuLi9jb25maWcuanNvbic7XG5pbXBvcnQgRG9tRWxlbWVudCBmcm9tIFwiLi4vaGVscGVycy9kb21lbGVtZW50XCI7XG5pbXBvcnQgQmxvY2sgZnJvbSBcIi4vYmxvY2tcIjtcbmltcG9ydCBXaW5kb3dFdmVudEhhbmRsZXIgZnJvbSBcIi4uL2hlbHBlcnMvd2luZG93ZXZlbnRoYW5kbGVyXCI7XG5pbXBvcnQgTGV2ZWxFbnRpdHkgZnJvbSBcIi4vbGV2ZWxlbnRpdHlcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxheWVyIGV4dGVuZHMgRG9tRWxlbWVudCBpbXBsZW1lbnRzIExldmVsRW50aXR5IHtcbiAgICBwcml2YXRlIGhlaWdodDogbnVtYmVyID0gMTA7XG4gICAgcHJpdmF0ZSB3aWR0aDogbnVtYmVyID0gMTA7XG4gICAgcHJpdmF0ZSBncm93dGhGYWN0b3I6IG51bWJlciA9IGNvbmZpZy5nYW1lLnBsYXllci5ncm93dGhGYWN0b3I7XG4gICAgcHJpdmF0ZSBzcGVlZDogbnVtYmVyID0gY29uZmlnLmdhbWUucGxheWVyLnNwZWVkO1xuICAgIHByaXZhdGUgc3BlZWRJbmNyZWFzZUZhY3RvcjogbnVtYmVyID0gY29uZmlnLmdhbWUucGxheWVyLnNwZWVkSW5jcmVhc2VGYWN0b3I7XG4gICAgcHJpdmF0ZSBrZXlzQWxsb3dlZDogc3RyaW5nW10gPSBbJ2Fycm93bGVmdCcsICdhcnJvd3VwJywgJ2Fycm93cmlnaHQnLCAnYXJyb3dkb3duJ107XG4gICAgcHJpdmF0ZSBrZXlzUHJlc3NlZDogc3RyaW5nW10gPSBbXTtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigncGxheWVyJywgMCwgMCwgJ2xldmVsJyk7XG4gICAgICAgIHRoaXMueCA9IHdpbmRvdy5vdXRlcldpZHRoIC8gMiAtIHRoaXMud2lkdGggLyAyO1xuICAgICAgICB0aGlzLnkgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0IC8gMiAtIHRoaXMuaGVpZ2h0IC8gMjtcblxuICAgICAgICB0aGlzLmVsLnN0eWxlLndpZHRoID0gYCR7dGhpcy53aWR0aH1weGA7XG4gICAgICAgIHRoaXMuZWwuc3R5bGUuaGVpZ2h0ID0gYCR7dGhpcy5oZWlnaHR9cHhgO1xuICAgICAgICB0aGlzLmVsLnN0eWxlLmJvcmRlclJhZGl1cyA9IGAke3RoaXMud2lkdGh9cHhgO1xuXG4gICAgICAgIFdpbmRvd0V2ZW50SGFuZGxlci5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duLnBsYXllcicsIChlOiBLZXlib2FyZEV2ZW50KSA9PiB0aGlzLmtleURvd25IYW5kbGVyKGUpKTtcbiAgICAgICAgV2luZG93RXZlbnRIYW5kbGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwLnBsYXllcicsIChlOiBLZXlib2FyZEV2ZW50KSA9PiB0aGlzLmtleVVwSGFuZGxlcihlKSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogS2V5IGRvd24gaGFuZGxlciBmb3IgbW92aW5nIHRoZSBwbGF5ZXJcbiAgICAgKlxuICAgICAqIEBwYXJhbSBlXG4gICAgICovXG4gICAgcHJpdmF0ZSBrZXlEb3duSGFuZGxlcihlOiBLZXlib2FyZEV2ZW50KTogdm9pZCB7XG4gICAgICAgIGxldCBrZXkgPSBlLmtleS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICBpZiAodGhpcy5rZXlzQWxsb3dlZC5pbmRleE9mKGtleSkgPiAtMSAmJiB0aGlzLmtleXNQcmVzc2VkLmluZGV4T2Yoa2V5KSA9PT0gLTEpIHtcbiAgICAgICAgICAgIHRoaXMua2V5c1ByZXNzZWQucHVzaChrZXkpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogS2V5IGRvd24gaGFuZGxlciBmb3IgbW92aW5nIHRoZSBwbGF5ZXJcbiAgICAgKlxuICAgICAqIEBwYXJhbSBlXG4gICAgICovXG4gICAgcHJpdmF0ZSBrZXlVcEhhbmRsZXIoZTogS2V5Ym9hcmRFdmVudCk6IHZvaWQge1xuICAgICAgICBsZXQga2V5ID0gZS5rZXkudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgbGV0IGtleVByZXNzZWRQb3NpdGlvbiA9IHRoaXMua2V5c1ByZXNzZWQuaW5kZXhPZihrZXkpO1xuICAgICAgICBpZiAodGhpcy5rZXlzQWxsb3dlZC5pbmRleE9mKGtleSkgPiAtMSAmJiBrZXlQcmVzc2VkUG9zaXRpb24gPiAtMSkge1xuICAgICAgICAgICAgdGhpcy5rZXlzUHJlc3NlZC5zcGxpY2Uoa2V5UHJlc3NlZFBvc2l0aW9uLCAxKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFVwZGF0ZSB0aGUgYWN0dWFsIHBvc2l0aW9uIGJhc2VkIG9uIGVhcmxpZXIgZXZlbnRzXG4gICAgICovXG4gICAgcHVibGljIHVwZGF0ZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5rZXlzUHJlc3NlZC5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgICAgICAgIHN3aXRjaCAoa2V5KSB7XG4gICAgICAgICAgICAgICAgY2FzZSAnYXJyb3dsZWZ0JzpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy54IC09IHRoaXMuc3BlZWQ7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSAnYXJyb3d1cCc6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMueSAtPSB0aGlzLnNwZWVkO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGNhc2UgJ2Fycm93cmlnaHQnOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLnggKz0gdGhpcy5zcGVlZDtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBjYXNlICdhcnJvd2Rvd24nOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLnkgKz0gdGhpcy5zcGVlZDtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vQ2hlY2tzIHRvIHN0YXkgaW4gYm91bmRzXG4gICAgICAgIGlmICh0aGlzLnggPCAwKSB7XG4gICAgICAgICAgICB0aGlzLnggPSAwO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnkgPCAwKSB7XG4gICAgICAgICAgICB0aGlzLnkgPSAwO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnggPiAod2luZG93Lm91dGVyV2lkdGggLSB0aGlzLndpZHRoKSkge1xuICAgICAgICAgICAgdGhpcy54ID0gKHdpbmRvdy5vdXRlcldpZHRoIC0gdGhpcy53aWR0aCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMueSA+IChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0IC0gdGhpcy5oZWlnaHQpKSB7XG4gICAgICAgICAgICB0aGlzLnkgPSAoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodCAtIHRoaXMuaGVpZ2h0KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZWwuc3R5bGUudHJhbnNmb3JtID0gYHRyYW5zbGF0ZSgke3RoaXMueH1weCwgJHt0aGlzLnl9cHgpYDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBVcGRhdGUgcGxheWVyIHdoZW4gYSBibG9jayBnb3QgY2F1Z2h0XG4gICAgICpcbiAgICAgKiBAcGFyYW0gYmxvY2tcbiAgICAgKi9cbiAgICBwdWJsaWMgYmxvY2tDYXVnaHQoYmxvY2s6IEJsb2NrKTogdm9pZCB7XG4gICAgICAgIHRoaXMuc3BlZWQgKz0gdGhpcy5zcGVlZEluY3JlYXNlRmFjdG9yO1xuICAgICAgICB0aGlzLndpZHRoICs9IHRoaXMuZ3Jvd3RoRmFjdG9yO1xuICAgICAgICB0aGlzLmhlaWdodCArPSB0aGlzLmdyb3d0aEZhY3RvcjtcblxuICAgICAgICB0aGlzLmVsLnN0eWxlLmhlaWdodCA9IGAke3RoaXMuaGVpZ2h0fXB4YDtcbiAgICAgICAgdGhpcy5lbC5zdHlsZS53aWR0aCA9IGAke3RoaXMud2lkdGh9cHhgO1xuICAgICAgICB0aGlzLmVsLnN0eWxlLmJvcmRlclJhZGl1cyA9IGAke3RoaXMud2lkdGh9cHhgO1xuICAgICAgICB0aGlzLmVsLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGJsb2NrLmNvbG9yO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENsZWFuIHVwIVxuICAgICAqL1xuICAgIHB1YmxpYyBkZXN0cm95KCk6IHZvaWQge1xuICAgICAgICB0aGlzLmVsLnJlbW92ZSgpO1xuICAgICAgICBXaW5kb3dFdmVudEhhbmRsZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bi5wbGF5ZXInKTtcbiAgICAgICAgV2luZG93RXZlbnRIYW5kbGVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleXVwLnBsYXllcicpO1xuICAgIH1cbn1cbiIsImltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlnLmpzb24nO1xuaW1wb3J0IERvbUVsZW1lbnQgZnJvbSBcIi4uL2hlbHBlcnMvZG9tZWxlbWVudFwiO1xuaW1wb3J0IExldmVsRW50aXR5IGZyb20gXCIuL2xldmVsZW50aXR5XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRpbWVyIGV4dGVuZHMgRG9tRWxlbWVudCBpbXBsZW1lbnRzIExldmVsRW50aXR5IHtcbiAgICBzZWNvbmRzOiBudW1iZXIgPSBjb25maWcuZ2FtZS5zZWNvbmRzUGVyTGV2ZWw7XG4gICAgaW50ZXJ2YWxJZDogbnVtYmVyO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCd0aW1lcicsIC0xLCAtMSwgJ2xldmVsJyk7XG5cbiAgICAgICAgdGhpcy5yZW5kZXJUZW1wbGF0ZSgpO1xuICAgICAgICB0aGlzLmVsLmNsYXNzTGlzdC5hZGQoJ21lc3NhZ2UnLCAnaXMtcHJpbWFyeScpO1xuICAgICAgICB0aGlzLmVsLnF1ZXJ5U2VsZWN0b3IoJy5zZWNvbmRzJykuaW5uZXJIVE1MID0gdGhpcy5zZWNvbmRzLnRvU3RyaW5nKCk7XG5cbiAgICAgICAgdGhpcy5pbnRlcnZhbElkID0gc2V0SW50ZXJ2YWwoKCkgPT4gdGhpcy51cGRhdGUoKSwgMTAwMCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ291bnRkb3duIG9mIHNlY29uZHNcbiAgICAgKi9cbiAgICBwdWJsaWMgdXBkYXRlKCk6IHZvaWQge1xuICAgICAgICB0aGlzLnNlY29uZHMtLTtcbiAgICAgICAgdGhpcy5lbC5xdWVyeVNlbGVjdG9yKCcuc2Vjb25kcycpLmlubmVySFRNTCA9IHRoaXMuc2Vjb25kcy50b1N0cmluZygpO1xuXG4gICAgICAgIGlmICh0aGlzLnNlY29uZHMgPD0gMykge1xuICAgICAgICAgICAgdGhpcy5lbC5jbGFzc0xpc3QucmVtb3ZlKCdpcy1wcmltYXJ5Jyk7XG4gICAgICAgICAgICB0aGlzLmVsLmNsYXNzTGlzdC5hZGQoJ2lzLWRhbmdlcicpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5lbC5jbGFzc0xpc3QuYWRkKCdpcy1wcmltYXJ5Jyk7XG4gICAgICAgICAgICB0aGlzLmVsLmNsYXNzTGlzdC5yZW1vdmUoJ2lzLWRhbmdlcicpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMuc2Vjb25kcyA9PT0gMCkge1xuICAgICAgICAgICAgd2luZG93LmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCd0aW1lcjpkb25lJykpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIGRlc3Ryb3koKTogdm9pZCB7XG4gICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbElkKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUZW1wbGF0ZSBuZWVkZWQgdG8gc2hvdyBtb3JlIGVsZW1lbnRzXG4gICAgICovXG4gICAgcHJpdmF0ZSByZW5kZXJUZW1wbGF0ZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5lbC5pbm5lckhUTUwgPSBgXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWVzc2FnZS1ib2R5XCI+XG4gICAgICAgICAgICAgICAgPHNwYW4+dGltZTogPC9zcGFuPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwic2Vjb25kc1wiPjwvc3Bhbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICBgO1xuICAgIH1cbn1cbiIsImltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlnLmpzb24nO1xuaW1wb3J0IERvbUVsZW1lbnQgZnJvbSBcIi4uL2hlbHBlcnMvZG9tZWxlbWVudFwiO1xuaW1wb3J0IEJsb2NrIGZyb20gXCIuL2Jsb2NrXCI7XG5pbXBvcnQgUGxheWVyIGZyb20gXCIuL3BsYXllclwiO1xuaW1wb3J0IFRpbWVyIGZyb20gXCIuL3RpbWVyXCI7XG5pbXBvcnQgVXRpbHMgZnJvbSBcIi4uL2hlbHBlcnMvdXRpbHNcIjtcbmltcG9ydCBXaW5kb3dFdmVudEhhbmRsZXIgZnJvbSBcIi4uL2hlbHBlcnMvd2luZG93ZXZlbnRoYW5kbGVyXCI7XG5pbXBvcnQgTGV2ZWxFbnRpdHkgZnJvbSBcIi4vbGV2ZWxlbnRpdHlcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTGV2ZWwgZXh0ZW5kcyBEb21FbGVtZW50IGltcGxlbWVudHMgTGV2ZWxFbnRpdHkge1xuICAgIHByaXZhdGUgcmVhZG9ubHkgdG90YWxCbG9ja3M6IG51bWJlcjtcbiAgICBwcml2YXRlIHJlYWRvbmx5IHNjb3JlUGVyQmxvY2s6IG51bWJlcjtcbiAgICBwcml2YXRlIGJsb2NrczogQmxvY2tbXSA9IFtdO1xuICAgIHByaXZhdGUgcGxheWVyOiBQbGF5ZXI7XG4gICAgcHJpdmF0ZSB0aW1lcjogVGltZXI7XG4gICAgcHVibGljIGZhaWxlZCA9IGZhbHNlO1xuXG4gICAgY29uc3RydWN0b3IodG90YWxCbG9ja3M6IG51bWJlciwgc2NvcmVQZXJCbG9jazogbnVtYmVyKSB7XG4gICAgICAgIHN1cGVyKCdsZXZlbCcsIDAsIDApO1xuXG4gICAgICAgIHRoaXMudG90YWxCbG9ja3MgPSB0b3RhbEJsb2NrcztcbiAgICAgICAgdGhpcy5zY29yZVBlckJsb2NrID0gc2NvcmVQZXJCbG9jaztcbiAgICAgICAgdGhpcy5wbGF5ZXIgPSBuZXcgUGxheWVyKCk7XG4gICAgICAgIHRoaXMudGltZXIgPSBuZXcgVGltZXIoKTtcblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMudG90YWxCbG9ja3M7IGkrKykge1xuICAgICAgICAgICAgdGhpcy5ibG9ja3MucHVzaChuZXcgQmxvY2soVXRpbHMuZ2V0UmFuZG9tQ29sb3IoKSwgVXRpbHMuZ2V0UmFuZG9tSW50KGNvbmZpZy5nYW1lLmJsb2NrU3BlZWQubWluLCBjb25maWcuZ2FtZS5ibG9ja1NwZWVkLm1heCksIFV0aWxzLmdldFJhbmRvbUludChjb25maWcuZ2FtZS5ibG9ja1BpeGVscy5taW4sIGNvbmZpZy5nYW1lLmJsb2NrUGl4ZWxzLm1heCksIFV0aWxzLmdldFJhbmRvbUludChjb25maWcuZ2FtZS5ibG9ja1BpeGVscy5taW4sIGNvbmZpZy5nYW1lLmJsb2NrUGl4ZWxzLm1heCkpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIFdpbmRvd0V2ZW50SGFuZGxlci5hZGRFdmVudExpc3RlbmVyKCd0aW1lcjpkb25lJywgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5mYWlsZWQgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5kZXN0cm95KCdsZXZlbDpmYWlsZWQnKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ2hlY2tzIGZvciBjb2xsaXNpb24gYW5kIHBvdGVudGlhbCBzdWNjZXNzIG9mIHRoaXMgbGV2ZWxcbiAgICAgKi9cbiAgICBwdWJsaWMgdXBkYXRlKCk6IHZvaWQge1xuICAgICAgICB0aGlzLnBsYXllci51cGRhdGUoKTtcbiAgICAgICAgdGhpcy5ibG9ja3MuZm9yRWFjaCgoYmxvY2ssIGluZGV4KSA9PiB7XG4gICAgICAgICAgICBibG9jay51cGRhdGUoKTtcblxuICAgICAgICAgICAgaWYgKFV0aWxzLmNoZWNrQ29sbGlzaW9uKHRoaXMucGxheWVyLmdldENsaWVudFJlYWN0KCksIGJsb2NrLmdldENsaWVudFJlYWN0KCkpICYmIHRoaXMuZmFpbGVkID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgIHRoaXMucGxheWVyLmJsb2NrQ2F1Z2h0KGJsb2NrKTtcbiAgICAgICAgICAgICAgICBibG9jay5kZXN0cm95KCk7XG4gICAgICAgICAgICAgICAgdGhpcy5ibG9ja3Muc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgICAgICB3aW5kb3cuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoJ2xldmVsOnNjb3JlVXBkYXRlJywge2RldGFpbDoge3Njb3JlOiB0aGlzLnNjb3JlUGVyQmxvY2t9fSkpO1xuXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuYmxvY2tzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmRlc3Ryb3koJ2xldmVsOnN1Y2Nlc3MnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIERlc3Ryb3kgb2JqZWN0ICYgdGltZXIgYW5kIHRyaWdnZXIgZXZlbnQgdG8gbm90aWZ5IHRoZSB3b3JsZCBhYm91dCB0aGUgc3RhdHVzIG9mIHRoaXMgbGV2ZWxcbiAgICAgKlxuICAgICAqIEBwYXJhbSBldmVudFR5cGVcbiAgICAgKi9cbiAgICBwdWJsaWMgZGVzdHJveShldmVudFR5cGU6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICB0aGlzLnRpbWVyLmRlc3Ryb3koKTtcbiAgICAgICAgdGhpcy5wbGF5ZXIuZGVzdHJveSgpO1xuICAgICAgICB0aGlzLmJsb2Nrcy5mb3JFYWNoKChibG9jaywgaW5kZXgpID0+IHtcbiAgICAgICAgICAgIGJsb2NrLmRlc3Ryb3koKTtcbiAgICAgICAgICAgIHRoaXMuYmxvY2tzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgIH0pO1xuICAgICAgICBXaW5kb3dFdmVudEhhbmRsZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcigndGltZXI6ZG9uZScpO1xuICAgICAgICB3aW5kb3cuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoZXZlbnRUeXBlKSk7XG4gICAgICAgIHRoaXMuZWwucmVtb3ZlKCk7XG4gICAgfVxufVxuIiwiaW1wb3J0IEdhbWUgZnJvbSAnLi9nYW1lJztcbmltcG9ydCBVdGlscyBmcm9tIFwiLi9oZWxwZXJzL3V0aWxzXCI7XG5pbXBvcnQgTm9Nb2JpbGUgZnJvbSBcIi4vZ3VpL25vbW9iaWxlXCI7XG5cbi8vVGhlcmUgaXMgYSB0ZW1wb3JhcnkgY2hlY2sgdG8gYXZvaWQgbW9iaWxlIHVzZXJzIHRvIGhhdmUgYSBicm9rZW4gZXhwZXJpZW5jZS5cbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCAoKSA9PiBVdGlscy5pc01vYmlsZSgpID8gbmV3IE5vTW9iaWxlKCkgOiBuZXcgR2FtZSgpKTtcbiIsImltcG9ydCBEb21FbGVtZW50IGZyb20gXCIuLi9oZWxwZXJzL2RvbWVsZW1lbnRcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTm9Nb2JpbGUgZXh0ZW5kcyBEb21FbGVtZW50IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoJ25vbW9iaWxlJywgLTEsIC0xKTtcbiAgICAgICAgdGhpcy5lbC5jbGFzc0xpc3QuYWRkKCdtb2RhbCcsICdpcy1hY3RpdmUnKTtcbiAgICAgICAgdGhpcy5yZW5kZXJUZW1wbGF0ZSgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRlbXBsYXRlIG5lZWRlZCB0byBzaG93IG1vcmUgZWxlbWVudHNcbiAgICAgKi9cbiAgICBwcml2YXRlIHJlbmRlclRlbXBsYXRlKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmVsLmlubmVySFRNTCA9IGBcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1iYWNrZ3JvdW5kXCI+PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwibW9kYWwtY29udGVudFwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlIGlzLXdhcm5pbmdcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1lc3NhZ2UtaGVhZGVyXCI+V2hvb3BzISBObyBzdXBwb3J0IHlldC4uPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlLWJvZHlcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIEN1cnJlbnRseSB0aGlzIGdhbWUgaXMgbm90IHBsYXlhYmxlIG9uIHRvdWNoIGRldmljZXMuIFBsZWFzZSB1c2UgeW91ciBkZXNrdG9wIGtleWJvYXJkIHRvIGVudGVyIHRoZSBjb21wZXRpdGlvbiBhbmQgc2V0IGEgcGVyZmVjdCBoaWdoIHNjb3JlIVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICBgO1xuICAgIH1cbn1cbiIsImltcG9ydCBjb25maWcgZnJvbSAnLi9jb25maWcuanNvbic7XG5pbXBvcnQgR1VJIGZyb20gJy4vZ3VpL2d1aSc7XG5pbXBvcnQgTGV2ZWwgZnJvbSBcIi4vbGV2ZWwvbGV2ZWxcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZSB7XG4gICAgcHJpdmF0ZSBsZXZlbDogTGV2ZWw7XG4gICAgcHJpdmF0ZSBsZXZlbHNQZXJHYW1lOiBudW1iZXIgPSBjb25maWcuZ2FtZS5sZXZlbHNQZXJHYW1lO1xuICAgIHByaXZhdGUgY3VycmVudExldmVsc1BsYXllZDogbnVtYmVyID0gMDtcbiAgICBwcml2YXRlIHN0YXJ0RWxlbWVudHNQZXJMZXZlbDogbnVtYmVyID0gY29uZmlnLmdhbWUuc3RhcnRFbGVtZW50c1BlckxldmVsO1xuICAgIHByaXZhdGUgZWxlbWVudHNJbmNyZWFzZVBlckxldmVsOiBudW1iZXIgPSBjb25maWcuZ2FtZS5lbGVtZW50c0luY3JlYXNlUGVyTGV2ZWw7XG4gICAgcHJpdmF0ZSBzY29yZVBlckVsZW1lbnQ6IG51bWJlciA9IGNvbmZpZy5nYW1lLnNjb3JlUGVyRWxlbWVudDtcbiAgICBwcml2YXRlIHJlYWRvbmx5IG1heFNjb3JlOiBudW1iZXI7XG4gICAgcHJpdmF0ZSBndWk6IEdVSTtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmd1aSA9IG5ldyBHVUkoKTtcbiAgICAgICAgdGhpcy5tYXhTY29yZSA9IHRoaXMuY2FsY3VsYXRlTWF4U2NvcmUoKTtcbiAgICAgICAgdGhpcy5nYW1lTG9vcCgpO1xuXG4gICAgICAgIFsnbGV2ZWw6c3VjY2VzcycsICdsZXZlbDpmYWlsZWQnXS5tYXAoKGV2ZW50VHlwZSkgPT4ge1xuICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCAoZSkgPT4gdGhpcy51cGRhdGUoZS50eXBlKSk7XG4gICAgICAgIH0pO1xuICAgICAgICBbJ2dhbWU6c3RhcnQ6Y2xpY2snLCAnbGV2ZWw6c3VjY2VzczpjbGljaycsICdsZXZlbDpmYWlsZWQ6Y2xpY2snXS5tYXAoKGV2ZW50VHlwZSkgPT4ge1xuICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCAoKSA9PiB0aGlzLnN0YXJ0TmV3TGV2ZWwoKSk7XG4gICAgICAgIH0pO1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignZ2FtZTplbmQ6Y2xpY2snLCAoKSA9PiB0aGlzLnJlc3RhcnQoKSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ2FsY3VsYXRlIHRoZSBzY29yZSB3aXRoIGF2YWlsYWJsZSBwYXJhbWV0ZXJzXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfVxuICAgICAqL1xuICAgIHByaXZhdGUgY2FsY3VsYXRlTWF4U2NvcmUoKTogbnVtYmVyIHtcbiAgICAgICAgbGV0IG1heFNjb3JlID0gMDtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmxldmVsc1BlckdhbWU7IGkrKykge1xuICAgICAgICAgICAgbGV0IGVsZW1lbnRzID0gdGhpcy5zdGFydEVsZW1lbnRzUGVyTGV2ZWwgKyAoaSA9PT0gMCA/IDAgOiAodGhpcy5lbGVtZW50c0luY3JlYXNlUGVyTGV2ZWwgKiBpKSk7XG4gICAgICAgICAgICBtYXhTY29yZSArPSAoZWxlbWVudHMgKiB0aGlzLnNjb3JlUGVyRWxlbWVudCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG1heFNjb3JlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoZSBvbmx5IHBsYWNlIGZvciBhIHJlcXVlc3RBbmltYXRpb25GcmFtZVxuICAgICAqL1xuICAgIHByaXZhdGUgZ2FtZUxvb3AoKTogdm9pZCB7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5sZXZlbCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIHRoaXMubGV2ZWwudXBkYXRlKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHRoaXMuZ2FtZUxvb3AoKSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVXBkYXRlIHRoZSBnYW1lIGJ5IGVpdGhlciB0aGUgZW5kIG9yIGFueXRoaW5nIGluIGJldHdlZW4gbGV2ZWxzXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdHlwZVxuICAgICAqL1xuICAgIHByaXZhdGUgdXBkYXRlKHR5cGU6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICB0aGlzLmN1cnJlbnRMZXZlbHNQbGF5ZWQrKztcbiAgICAgICAgaWYgKHRoaXMuY3VycmVudExldmVsc1BsYXllZCA9PT0gdGhpcy5sZXZlbHNQZXJHYW1lKSB7XG4gICAgICAgICAgICB0aGlzLmd1aS5nYW1lRW5kKHRoaXMubWF4U2NvcmUpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5ndWkuc2hvdyh0eXBlKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaW1lIHRvIHN0YXJ0IGEgbmV3IGxldmVsIHdpdGggbWFkbmVzc1xuICAgICAqL1xuICAgIHByaXZhdGUgc3RhcnROZXdMZXZlbCgpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMubGV2ZWwgJiYgdGhpcy5sZXZlbC5mYWlsZWQgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICB0aGlzLnN0YXJ0RWxlbWVudHNQZXJMZXZlbCArPSB0aGlzLmVsZW1lbnRzSW5jcmVhc2VQZXJMZXZlbDtcbiAgICAgICAgfVxuXG4gICAgICAgIGRlbGV0ZSB0aGlzLmxldmVsO1xuICAgICAgICB0aGlzLmd1aS5oaWRlKCk7XG5cbiAgICAgICAgdGhpcy5sZXZlbCA9IG5ldyBMZXZlbCh0aGlzLnN0YXJ0RWxlbWVudHNQZXJMZXZlbCwgdGhpcy5zY29yZVBlckVsZW1lbnQpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFN0YXJ0IGV2ZXJ5dGhpbmcgZnJvbSB0aGUgYmVnaW5uaW5nXG4gICAgICovXG4gICAgcHJpdmF0ZSByZXN0YXJ0KCk6IHZvaWQge1xuICAgICAgICB0aGlzLmd1aS5yZXN0YXJ0KCk7XG4gICAgICAgIHRoaXMuY3VycmVudExldmVsc1BsYXllZCA9IDA7XG4gICAgICAgIHRoaXMuc3RhcnRFbGVtZW50c1BlckxldmVsID0gY29uZmlnLmdhbWUuc3RhcnRFbGVtZW50c1BlckxldmVsO1xuICAgICAgICBkZWxldGUgdGhpcy5sZXZlbDtcbiAgICB9XG59XG4iLCJtb2R1bGUuZXhwb3J0cyA9IC9cXGIoNHI1ZXw1aDF0fDVoaXR8YTU1fGFuYWx8YW51c3xhcjVlfGFycnNlfGFyc2V8YXNzfGFzcy1mdWNrZXJ8YXNzZXN8YXNzZnVja2VyfGFzc2Z1a2thfGFzc2hvbGV8YXNzaG9sZXN8YXNzd2hvbGV8YV9zX3N8YiF0Y2h8YjAwYnN8YjE3Y2h8YjF0Y2h8YmFsbGJhZ3xiYWxsc3xiYWxsc2Fja3xiYXN0YXJkfGJlYXN0aWFsfGJlYXN0aWFsaXR5fGJlbGxlbmR8YmVzdGlhbHxiZXN0aWFsaXR5fGJpXFwrY2h8YmlhdGNofGJpdGNofGJpdGNoZXJ8Yml0Y2hlcnN8Yml0Y2hlc3xiaXRjaGlufGJpdGNoaW5nfGJsb29keXxibG93IGpvYnxibG93am9ifGJsb3dqb2JzfGJvaW9sYXN8Ym9sbG9ja3xib2xsb2t8Ym9uZXJ8Ym9vYnxib29ic3xib29vYnN8Ym9vb29ic3xib29vb29ic3xib29vb29vb2JzfGJyZWFzdHN8YnVjZXRhfGJ1Z2dlcnxidW18YnVubnkgZnVja2VyfGJ1dHR8YnV0dGhvbGV8YnV0dG11Y2h8YnV0dHBsdWd8YzBja3xjMGNrc3Vja2VyfGNhcnBldCBtdW5jaGVyfGNhd2t8Y2hpbmt8Y2lwYXxjbDF0fGNsaXR8Y2xpdG9yaXN8Y2xpdHN8Y251dHxjb2NrfGNvY2stc3Vja2VyfGNvY2tmYWNlfGNvY2toZWFkfGNvY2ttdW5jaHxjb2NrbXVuY2hlcnxjb2Nrc3xjb2Nrc3Vja3xjb2Nrc3Vja2VkfGNvY2tzdWNrZXJ8Y29ja3N1Y2tpbmd8Y29ja3N1Y2tzfGNvY2tzdWthfGNvY2tzdWtrYXxjb2t8Y29rbXVuY2hlcnxjb2tzdWNrYXxjb29ufGNveHxjcmFwfGN1bXxjdW1tZXJ8Y3VtbWluZ3xjdW1zfGN1bXNob3R8Y3VuaWxpbmd1c3xjdW5pbGxpbmd1c3xjdW5uaWxpbmd1c3xjdW50fGN1bnRsaWNrfGN1bnRsaWNrZXJ8Y3VudGxpY2tpbmd8Y3VudHN8Y3lhbGlzfGN5YmVyZnVjfGN5YmVyZnVja3xjeWJlcmZ1Y2tlZHxjeWJlcmZ1Y2tlcnxjeWJlcmZ1Y2tlcnN8Y3liZXJmdWNraW5nfGQxY2t8ZGFtbnxkaWNrfGRpY2toZWFkfGRpbGRvfGRpbGRvc3xkaW5rfGRpbmtzfGRpcnNhfGRsY2t8ZG9nLWZ1Y2tlcnxkb2dnaW58ZG9nZ2luZ3xkb25rZXlyaWJiZXJ8ZG9vc2h8ZHVjaGV8ZHlrZXxlamFjdWxhdGV8ZWphY3VsYXRlZHxlamFjdWxhdGVzfGVqYWN1bGF0aW5nfGVqYWN1bGF0aW5nc3xlamFjdWxhdGlvbnxlamFrdWxhdGV8ZiB1IGMga3xmIHUgYyBrIGUgcnxmNG5ueXxmYWd8ZmFnZ2luZ3xmYWdnaXR0fGZhZ2dvdHxmYWdnc3xmYWdvdHxmYWdvdHN8ZmFnc3xmYW5ueXxmYW5ueWZsYXBzfGZhbm55ZnVja2VyfGZhbnl5fGZhdGFzc3xmY3VrfGZjdWtlcnxmY3VraW5nfGZlY2t8ZmVja2VyfGZlbGNoaW5nfGZlbGxhdGV8ZmVsbGF0aW98ZmluZ2VyZnVja3xmaW5nZXJmdWNrZWR8ZmluZ2VyZnVja2VyfGZpbmdlcmZ1Y2tlcnN8ZmluZ2VyZnVja2luZ3xmaW5nZXJmdWNrc3xmaXN0ZnVja3xmaXN0ZnVja2VkfGZpc3RmdWNrZXJ8ZmlzdGZ1Y2tlcnN8ZmlzdGZ1Y2tpbmd8ZmlzdGZ1Y2tpbmdzfGZpc3RmdWNrc3xmbGFuZ2V8Zm9va3xmb29rZXJ8ZnVja3xmdWNrYXxmdWNrZWR8ZnVja2VyfGZ1Y2tlcnN8ZnVja2hlYWR8ZnVja2hlYWRzfGZ1Y2tpbnxmdWNraW5nfGZ1Y2tpbmdzfGZ1Y2tpbmdzaGl0bW90aGVyZnVja2VyfGZ1Y2ttZXxmdWNrc3xmdWNrd2hpdHxmdWNrd2l0fGZ1ZGdlIHBhY2tlcnxmdWRnZXBhY2tlcnxmdWt8ZnVrZXJ8ZnVra2VyfGZ1a2tpbnxmdWtzfGZ1a3doaXR8ZnVrd2l0fGZ1eHxmdXgwcnxmX3VfY19rfGdhbmdiYW5nfGdhbmdiYW5nZWR8Z2FuZ2JhbmdzfGdheWxvcmR8Z2F5c2V4fGdvYXRzZXxHb2R8Z29kLWRhbXxnb2QtZGFtbmVkfGdvZGRhbW58Z29kZGFtbmVkfGhhcmRjb3Jlc2V4fGhlbGx8aGVzaGV8aG9hcnxob2FyZXxob2VyfGhvbW98aG9yZXxob3JuaWVzdHxob3JueXxob3RzZXh8amFjay1vZmZ8amFja29mZnxqYXB8amVyay1vZmZ8amlzbXxqaXp8aml6bXxqaXp6fGthd2t8a25vYnxrbm9iZWFkfGtub2JlZHxrbm9iZW5kfGtub2JoZWFkfGtub2Jqb2NreXxrbm9iam9rZXl8a29ja3xrb25kdW18a29uZHVtc3xrdW18a3VtbWVyfGt1bW1pbmd8a3Vtc3xrdW5pbGluZ3VzfGwzaVxcK2NofGwzaXRjaHxsYWJpYXxsdXN0fGx1c3Rpbmd8bTBmMHxtMGZvfG00NXRlcmJhdGV8bWE1dGVyYjh8bWE1dGVyYmF0ZXxtYXNvY2hpc3R8bWFzdGVyLWJhdGV8bWFzdGVyYjh8bWFzdGVyYmF0KnxtYXN0ZXJiYXQzfG1hc3RlcmJhdGV8bWFzdGVyYmF0aW9ufG1hc3RlcmJhdGlvbnN8bWFzdHVyYmF0ZXxtby1mb3xtb2YwfG1vZm98bW90aGFmdWNrfG1vdGhhZnVja2F8bW90aGFmdWNrYXN8bW90aGFmdWNrYXp8bW90aGFmdWNrZWR8bW90aGFmdWNrZXJ8bW90aGFmdWNrZXJzfG1vdGhhZnVja2lufG1vdGhhZnVja2luZ3xtb3RoYWZ1Y2tpbmdzfG1vdGhhZnVja3N8bW90aGVyIGZ1Y2tlcnxtb3RoZXJmdWNrfG1vdGhlcmZ1Y2tlZHxtb3RoZXJmdWNrZXJ8bW90aGVyZnVja2Vyc3xtb3RoZXJmdWNraW58bW90aGVyZnVja2luZ3xtb3RoZXJmdWNraW5nc3xtb3RoZXJmdWNra2F8bW90aGVyZnVja3N8bXVmZnxtdXRoYXxtdXRoYWZlY2tlcnxtdXRoYWZ1Y2trZXJ8bXV0aGVyfG11dGhlcmZ1Y2tlcnxuMWdnYXxuMWdnZXJ8bmF6aXxuaWdnM3J8bmlnZzRofG5pZ2dhfG5pZ2dhaHxuaWdnYXN8bmlnZ2F6fG5pZ2dlcnxuaWdnZXJzfG5vYnxub2Igam9rZXl8bm9iaGVhZHxub2Jqb2NreXxub2Jqb2tleXxudW1ibnV0c3xudXRzYWNrfG9yZ2FzaW18b3JnYXNpbXN8b3JnYXNtfG9yZ2FzbXN8cDBybnxwYXdufHBlY2tlcnxwZW5pc3xwZW5pc2Z1Y2tlcnxwaG9uZXNleHxwaHVja3xwaHVrfHBodWtlZHxwaHVraW5nfHBodWtrZWR8cGh1a2tpbmd8cGh1a3N8cGh1cXxwaWdmdWNrZXJ8cGltcGlzfHBpc3N8cGlzc2VkfHBpc3NlcnxwaXNzZXJzfHBpc3Nlc3xwaXNzZmxhcHN8cGlzc2lufHBpc3Npbmd8cGlzc29mZnxwb29wfHBvcm58cG9ybm98cG9ybm9ncmFwaHl8cG9ybm9zfHByaWNrfHByaWNrc3xwcm9ufHB1YmV8cHVzc2V8cHVzc2l8cHVzc2llc3xwdXNzeXxwdXNzeXN8cmVjdHVtfHJldGFyZHxyaW1qYXd8cmltbWluZ3xzIGhpdHxzLm8uYi58c2FkaXN0fHNjaGxvbmd8c2NyZXdpbmd8c2Nyb2F0fHNjcm90ZXxzY3JvdHVtfHNlbWVufHNleHxzaCFcXCt8c2ghdHxzaDF0fHNoYWd8c2hhZ2dlcnxzaGFnZ2lufHNoYWdnaW5nfHNoZW1hbGV8c2hpXFwrfHNoaXR8c2hpdGRpY2t8c2hpdGV8c2hpdGVkfHNoaXRleXxzaGl0ZnVja3xzaGl0ZnVsbHxzaGl0aGVhZHxzaGl0aW5nfHNoaXRpbmdzfHNoaXRzfHNoaXR0ZWR8c2hpdHRlcnxzaGl0dGVyc3xzaGl0dGluZ3xzaGl0dGluZ3N8c2hpdHR5fHNrYW5rfHNsdXR8c2x1dHN8c21lZ21hfHNtdXR8c25hdGNofHNvbi1vZi1hLWJpdGNofHNwYWN8c3B1bmt8c19oX2lfdHx0MXR0MWU1fHQxdHRpZXN8dGVldHN8dGVlenx0ZXN0aWNhbHx0ZXN0aWNsZXx0aXR8dGl0ZnVja3x0aXRzfHRpdHR8dGl0dGllNXx0aXR0aWVmdWNrZXJ8dGl0dGllc3x0aXR0eWZ1Y2t8dGl0dHl3YW5rfHRpdHdhbmt8dG9zc2VyfHR1cmR8dHc0dHx0d2F0fHR3YXRoZWFkfHR3YXR0eXx0d3VudHx0d3VudGVyfHYxNGdyYXx2MWdyYXx2YWdpbmF8dmlhZ3JhfHZ1bHZhfHcwMHNlfHdhbmd8d2Fua3x3YW5rZXJ8d2Fua3l8d2hvYXJ8d2hvcmV8d2lsbGllc3x3aWxseXx4cmF0ZWR8eHh4KVxcYi9naTsiLCJtb2R1bGUuZXhwb3J0cyA9IFtcIjRyNWVcIiwgXCI1aDF0XCIsIFwiNWhpdFwiLCBcImE1NVwiLCBcImFuYWxcIiwgXCJhbnVzXCIsIFwiYXI1ZVwiLCBcImFycnNlXCIsIFwiYXJzZVwiLCBcImFzc1wiLCBcImFzcy1mdWNrZXJcIiwgXCJhc3Nlc1wiLCBcImFzc2Z1Y2tlclwiLCBcImFzc2Z1a2thXCIsIFwiYXNzaG9sZVwiLCBcImFzc2hvbGVzXCIsIFwiYXNzd2hvbGVcIiwgXCJhX3Nfc1wiLCBcImIhdGNoXCIsIFwiYjAwYnNcIiwgXCJiMTdjaFwiLCBcImIxdGNoXCIsIFwiYmFsbGJhZ1wiLCBcImJhbGxzXCIsIFwiYmFsbHNhY2tcIiwgXCJiYXN0YXJkXCIsIFwiYmVhc3RpYWxcIiwgXCJiZWFzdGlhbGl0eVwiLCBcImJlbGxlbmRcIiwgXCJiZXN0aWFsXCIsIFwiYmVzdGlhbGl0eVwiLCBcImJpK2NoXCIsIFwiYmlhdGNoXCIsIFwiYml0Y2hcIiwgXCJiaXRjaGVyXCIsIFwiYml0Y2hlcnNcIiwgXCJiaXRjaGVzXCIsIFwiYml0Y2hpblwiLCBcImJpdGNoaW5nXCIsIFwiYmxvb2R5XCIsIFwiYmxvdyBqb2JcIiwgXCJibG93am9iXCIsIFwiYmxvd2pvYnNcIiwgXCJib2lvbGFzXCIsIFwiYm9sbG9ja1wiLCBcImJvbGxva1wiLCBcImJvbmVyXCIsIFwiYm9vYlwiLCBcImJvb2JzXCIsIFwiYm9vb2JzXCIsIFwiYm9vb29ic1wiLCBcImJvb29vb2JzXCIsIFwiYm9vb29vb29ic1wiLCBcImJyZWFzdHNcIiwgXCJidWNldGFcIiwgXCJidWdnZXJcIiwgXCJidW1cIiwgXCJidW5ueSBmdWNrZXJcIiwgXCJidXR0XCIsIFwiYnV0dGhvbGVcIiwgXCJidXR0bXVjaFwiLCBcImJ1dHRwbHVnXCIsIFwiYzBja1wiLCBcImMwY2tzdWNrZXJcIiwgXCJjYXJwZXQgbXVuY2hlclwiLCBcImNhd2tcIiwgXCJjaGlua1wiLCBcImNpcGFcIiwgXCJjbDF0XCIsIFwiY2xpdFwiLCBcImNsaXRvcmlzXCIsIFwiY2xpdHNcIiwgXCJjbnV0XCIsIFwiY29ja1wiLCBcImNvY2stc3Vja2VyXCIsIFwiY29ja2ZhY2VcIiwgXCJjb2NraGVhZFwiLCBcImNvY2ttdW5jaFwiLCBcImNvY2ttdW5jaGVyXCIsIFwiY29ja3NcIiwgXCJjb2Nrc3Vja1wiLCBcImNvY2tzdWNrZWRcIiwgXCJjb2Nrc3Vja2VyXCIsIFwiY29ja3N1Y2tpbmdcIiwgXCJjb2Nrc3Vja3NcIiwgXCJjb2Nrc3VrYVwiLCBcImNvY2tzdWtrYVwiLCBcImNva1wiLCBcImNva211bmNoZXJcIiwgXCJjb2tzdWNrYVwiLCBcImNvb25cIiwgXCJjb3hcIiwgXCJjcmFwXCIsIFwiY3VtXCIsIFwiY3VtbWVyXCIsIFwiY3VtbWluZ1wiLCBcImN1bXNcIiwgXCJjdW1zaG90XCIsIFwiY3VuaWxpbmd1c1wiLCBcImN1bmlsbGluZ3VzXCIsIFwiY3VubmlsaW5ndXNcIiwgXCJjdW50XCIsIFwiY3VudGxpY2tcIiwgXCJjdW50bGlja2VyXCIsIFwiY3VudGxpY2tpbmdcIiwgXCJjdW50c1wiLCBcImN5YWxpc1wiLCBcImN5YmVyZnVjXCIsIFwiY3liZXJmdWNrXCIsIFwiY3liZXJmdWNrZWRcIiwgXCJjeWJlcmZ1Y2tlclwiLCBcImN5YmVyZnVja2Vyc1wiLCBcImN5YmVyZnVja2luZ1wiLCBcImQxY2tcIiwgXCJkYW1uXCIsIFwiZGlja1wiLCBcImRpY2toZWFkXCIsIFwiZGlsZG9cIiwgXCJkaWxkb3NcIiwgXCJkaW5rXCIsIFwiZGlua3NcIiwgXCJkaXJzYVwiLCBcImRsY2tcIiwgXCJkb2ctZnVja2VyXCIsIFwiZG9nZ2luXCIsIFwiZG9nZ2luZ1wiLCBcImRvbmtleXJpYmJlclwiLCBcImRvb3NoXCIsIFwiZHVjaGVcIiwgXCJkeWtlXCIsIFwiZWphY3VsYXRlXCIsIFwiZWphY3VsYXRlZFwiLCBcImVqYWN1bGF0ZXNcIiwgXCJlamFjdWxhdGluZ1wiLCBcImVqYWN1bGF0aW5nc1wiLCBcImVqYWN1bGF0aW9uXCIsIFwiZWpha3VsYXRlXCIsIFwiZiB1IGMga1wiLCBcImYgdSBjIGsgZSByXCIsIFwiZjRubnlcIiwgXCJmYWdcIiwgXCJmYWdnaW5nXCIsIFwiZmFnZ2l0dFwiLCBcImZhZ2dvdFwiLCBcImZhZ2dzXCIsIFwiZmFnb3RcIiwgXCJmYWdvdHNcIiwgXCJmYWdzXCIsIFwiZmFubnlcIiwgXCJmYW5ueWZsYXBzXCIsIFwiZmFubnlmdWNrZXJcIiwgXCJmYW55eVwiLCBcImZhdGFzc1wiLCBcImZjdWtcIiwgXCJmY3VrZXJcIiwgXCJmY3VraW5nXCIsIFwiZmVja1wiLCBcImZlY2tlclwiLCBcImZlbGNoaW5nXCIsIFwiZmVsbGF0ZVwiLCBcImZlbGxhdGlvXCIsIFwiZmluZ2VyZnVja1wiLCBcImZpbmdlcmZ1Y2tlZFwiLCBcImZpbmdlcmZ1Y2tlclwiLCBcImZpbmdlcmZ1Y2tlcnNcIiwgXCJmaW5nZXJmdWNraW5nXCIsIFwiZmluZ2VyZnVja3NcIiwgXCJmaXN0ZnVja1wiLCBcImZpc3RmdWNrZWRcIiwgXCJmaXN0ZnVja2VyXCIsIFwiZmlzdGZ1Y2tlcnNcIiwgXCJmaXN0ZnVja2luZ1wiLCBcImZpc3RmdWNraW5nc1wiLCBcImZpc3RmdWNrc1wiLCBcImZsYW5nZVwiLCBcImZvb2tcIiwgXCJmb29rZXJcIiwgXCJmdWNrXCIsIFwiZnVja2FcIiwgXCJmdWNrZWRcIiwgXCJmdWNrZXJcIiwgXCJmdWNrZXJzXCIsIFwiZnVja2hlYWRcIiwgXCJmdWNraGVhZHNcIiwgXCJmdWNraW5cIiwgXCJmdWNraW5nXCIsIFwiZnVja2luZ3NcIiwgXCJmdWNraW5nc2hpdG1vdGhlcmZ1Y2tlclwiLCBcImZ1Y2ttZVwiLCBcImZ1Y2tzXCIsIFwiZnVja3doaXRcIiwgXCJmdWNrd2l0XCIsIFwiZnVkZ2UgcGFja2VyXCIsIFwiZnVkZ2VwYWNrZXJcIiwgXCJmdWtcIiwgXCJmdWtlclwiLCBcImZ1a2tlclwiLCBcImZ1a2tpblwiLCBcImZ1a3NcIiwgXCJmdWt3aGl0XCIsIFwiZnVrd2l0XCIsIFwiZnV4XCIsIFwiZnV4MHJcIiwgXCJmX3VfY19rXCIsIFwiZ2FuZ2JhbmdcIiwgXCJnYW5nYmFuZ2VkXCIsIFwiZ2FuZ2JhbmdzXCIsIFwiZ2F5bG9yZFwiLCBcImdheXNleFwiLCBcImdvYXRzZVwiLCBcIkdvZFwiLCBcImdvZC1kYW1cIiwgXCJnb2QtZGFtbmVkXCIsIFwiZ29kZGFtblwiLCBcImdvZGRhbW5lZFwiLCBcImhhcmRjb3Jlc2V4XCIsIFwiaGVsbFwiLCBcImhlc2hlXCIsIFwiaG9hclwiLCBcImhvYXJlXCIsIFwiaG9lclwiLCBcImhvbW9cIiwgXCJob3JlXCIsIFwiaG9ybmllc3RcIiwgXCJob3JueVwiLCBcImhvdHNleFwiLCBcImphY2stb2ZmXCIsIFwiamFja29mZlwiLCBcImphcFwiLCBcImplcmstb2ZmXCIsIFwiamlzbVwiLCBcImppelwiLCBcImppem1cIiwgXCJqaXp6XCIsIFwia2F3a1wiLCBcImtub2JcIiwgXCJrbm9iZWFkXCIsIFwia25vYmVkXCIsIFwia25vYmVuZFwiLCBcImtub2JoZWFkXCIsIFwia25vYmpvY2t5XCIsIFwia25vYmpva2V5XCIsIFwia29ja1wiLCBcImtvbmR1bVwiLCBcImtvbmR1bXNcIiwgXCJrdW1cIiwgXCJrdW1tZXJcIiwgXCJrdW1taW5nXCIsIFwia3Vtc1wiLCBcImt1bmlsaW5ndXNcIiwgXCJsM2krY2hcIiwgXCJsM2l0Y2hcIiwgXCJsYWJpYVwiLCBcImx1c3RcIiwgXCJsdXN0aW5nXCIsIFwibTBmMFwiLCBcIm0wZm9cIiwgXCJtNDV0ZXJiYXRlXCIsIFwibWE1dGVyYjhcIiwgXCJtYTV0ZXJiYXRlXCIsIFwibWFzb2NoaXN0XCIsIFwibWFzdGVyLWJhdGVcIiwgXCJtYXN0ZXJiOFwiLCBcIm1hc3RlcmJhdCpcIiwgXCJtYXN0ZXJiYXQzXCIsIFwibWFzdGVyYmF0ZVwiLCBcIm1hc3RlcmJhdGlvblwiLCBcIm1hc3RlcmJhdGlvbnNcIiwgXCJtYXN0dXJiYXRlXCIsIFwibW8tZm9cIiwgXCJtb2YwXCIsIFwibW9mb1wiLCBcIm1vdGhhZnVja1wiLCBcIm1vdGhhZnVja2FcIiwgXCJtb3RoYWZ1Y2thc1wiLCBcIm1vdGhhZnVja2F6XCIsIFwibW90aGFmdWNrZWRcIiwgXCJtb3RoYWZ1Y2tlclwiLCBcIm1vdGhhZnVja2Vyc1wiLCBcIm1vdGhhZnVja2luXCIsIFwibW90aGFmdWNraW5nXCIsIFwibW90aGFmdWNraW5nc1wiLCBcIm1vdGhhZnVja3NcIiwgXCJtb3RoZXIgZnVja2VyXCIsIFwibW90aGVyZnVja1wiLCBcIm1vdGhlcmZ1Y2tlZFwiLCBcIm1vdGhlcmZ1Y2tlclwiLCBcIm1vdGhlcmZ1Y2tlcnNcIiwgXCJtb3RoZXJmdWNraW5cIiwgXCJtb3RoZXJmdWNraW5nXCIsIFwibW90aGVyZnVja2luZ3NcIiwgXCJtb3RoZXJmdWNra2FcIiwgXCJtb3RoZXJmdWNrc1wiLCBcIm11ZmZcIiwgXCJtdXRoYVwiLCBcIm11dGhhZmVja2VyXCIsIFwibXV0aGFmdWNra2VyXCIsIFwibXV0aGVyXCIsIFwibXV0aGVyZnVja2VyXCIsIFwibjFnZ2FcIiwgXCJuMWdnZXJcIiwgXCJuYXppXCIsIFwibmlnZzNyXCIsIFwibmlnZzRoXCIsIFwibmlnZ2FcIiwgXCJuaWdnYWhcIiwgXCJuaWdnYXNcIiwgXCJuaWdnYXpcIiwgXCJuaWdnZXJcIiwgXCJuaWdnZXJzXCIsIFwibm9iXCIsIFwibm9iIGpva2V5XCIsIFwibm9iaGVhZFwiLCBcIm5vYmpvY2t5XCIsIFwibm9iam9rZXlcIiwgXCJudW1ibnV0c1wiLCBcIm51dHNhY2tcIiwgXCJvcmdhc2ltXCIsIFwib3JnYXNpbXNcIiwgXCJvcmdhc21cIiwgXCJvcmdhc21zXCIsIFwicDByblwiLCBcInBhd25cIiwgXCJwZWNrZXJcIiwgXCJwZW5pc1wiLCBcInBlbmlzZnVja2VyXCIsIFwicGhvbmVzZXhcIiwgXCJwaHVja1wiLCBcInBodWtcIiwgXCJwaHVrZWRcIiwgXCJwaHVraW5nXCIsIFwicGh1a2tlZFwiLCBcInBodWtraW5nXCIsIFwicGh1a3NcIiwgXCJwaHVxXCIsIFwicGlnZnVja2VyXCIsIFwicGltcGlzXCIsIFwicGlzc1wiLCBcInBpc3NlZFwiLCBcInBpc3NlclwiLCBcInBpc3NlcnNcIiwgXCJwaXNzZXNcIiwgXCJwaXNzZmxhcHNcIiwgXCJwaXNzaW5cIiwgXCJwaXNzaW5nXCIsIFwicGlzc29mZlwiLCBcInBvb3BcIiwgXCJwb3JuXCIsIFwicG9ybm9cIiwgXCJwb3Jub2dyYXBoeVwiLCBcInBvcm5vc1wiLCBcInByaWNrXCIsIFwicHJpY2tzXCIsIFwicHJvblwiLCBcInB1YmVcIiwgXCJwdXNzZVwiLCBcInB1c3NpXCIsIFwicHVzc2llc1wiLCBcInB1c3N5XCIsIFwicHVzc3lzXCIsIFwicmVjdHVtXCIsIFwicmV0YXJkXCIsIFwicmltamF3XCIsIFwicmltbWluZ1wiLCBcInMgaGl0XCIsIFwicy5vLmIuXCIsIFwic2FkaXN0XCIsIFwic2NobG9uZ1wiLCBcInNjcmV3aW5nXCIsIFwic2Nyb2F0XCIsIFwic2Nyb3RlXCIsIFwic2Nyb3R1bVwiLCBcInNlbWVuXCIsIFwic2V4XCIsIFwic2ghK1wiLCBcInNoIXRcIiwgXCJzaDF0XCIsIFwic2hhZ1wiLCBcInNoYWdnZXJcIiwgXCJzaGFnZ2luXCIsIFwic2hhZ2dpbmdcIiwgXCJzaGVtYWxlXCIsIFwic2hpK1wiLCBcInNoaXRcIiwgXCJzaGl0ZGlja1wiLCBcInNoaXRlXCIsIFwic2hpdGVkXCIsIFwic2hpdGV5XCIsIFwic2hpdGZ1Y2tcIiwgXCJzaGl0ZnVsbFwiLCBcInNoaXRoZWFkXCIsIFwic2hpdGluZ1wiLCBcInNoaXRpbmdzXCIsIFwic2hpdHNcIiwgXCJzaGl0dGVkXCIsIFwic2hpdHRlclwiLCBcInNoaXR0ZXJzXCIsIFwic2hpdHRpbmdcIiwgXCJzaGl0dGluZ3NcIiwgXCJzaGl0dHlcIiwgXCJza2Fua1wiLCBcInNsdXRcIiwgXCJzbHV0c1wiLCBcInNtZWdtYVwiLCBcInNtdXRcIiwgXCJzbmF0Y2hcIiwgXCJzb24tb2YtYS1iaXRjaFwiLCBcInNwYWNcIiwgXCJzcHVua1wiLCBcInNfaF9pX3RcIiwgXCJ0MXR0MWU1XCIsIFwidDF0dGllc1wiLCBcInRlZXRzXCIsIFwidGVlelwiLCBcInRlc3RpY2FsXCIsIFwidGVzdGljbGVcIiwgXCJ0aXRcIiwgXCJ0aXRmdWNrXCIsIFwidGl0c1wiLCBcInRpdHRcIiwgXCJ0aXR0aWU1XCIsIFwidGl0dGllZnVja2VyXCIsIFwidGl0dGllc1wiLCBcInRpdHR5ZnVja1wiLCBcInRpdHR5d2Fua1wiLCBcInRpdHdhbmtcIiwgXCJ0b3NzZXJcIiwgXCJ0dXJkXCIsIFwidHc0dFwiLCBcInR3YXRcIiwgXCJ0d2F0aGVhZFwiLCBcInR3YXR0eVwiLCBcInR3dW50XCIsIFwidHd1bnRlclwiLCBcInYxNGdyYVwiLCBcInYxZ3JhXCIsIFwidmFnaW5hXCIsIFwidmlhZ3JhXCIsIFwidnVsdmFcIiwgXCJ3MDBzZVwiLCBcIndhbmdcIiwgXCJ3YW5rXCIsIFwid2Fua2VyXCIsIFwid2Fua3lcIiwgXCJ3aG9hclwiLCBcIndob3JlXCIsIFwid2lsbGllc1wiLCBcIndpbGx5XCIsIFwieHJhdGVkXCIsIFwieHh4XCJdOyIsIm1vZHVsZS5leHBvcnRzID0ge1wiNHI1ZVwiOiAxLCBcIjVoMXRcIjogMSwgXCI1aGl0XCI6IDEsIFwiYTU1XCI6IDEsIFwiYW5hbFwiOiAxLCBcImFudXNcIjogMSwgXCJhcjVlXCI6IDEsIFwiYXJyc2VcIjogMSwgXCJhcnNlXCI6IDEsIFwiYXNzXCI6IDEsIFwiYXNzLWZ1Y2tlclwiOiAxLCBcImFzc2VzXCI6IDEsIFwiYXNzZnVja2VyXCI6IDEsIFwiYXNzZnVra2FcIjogMSwgXCJhc3Nob2xlXCI6IDEsIFwiYXNzaG9sZXNcIjogMSwgXCJhc3N3aG9sZVwiOiAxLCBcImFfc19zXCI6IDEsIFwiYiF0Y2hcIjogMSwgXCJiMDBic1wiOiAxLCBcImIxN2NoXCI6IDEsIFwiYjF0Y2hcIjogMSwgXCJiYWxsYmFnXCI6IDEsIFwiYmFsbHNcIjogMSwgXCJiYWxsc2Fja1wiOiAxLCBcImJhc3RhcmRcIjogMSwgXCJiZWFzdGlhbFwiOiAxLCBcImJlYXN0aWFsaXR5XCI6IDEsIFwiYmVsbGVuZFwiOiAxLCBcImJlc3RpYWxcIjogMSwgXCJiZXN0aWFsaXR5XCI6IDEsIFwiYmkrY2hcIjogMSwgXCJiaWF0Y2hcIjogMSwgXCJiaXRjaFwiOiAxLCBcImJpdGNoZXJcIjogMSwgXCJiaXRjaGVyc1wiOiAxLCBcImJpdGNoZXNcIjogMSwgXCJiaXRjaGluXCI6IDEsIFwiYml0Y2hpbmdcIjogMSwgXCJibG9vZHlcIjogMSwgXCJibG93IGpvYlwiOiAxLCBcImJsb3dqb2JcIjogMSwgXCJibG93am9ic1wiOiAxLCBcImJvaW9sYXNcIjogMSwgXCJib2xsb2NrXCI6IDEsIFwiYm9sbG9rXCI6IDEsIFwiYm9uZXJcIjogMSwgXCJib29iXCI6IDEsIFwiYm9vYnNcIjogMSwgXCJib29vYnNcIjogMSwgXCJib29vb2JzXCI6IDEsIFwiYm9vb29vYnNcIjogMSwgXCJib29vb29vb2JzXCI6IDEsIFwiYnJlYXN0c1wiOiAxLCBcImJ1Y2V0YVwiOiAxLCBcImJ1Z2dlclwiOiAxLCBcImJ1bVwiOiAxLCBcImJ1bm55IGZ1Y2tlclwiOiAxLCBcImJ1dHRcIjogMSwgXCJidXR0aG9sZVwiOiAxLCBcImJ1dHRtdWNoXCI6IDEsIFwiYnV0dHBsdWdcIjogMSwgXCJjMGNrXCI6IDEsIFwiYzBja3N1Y2tlclwiOiAxLCBcImNhcnBldCBtdW5jaGVyXCI6IDEsIFwiY2F3a1wiOiAxLCBcImNoaW5rXCI6IDEsIFwiY2lwYVwiOiAxLCBcImNsMXRcIjogMSwgXCJjbGl0XCI6IDEsIFwiY2xpdG9yaXNcIjogMSwgXCJjbGl0c1wiOiAxLCBcImNudXRcIjogMSwgXCJjb2NrXCI6IDEsIFwiY29jay1zdWNrZXJcIjogMSwgXCJjb2NrZmFjZVwiOiAxLCBcImNvY2toZWFkXCI6IDEsIFwiY29ja211bmNoXCI6IDEsIFwiY29ja211bmNoZXJcIjogMSwgXCJjb2Nrc1wiOiAxLCBcImNvY2tzdWNrXCI6IDEsIFwiY29ja3N1Y2tlZFwiOiAxLCBcImNvY2tzdWNrZXJcIjogMSwgXCJjb2Nrc3Vja2luZ1wiOiAxLCBcImNvY2tzdWNrc1wiOiAxLCBcImNvY2tzdWthXCI6IDEsIFwiY29ja3N1a2thXCI6IDEsIFwiY29rXCI6IDEsIFwiY29rbXVuY2hlclwiOiAxLCBcImNva3N1Y2thXCI6IDEsIFwiY29vblwiOiAxLCBcImNveFwiOiAxLCBcImNyYXBcIjogMSwgXCJjdW1cIjogMSwgXCJjdW1tZXJcIjogMSwgXCJjdW1taW5nXCI6IDEsIFwiY3Vtc1wiOiAxLCBcImN1bXNob3RcIjogMSwgXCJjdW5pbGluZ3VzXCI6IDEsIFwiY3VuaWxsaW5ndXNcIjogMSwgXCJjdW5uaWxpbmd1c1wiOiAxLCBcImN1bnRcIjogMSwgXCJjdW50bGlja1wiOiAxLCBcImN1bnRsaWNrZXJcIjogMSwgXCJjdW50bGlja2luZ1wiOiAxLCBcImN1bnRzXCI6IDEsIFwiY3lhbGlzXCI6IDEsIFwiY3liZXJmdWNcIjogMSwgXCJjeWJlcmZ1Y2tcIjogMSwgXCJjeWJlcmZ1Y2tlZFwiOiAxLCBcImN5YmVyZnVja2VyXCI6IDEsIFwiY3liZXJmdWNrZXJzXCI6IDEsIFwiY3liZXJmdWNraW5nXCI6IDEsIFwiZDFja1wiOiAxLCBcImRhbW5cIjogMSwgXCJkaWNrXCI6IDEsIFwiZGlja2hlYWRcIjogMSwgXCJkaWxkb1wiOiAxLCBcImRpbGRvc1wiOiAxLCBcImRpbmtcIjogMSwgXCJkaW5rc1wiOiAxLCBcImRpcnNhXCI6IDEsIFwiZGxja1wiOiAxLCBcImRvZy1mdWNrZXJcIjogMSwgXCJkb2dnaW5cIjogMSwgXCJkb2dnaW5nXCI6IDEsIFwiZG9ua2V5cmliYmVyXCI6IDEsIFwiZG9vc2hcIjogMSwgXCJkdWNoZVwiOiAxLCBcImR5a2VcIjogMSwgXCJlamFjdWxhdGVcIjogMSwgXCJlamFjdWxhdGVkXCI6IDEsIFwiZWphY3VsYXRlc1wiOiAxLCBcImVqYWN1bGF0aW5nXCI6IDEsIFwiZWphY3VsYXRpbmdzXCI6IDEsIFwiZWphY3VsYXRpb25cIjogMSwgXCJlamFrdWxhdGVcIjogMSwgXCJmIHUgYyBrXCI6IDEsIFwiZiB1IGMgayBlIHJcIjogMSwgXCJmNG5ueVwiOiAxLCBcImZhZ1wiOiAxLCBcImZhZ2dpbmdcIjogMSwgXCJmYWdnaXR0XCI6IDEsIFwiZmFnZ290XCI6IDEsIFwiZmFnZ3NcIjogMSwgXCJmYWdvdFwiOiAxLCBcImZhZ290c1wiOiAxLCBcImZhZ3NcIjogMSwgXCJmYW5ueVwiOiAxLCBcImZhbm55ZmxhcHNcIjogMSwgXCJmYW5ueWZ1Y2tlclwiOiAxLCBcImZhbnl5XCI6IDEsIFwiZmF0YXNzXCI6IDEsIFwiZmN1a1wiOiAxLCBcImZjdWtlclwiOiAxLCBcImZjdWtpbmdcIjogMSwgXCJmZWNrXCI6IDEsIFwiZmVja2VyXCI6IDEsIFwiZmVsY2hpbmdcIjogMSwgXCJmZWxsYXRlXCI6IDEsIFwiZmVsbGF0aW9cIjogMSwgXCJmaW5nZXJmdWNrXCI6IDEsIFwiZmluZ2VyZnVja2VkXCI6IDEsIFwiZmluZ2VyZnVja2VyXCI6IDEsIFwiZmluZ2VyZnVja2Vyc1wiOiAxLCBcImZpbmdlcmZ1Y2tpbmdcIjogMSwgXCJmaW5nZXJmdWNrc1wiOiAxLCBcImZpc3RmdWNrXCI6IDEsIFwiZmlzdGZ1Y2tlZFwiOiAxLCBcImZpc3RmdWNrZXJcIjogMSwgXCJmaXN0ZnVja2Vyc1wiOiAxLCBcImZpc3RmdWNraW5nXCI6IDEsIFwiZmlzdGZ1Y2tpbmdzXCI6IDEsIFwiZmlzdGZ1Y2tzXCI6IDEsIFwiZmxhbmdlXCI6IDEsIFwiZm9va1wiOiAxLCBcImZvb2tlclwiOiAxLCBcImZ1Y2tcIjogMSwgXCJmdWNrYVwiOiAxLCBcImZ1Y2tlZFwiOiAxLCBcImZ1Y2tlclwiOiAxLCBcImZ1Y2tlcnNcIjogMSwgXCJmdWNraGVhZFwiOiAxLCBcImZ1Y2toZWFkc1wiOiAxLCBcImZ1Y2tpblwiOiAxLCBcImZ1Y2tpbmdcIjogMSwgXCJmdWNraW5nc1wiOiAxLCBcImZ1Y2tpbmdzaGl0bW90aGVyZnVja2VyXCI6IDEsIFwiZnVja21lXCI6IDEsIFwiZnVja3NcIjogMSwgXCJmdWNrd2hpdFwiOiAxLCBcImZ1Y2t3aXRcIjogMSwgXCJmdWRnZSBwYWNrZXJcIjogMSwgXCJmdWRnZXBhY2tlclwiOiAxLCBcImZ1a1wiOiAxLCBcImZ1a2VyXCI6IDEsIFwiZnVra2VyXCI6IDEsIFwiZnVra2luXCI6IDEsIFwiZnVrc1wiOiAxLCBcImZ1a3doaXRcIjogMSwgXCJmdWt3aXRcIjogMSwgXCJmdXhcIjogMSwgXCJmdXgwclwiOiAxLCBcImZfdV9jX2tcIjogMSwgXCJnYW5nYmFuZ1wiOiAxLCBcImdhbmdiYW5nZWRcIjogMSwgXCJnYW5nYmFuZ3NcIjogMSwgXCJnYXlsb3JkXCI6IDEsIFwiZ2F5c2V4XCI6IDEsIFwiZ29hdHNlXCI6IDEsIFwiR29kXCI6IDEsIFwiZ29kLWRhbVwiOiAxLCBcImdvZC1kYW1uZWRcIjogMSwgXCJnb2RkYW1uXCI6IDEsIFwiZ29kZGFtbmVkXCI6IDEsIFwiaGFyZGNvcmVzZXhcIjogMSwgXCJoZWxsXCI6IDEsIFwiaGVzaGVcIjogMSwgXCJob2FyXCI6IDEsIFwiaG9hcmVcIjogMSwgXCJob2VyXCI6IDEsIFwiaG9tb1wiOiAxLCBcImhvcmVcIjogMSwgXCJob3JuaWVzdFwiOiAxLCBcImhvcm55XCI6IDEsIFwiaG90c2V4XCI6IDEsIFwiamFjay1vZmZcIjogMSwgXCJqYWNrb2ZmXCI6IDEsIFwiamFwXCI6IDEsIFwiamVyay1vZmZcIjogMSwgXCJqaXNtXCI6IDEsIFwiaml6XCI6IDEsIFwiaml6bVwiOiAxLCBcImppenpcIjogMSwgXCJrYXdrXCI6IDEsIFwia25vYlwiOiAxLCBcImtub2JlYWRcIjogMSwgXCJrbm9iZWRcIjogMSwgXCJrbm9iZW5kXCI6IDEsIFwia25vYmhlYWRcIjogMSwgXCJrbm9iam9ja3lcIjogMSwgXCJrbm9iam9rZXlcIjogMSwgXCJrb2NrXCI6IDEsIFwia29uZHVtXCI6IDEsIFwia29uZHVtc1wiOiAxLCBcImt1bVwiOiAxLCBcImt1bW1lclwiOiAxLCBcImt1bW1pbmdcIjogMSwgXCJrdW1zXCI6IDEsIFwia3VuaWxpbmd1c1wiOiAxLCBcImwzaStjaFwiOiAxLCBcImwzaXRjaFwiOiAxLCBcImxhYmlhXCI6IDEsIFwibHVzdFwiOiAxLCBcImx1c3RpbmdcIjogMSwgXCJtMGYwXCI6IDEsIFwibTBmb1wiOiAxLCBcIm00NXRlcmJhdGVcIjogMSwgXCJtYTV0ZXJiOFwiOiAxLCBcIm1hNXRlcmJhdGVcIjogMSwgXCJtYXNvY2hpc3RcIjogMSwgXCJtYXN0ZXItYmF0ZVwiOiAxLCBcIm1hc3RlcmI4XCI6IDEsIFwibWFzdGVyYmF0KlwiOiAxLCBcIm1hc3RlcmJhdDNcIjogMSwgXCJtYXN0ZXJiYXRlXCI6IDEsIFwibWFzdGVyYmF0aW9uXCI6IDEsIFwibWFzdGVyYmF0aW9uc1wiOiAxLCBcIm1hc3R1cmJhdGVcIjogMSwgXCJtby1mb1wiOiAxLCBcIm1vZjBcIjogMSwgXCJtb2ZvXCI6IDEsIFwibW90aGFmdWNrXCI6IDEsIFwibW90aGFmdWNrYVwiOiAxLCBcIm1vdGhhZnVja2FzXCI6IDEsIFwibW90aGFmdWNrYXpcIjogMSwgXCJtb3RoYWZ1Y2tlZFwiOiAxLCBcIm1vdGhhZnVja2VyXCI6IDEsIFwibW90aGFmdWNrZXJzXCI6IDEsIFwibW90aGFmdWNraW5cIjogMSwgXCJtb3RoYWZ1Y2tpbmdcIjogMSwgXCJtb3RoYWZ1Y2tpbmdzXCI6IDEsIFwibW90aGFmdWNrc1wiOiAxLCBcIm1vdGhlciBmdWNrZXJcIjogMSwgXCJtb3RoZXJmdWNrXCI6IDEsIFwibW90aGVyZnVja2VkXCI6IDEsIFwibW90aGVyZnVja2VyXCI6IDEsIFwibW90aGVyZnVja2Vyc1wiOiAxLCBcIm1vdGhlcmZ1Y2tpblwiOiAxLCBcIm1vdGhlcmZ1Y2tpbmdcIjogMSwgXCJtb3RoZXJmdWNraW5nc1wiOiAxLCBcIm1vdGhlcmZ1Y2trYVwiOiAxLCBcIm1vdGhlcmZ1Y2tzXCI6IDEsIFwibXVmZlwiOiAxLCBcIm11dGhhXCI6IDEsIFwibXV0aGFmZWNrZXJcIjogMSwgXCJtdXRoYWZ1Y2trZXJcIjogMSwgXCJtdXRoZXJcIjogMSwgXCJtdXRoZXJmdWNrZXJcIjogMSwgXCJuMWdnYVwiOiAxLCBcIm4xZ2dlclwiOiAxLCBcIm5hemlcIjogMSwgXCJuaWdnM3JcIjogMSwgXCJuaWdnNGhcIjogMSwgXCJuaWdnYVwiOiAxLCBcIm5pZ2dhaFwiOiAxLCBcIm5pZ2dhc1wiOiAxLCBcIm5pZ2dhelwiOiAxLCBcIm5pZ2dlclwiOiAxLCBcIm5pZ2dlcnNcIjogMSwgXCJub2JcIjogMSwgXCJub2Igam9rZXlcIjogMSwgXCJub2JoZWFkXCI6IDEsIFwibm9iam9ja3lcIjogMSwgXCJub2Jqb2tleVwiOiAxLCBcIm51bWJudXRzXCI6IDEsIFwibnV0c2Fja1wiOiAxLCBcIm9yZ2FzaW1cIjogMSwgXCJvcmdhc2ltc1wiOiAxLCBcIm9yZ2FzbVwiOiAxLCBcIm9yZ2FzbXNcIjogMSwgXCJwMHJuXCI6IDEsIFwicGF3blwiOiAxLCBcInBlY2tlclwiOiAxLCBcInBlbmlzXCI6IDEsIFwicGVuaXNmdWNrZXJcIjogMSwgXCJwaG9uZXNleFwiOiAxLCBcInBodWNrXCI6IDEsIFwicGh1a1wiOiAxLCBcInBodWtlZFwiOiAxLCBcInBodWtpbmdcIjogMSwgXCJwaHVra2VkXCI6IDEsIFwicGh1a2tpbmdcIjogMSwgXCJwaHVrc1wiOiAxLCBcInBodXFcIjogMSwgXCJwaWdmdWNrZXJcIjogMSwgXCJwaW1waXNcIjogMSwgXCJwaXNzXCI6IDEsIFwicGlzc2VkXCI6IDEsIFwicGlzc2VyXCI6IDEsIFwicGlzc2Vyc1wiOiAxLCBcInBpc3Nlc1wiOiAxLCBcInBpc3NmbGFwc1wiOiAxLCBcInBpc3NpblwiOiAxLCBcInBpc3NpbmdcIjogMSwgXCJwaXNzb2ZmXCI6IDEsIFwicG9vcFwiOiAxLCBcInBvcm5cIjogMSwgXCJwb3Jub1wiOiAxLCBcInBvcm5vZ3JhcGh5XCI6IDEsIFwicG9ybm9zXCI6IDEsIFwicHJpY2tcIjogMSwgXCJwcmlja3NcIjogMSwgXCJwcm9uXCI6IDEsIFwicHViZVwiOiAxLCBcInB1c3NlXCI6IDEsIFwicHVzc2lcIjogMSwgXCJwdXNzaWVzXCI6IDEsIFwicHVzc3lcIjogMSwgXCJwdXNzeXNcIjogMSwgXCJyZWN0dW1cIjogMSwgXCJyZXRhcmRcIjogMSwgXCJyaW1qYXdcIjogMSwgXCJyaW1taW5nXCI6IDEsIFwicyBoaXRcIjogMSwgXCJzLm8uYi5cIjogMSwgXCJzYWRpc3RcIjogMSwgXCJzY2hsb25nXCI6IDEsIFwic2NyZXdpbmdcIjogMSwgXCJzY3JvYXRcIjogMSwgXCJzY3JvdGVcIjogMSwgXCJzY3JvdHVtXCI6IDEsIFwic2VtZW5cIjogMSwgXCJzZXhcIjogMSwgXCJzaCErXCI6IDEsIFwic2ghdFwiOiAxLCBcInNoMXRcIjogMSwgXCJzaGFnXCI6IDEsIFwic2hhZ2dlclwiOiAxLCBcInNoYWdnaW5cIjogMSwgXCJzaGFnZ2luZ1wiOiAxLCBcInNoZW1hbGVcIjogMSwgXCJzaGkrXCI6IDEsIFwic2hpdFwiOiAxLCBcInNoaXRkaWNrXCI6IDEsIFwic2hpdGVcIjogMSwgXCJzaGl0ZWRcIjogMSwgXCJzaGl0ZXlcIjogMSwgXCJzaGl0ZnVja1wiOiAxLCBcInNoaXRmdWxsXCI6IDEsIFwic2hpdGhlYWRcIjogMSwgXCJzaGl0aW5nXCI6IDEsIFwic2hpdGluZ3NcIjogMSwgXCJzaGl0c1wiOiAxLCBcInNoaXR0ZWRcIjogMSwgXCJzaGl0dGVyXCI6IDEsIFwic2hpdHRlcnNcIjogMSwgXCJzaGl0dGluZ1wiOiAxLCBcInNoaXR0aW5nc1wiOiAxLCBcInNoaXR0eVwiOiAxLCBcInNrYW5rXCI6IDEsIFwic2x1dFwiOiAxLCBcInNsdXRzXCI6IDEsIFwic21lZ21hXCI6IDEsIFwic211dFwiOiAxLCBcInNuYXRjaFwiOiAxLCBcInNvbi1vZi1hLWJpdGNoXCI6IDEsIFwic3BhY1wiOiAxLCBcInNwdW5rXCI6IDEsIFwic19oX2lfdFwiOiAxLCBcInQxdHQxZTVcIjogMSwgXCJ0MXR0aWVzXCI6IDEsIFwidGVldHNcIjogMSwgXCJ0ZWV6XCI6IDEsIFwidGVzdGljYWxcIjogMSwgXCJ0ZXN0aWNsZVwiOiAxLCBcInRpdFwiOiAxLCBcInRpdGZ1Y2tcIjogMSwgXCJ0aXRzXCI6IDEsIFwidGl0dFwiOiAxLCBcInRpdHRpZTVcIjogMSwgXCJ0aXR0aWVmdWNrZXJcIjogMSwgXCJ0aXR0aWVzXCI6IDEsIFwidGl0dHlmdWNrXCI6IDEsIFwidGl0dHl3YW5rXCI6IDEsIFwidGl0d2Fua1wiOiAxLCBcInRvc3NlclwiOiAxLCBcInR1cmRcIjogMSwgXCJ0dzR0XCI6IDEsIFwidHdhdFwiOiAxLCBcInR3YXRoZWFkXCI6IDEsIFwidHdhdHR5XCI6IDEsIFwidHd1bnRcIjogMSwgXCJ0d3VudGVyXCI6IDEsIFwidjE0Z3JhXCI6IDEsIFwidjFncmFcIjogMSwgXCJ2YWdpbmFcIjogMSwgXCJ2aWFncmFcIjogMSwgXCJ2dWx2YVwiOiAxLCBcIncwMHNlXCI6IDEsIFwid2FuZ1wiOiAxLCBcIndhbmtcIjogMSwgXCJ3YW5rZXJcIjogMSwgXCJ3YW5reVwiOiAxLCBcIndob2FyXCI6IDEsIFwid2hvcmVcIjogMSwgXCJ3aWxsaWVzXCI6IDEsIFwid2lsbHlcIjogMSwgXCJ4cmF0ZWRcIjogMSwgXCJ4eHhcIjogMX07IiwibW9kdWxlLmV4cG9ydHMgPSB7XG4gIG9iamVjdDogcmVxdWlyZSgnLi9vYmplY3QnKSxcbiAgYXJyYXk6IHJlcXVpcmUoJy4vYXJyYXknKSxcbiAgcmVnZXg6IHJlcXVpcmUoJy4vcmVnZXhwJylcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==