!function(e){var s={};function t(i){if(s[i])return s[i].exports;var a=s[i]={i:i,l:!1,exports:{}};return e[i].call(a.exports,a,a.exports,t),a.l=!0,a.exports}t.m=e,t.c=s,t.d=function(e,s,i){t.o(e,s)||Object.defineProperty(e,s,{configurable:!1,enumerable:!0,get:i})},t.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},t.n=function(e){var s=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(s,"a",s),s},t.o=function(e,s){return Object.prototype.hasOwnProperty.call(e,s)},t.p="",t(t.s=2)}([function(e){e.exports={game:{levelsPerGame:10,startElementsPerLevel:5,elementsIncreasePerLevel:5,scorePerElement:10,secondsPerLevel:10,blockSpeed:{min:1,max:5},blockPixels:{min:10,max:150},player:{growthFactor:1.5,speed:3,speedIncreaseFactor:.2},badWords:["hitler","jood","slet"]},functionalities:{mLab:!0},mLab:{baseUrl:"https://api.mlab.com/api/1",apiKey:"X17utv1FH2dFTeUo4yhNGL54sA7CY2jS",databaseName:"typescript_scores",collectionName:"scores"}}},function(e,s,t){var i=t(7).words,a=t(6).array,r=function(){function e(e){e=e||{},this.list=e.emptyList&&[]||Array.prototype.concat.apply(i,[a,e.list||[]]),this.exclude=e.exclude||[],this.placeHolder=e.placeHolder||"*",this.regex=e.regex||/[^a-zA-z0-9|\$|\@]|\^/g,this.replaceRegex=e.replaceRegex||/\w/g}return e.prototype.isProfane=function(e){return e.split(" ").map(function(e){return e.toLowerCase().replace(this.regex,"")},this).filter(this.isProfaneLike,this).shift()||!1},e.prototype.isProfaneLike=function(e){return!~this.exclude.indexOf(e)&&(!!~this.list.indexOf(e)||this.list.map(function(e){return new RegExp(e.replace(/(\W)/g,"\\$1"),"gi")},this).reduce(function(s,t){return!!t.test(e)||s},!1))},e.prototype.replaceWord=function(e){return e.replace(this.regex,"").replace(this.replaceRegex,this.placeHolder)},e.prototype.clean=function(e){return e.split(/\b/).map(function(e){return this.isProfane(e)?this.replaceWord(e):e}.bind(this)).join("")},e.prototype.addWords=function(e){e=e instanceof Array?e:[e],this.list=this.list.concat(e),e.forEach(function(e){~this.exclude.indexOf(e)&&this.exclude.splice(this.exclude.indexOf(e),1)},this)},e.prototype.removeWords=function(){var e=Array.prototype.slice.call(arguments);this.exclude.push.apply(this.exclude,e)},e}();e.exports=r},function(e,s,t){"use strict";t.r(s);var i=t(0);class a{constructor(e,s,t,i=""){this.x=s,this.y=t,this.el=document.createElement("div");let a=document.getElementById("main");if(null===a)throw new Error("<main> element doesn't exist!");if(this.x>-1&&this.y>-1&&(this.el.style.transform=`translate(${this.x}px, ${this.y}px)`),this.el.classList.add(`game-${e}`),""===i)a.appendChild(this.el);else{let e=document.querySelector(`.game-${i}`);if(null===e)throw new Error(`<.game-${i}> element doesn't exist!`);e.appendChild(this.el)}}getClientReact(){return this.el.getBoundingClientRect()}}class r extends a{constructor(){super("score",-1,-1,"gui"),this.score=0,this.renderTemplate(),this.el.querySelector(".score-count").innerHTML=this.score.toString(),this.el.classList.add("message","is-warning")}get(){return this.score}update(e,s=!1){this.score=s?e:this.score+e,this.el.querySelector(".score-count").innerHTML=this.score.toString()}renderTemplate(){this.el.innerHTML='\n            <div class="message-body">\n                <span>score: </span>\n                <span class="score-count"></span>\n            </div>\n        '}}class o{static addEventListener(e,s){o.functionMap[e]=s,window.addEventListener(e.split(".")[0],o.functionMap[e])}static removeEventListener(e){window.removeEventListener(e.split(".")[0],o.functionMap[e]),delete o.functionMap[e]}}o.functionMap={};class c extends a{constructor(){super("messagescreen",-1,-1,"gui"),this.isActive=!1,this.gameStates={"game:start":{header:"Welcome to Block-o-Block!",body:"It's time to catch them blocks!<br/><br/>Use your arrow keys to move your player around and press space to start.<br/><br/>Press -<strong>H</strong>- to view the highscore list.",className:"is-info",keyboardTriggerKey:" "},"game:end":{header:"Your game is over!",body:"You made it, your final score is __SCORE__ out of max __MAX_SCORE__ points.<br/><br/>Thanks for playing, press <strong>-N-</strong> to save your score or press enter to restart the madness.<br/><br/>Press -<strong>H</strong>- to view the highscore list.",className:"is-success",keyboardTriggerKey:"enter"},"level:success":{header:"YEAH! Level completed!",body:"Performing like a boss! Press space to proceed to the next level and catch even more blocks.",className:"is-success",keyboardTriggerKey:" "},"level:failed":{header:"AAH! Level failed!",body:"Try again and show us what you're made off! Press space to restart this level.",className:"is-danger",keyboardTriggerKey:" "}},this.el.classList.add("message"),this.renderTemplate(),this.show("game:start"),o.addEventListener("keyup.messagescreen",e=>this.keyBoardHandler(e))}keyBoardHandler(e){e.key.toLowerCase()===this.gameStates[this.currentEvent].keyboardTriggerKey&&!0===this.isActive&&window.dispatchEvent(new Event(`${this.currentEvent}:click`))}show(e,s={}){let t=this.gameStates[e].header,i=this.gameStates[e].body;for(let e in s)i=i.replace(e,s[e]);this.el.querySelector(".message-header").innerHTML=t,this.el.querySelector(".message-body").innerHTML=i,this.el.classList.add("show",this.gameStates[e].className),this.currentEvent=e,this.isActive=!0}hide(){this.el.classList.remove("show","is-info","is-success","is-danger"),this.isActive=!1}renderTemplate(){this.el.innerHTML='\n            <div class="message-header"></div>\n            <div class="message-body"></div>\n        '}}class n{constructor(){this.endPointList=`/databases/${i.mLab.databaseName}/collections/${i.mLab.collectionName}?apiKey=${i.mLab.apiKey}`,this.endPointSave=`/databases/${i.mLab.databaseName}/collections/${i.mLab.collectionName}?apiKey=${i.mLab.apiKey}`,this.offlineUserScores=[],o.addEventListener("online.dataservice",()=>this.saveScoreToMlab())}static getInstance(){return n.instance||(n.instance=new n),n.instance}saveScore(e,s){let t={name:e,score:s};if(!1===i.functionalities.mLab||!1===window.navigator.onLine)return this.offlineUserScores.push(t),new Promise(e=>{e(t)});let a=`${i.mLab.baseUrl}${this.endPointSave}`;return fetch(a,{body:JSON.stringify(t),headers:{"content-type":"application/json"},method:"POST",mode:"cors"}).then(e=>e.json())}getScores(){if(!1===i.functionalities.mLab||!1===window.navigator.onLine)return new Promise(e=>{e(JSON.parse(localStorage.getItem("scores")))});let e=`${i.mLab.baseUrl}${this.endPointList}&s={"score": -1}&l=10`;return fetch(e,{mode:"cors"}).then(e=>e.json()).then(e=>localStorage.getItem("scores")===JSON.stringify(e)?JSON.parse(localStorage.getItem("scores")):(localStorage.setItem("scores",JSON.stringify(e)),e))}saveScoreToMlab(){this.offlineUserScores.length>0&&Promise.all(this.offlineUserScores.map(e=>this.saveScore(e.name,e.score))).then(()=>{this.offlineUserScores=[]})}}class h extends a{constructor(){super("highscorelist",-1,-1,"gui"),this.el.classList.add("modal"),this.renderTemplate(),this.tBody=this.el.querySelector(".tbody"),this.dataService=n.getInstance(),this.loadScoreData(),window.addEventListener("game:scoreSaved",e=>this.updateData(e.detail.data))}loadScoreData(e=!1){this.dataService.getScores().then(s=>{this.scores=s,this.tBody.innerHTML=this.getTbodyTemplate(),!0===e&&this.el.classList.add("is-active")})}updateData(e){((0===this.scores.length?-1:this.scores[this.scores.length-1].score)<e.score||this.scores.length<10)&&(this.scores.push(e),this.scores.sort((e,s)=>s.score-e.score),this.scores.splice(10,1),this.tBody.innerHTML=this.getTbodyTemplate())}show(){void 0===this.scores?this.loadScoreData(!0):this.el.classList.add("is-active")}hide(){this.el.classList.remove("is-active")}getTbodyTemplate(){return`\n            ${this.scores.map((e,s)=>`<tr>\n                <td>${s+1}</td>\n                <td>${e.name}</td>\n                <td>${e.score.toString()}</td>\n            </tr>`).join("")}\n        `}renderTemplate(){this.el.innerHTML='\n            <div class="modal-background"></div>\n            <div class="modal-content">\n                <div class="message is-warning">\n                    <div class="message-header">\n                        <p>Top 10 Scores (press -<strong>ESC</strong>- to return)</p>\n                    </div>\n                    <div class="message-body">\n                        <table class="table">\n                            <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>Name</th>\n                                <th>Score</th>\n                            </tr>\n                            </thead>\n                            <tbody class="tbody"></tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        '}}var u=t(1),l=t.n(u);class k extends a{constructor(){super("nameform",-1,-1,"gui"),this.score=0,this.nameMaxLength=16,this.dataService=n.getInstance(),this.filter=new l.a({list:i.game.badWords}),this.el.classList.add("modal"),this.renderTemplate(),this.form=this.el.querySelector(".name-form"),this.nameField=this.form.querySelector(".name"),this.feedbackMessage=this.el.querySelector(".feedback-message"),this.form.addEventListener("submit",e=>this.saveScore(e))}show(e){this.nameField.classList.remove("is-danger"),this.form.classList.remove("is-hidden"),this.feedbackMessage.classList.add("is-hidden"),this.score=e,this.el.classList.add("is-active"),this.nameField.focus()}hide(){this.el.classList.remove("is-active")}saveScore(e){e.preventDefault();let s=this.nameField.value;""==s||s.length>this.nameMaxLength||this.filter.isProfane(s)?this.nameField.classList.add("is-danger"):this.dataService.saveScore(s,this.score).then(e=>{window.dispatchEvent(new CustomEvent("game:scoreSaved",{detail:{data:e}})),this.feedbackMessage.innerHTML="Your score has been saved, Press <strong>-ESC-</strong> to return to the previous screen!",this.form.classList.add("is-hidden"),this.feedbackMessage.classList.remove("is-hidden")})}renderTemplate(){this.el.innerHTML=`\n            <div class="modal-background"></div>\n            <div class="modal-content">\n                <div class="message is-warning">\n                    <div class="message-header">Please enter your name</div>\n                    <div class="message-body">\n                        <p class="feedback-message is-hidden"></p>\n                        <form method="post" action="" class="name-form">\n                            <div class="control has-icons-left">\n                                <input name="name" class="name input" type="text" placeholder="Enter your name.." maxlength="${this.nameMaxLength}" autocomplete="off"/>\n                                <span class="icon is-small is-left">\n                                    <i class="fas fa-user"></i>\n                                </span>\n                            </div>\n                            <div class="control">\n                                <input type="submit" class="input button" value="Save score"/>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        `}}class d extends a{constructor(){super("gui",-1,-1),this.nameFormVisible=!1,this.highScoreListVisible=!1,this.score=new r,this.messageScreen=new c,this.nameForm=new k,window.addEventListener("level:scoreUpdate",e=>this.score.update(e.detail.score)),this.highScoreList=new h,o.addEventListener("keyup.highscorelist",e=>this.keyBoardHandler(e))}keyBoardHandler(e){let s=e.key.toLowerCase();"h"===s&&!1===this.highScoreListVisible&&!1===this.nameFormVisible?(this.highScoreListVisible=!0,this.highScoreList.show(),this.messageScreen.isActive=!1):"escape"===s&&!0===this.highScoreListVisible&&(this.highScoreListVisible=!1,this.highScoreList.hide(),this.messageScreen.isActive=!0),"n"===s&&!1===this.highScoreListVisible&&!1===this.nameFormVisible&&"game:end"===this.messageScreen.currentEvent?(this.nameFormVisible=!0,this.nameForm.show(this.score.get()),this.messageScreen.isActive=!1):"escape"===s&&!0===this.nameFormVisible&&(this.nameFormVisible=!1,this.nameForm.hide(),this.messageScreen.isActive=!0)}show(e){this.messageScreen.show(e)}hide(){this.messageScreen.hide()}gameEnd(e){this.messageScreen.show("game:end",{__SCORE__:this.score.get().toString(),__MAX_SCORE__:e.toString()})}restart(){this.messageScreen.hide(),this.messageScreen.show("game:start"),this.score.update(0,!0)}}class g{static getRandomColor(){let e=Math.round,s=Math.random;return`rgba(${e(255*s())},${e(255*s())},${e(255*s())},1)`}static getRandomInt(e,s){return Math.floor(Math.random()*(s-e+1))+e}static checkCollision(e,s){return e.left<=s.right&&s.left<=e.right&&e.top<=s.bottom&&s.top<=e.bottom}}class m extends a{constructor(e,s,t,i){super("block",0,0,"level"),this.destination={x:0,y:0},this.speed=s,this.width=t,this.height=i,this.color=e,this.el.style.backgroundImage=`repeating-linear-gradient(${g.getRandomInt(0,360)}deg, #000000, #000000 ${g.getRandomInt(2,10)}px, ${this.color} 10px, ${this.color} ${g.getRandomInt(20,40)}px)`,this.el.style.width=`${this.width}px`,this.el.style.height=`${this.height}px`,this.x=g.getRandomInt(0,window.outerWidth-this.width),this.y=g.getRandomInt(0,document.documentElement.clientHeight-this.height),this.el.style.transform=`translate(${this.x}px, ${this.y}px)`}update(){this.x>this.destination.x-this.speed&&this.x<this.destination.x+this.speed&&(this.destination.x=g.getRandomInt(0,window.outerWidth-this.width)),this.y>this.destination.y-this.speed&&this.y<this.destination.y+this.speed&&(this.destination.y=g.getRandomInt(0,document.documentElement.clientHeight-this.height)),this.destination.x>=this.x?this.x+=this.speed:this.x-=this.speed,this.destination.y>=this.y?this.y+=this.speed:this.y-=this.speed,this.el.style.transform=`translate(${this.x}px, ${this.y}px)`}destroy(){this.el.remove()}}class f extends a{constructor(){super("player",0,0,"level"),this.height=10,this.width=10,this.growthFactor=i.game.player.growthFactor,this.speed=i.game.player.speed,this.speedIncreaseFactor=i.game.player.speedIncreaseFactor,this.keysAllowed=["arrowleft","arrowup","arrowright","arrowdown"],this.keysPressed=[],this.x=window.outerWidth/2-this.width/2,this.y=document.documentElement.clientHeight/2-this.height/2,this.el.style.width=`${this.width}px`,this.el.style.height=`${this.height}px`,this.el.style.borderRadius=`${this.width}px`,o.addEventListener("keydown.player",e=>this.keyDownHandler(e)),o.addEventListener("keyup.player",e=>this.keyUpHandler(e))}keyDownHandler(e){let s=e.key.toLowerCase();this.keysAllowed.indexOf(s)>-1&&-1===this.keysPressed.indexOf(s)&&this.keysPressed.push(s)}keyUpHandler(e){let s=e.key.toLowerCase(),t=this.keysPressed.indexOf(s);this.keysAllowed.indexOf(s)>-1&&t>-1&&this.keysPressed.splice(t,1)}update(){this.keysPressed.forEach(e=>{switch(e){case"arrowleft":this.x-=this.speed;break;case"arrowup":this.y-=this.speed;break;case"arrowright":this.x+=this.speed;break;case"arrowdown":this.y+=this.speed;break;default:return}}),this.x<0&&(this.x=0),this.y<0&&(this.y=0),this.x>window.outerWidth-this.width&&(this.x=window.outerWidth-this.width),this.y>document.documentElement.clientHeight-this.height&&(this.y=document.documentElement.clientHeight-this.height),this.el.style.transform=`translate(${this.x}px, ${this.y}px)`}blockCaught(e){this.speed+=this.speedIncreaseFactor,this.width+=this.growthFactor,this.height+=this.growthFactor,this.el.style.height=`${this.height}px`,this.el.style.width=`${this.width}px`,this.el.style.borderRadius=`${this.width}px`,this.el.style.backgroundColor=e.color}destroy(){this.el.remove(),o.removeEventListener("keydown.player"),o.removeEventListener("keyup.player")}}class p extends a{constructor(){super("timer",-1,-1,"level"),this.seconds=i.game.secondsPerLevel,this.renderTemplate(),this.el.classList.add("message","is-primary"),this.el.querySelector(".seconds").innerHTML=this.seconds.toString(),this.intervalId=setInterval(()=>this.update(),1e3)}update(){this.seconds--,this.el.querySelector(".seconds").innerHTML=this.seconds.toString(),this.seconds<=3?(this.el.classList.remove("is-primary"),this.el.classList.add("is-danger")):(this.el.classList.add("is-primary"),this.el.classList.remove("is-danger")),0===this.seconds&&window.dispatchEvent(new Event("timer:done"))}destroy(){clearInterval(this.intervalId)}renderTemplate(){this.el.innerHTML='\n            <div class="message-body">\n                <span>time: </span>\n                <span class="seconds"></span>\n            </div>\n        '}}class b extends a{constructor(e,s){super("level",0,0),this.blocks=[],this.failed=!1,this.totalBlocks=e,this.scorePerBlock=s,this.player=new f,this.timer=new p;for(let e=0;e<this.totalBlocks;e++)this.blocks.push(new m(g.getRandomColor(),g.getRandomInt(i.game.blockSpeed.min,i.game.blockSpeed.max),g.getRandomInt(i.game.blockPixels.min,i.game.blockPixels.max),g.getRandomInt(i.game.blockPixels.min,i.game.blockPixels.max)));o.addEventListener("timer:done",()=>{this.failed=!0,this.destroy("level:failed")})}update(){this.player.update(),this.blocks.forEach((e,s)=>{e.update(),g.checkCollision(this.player.getClientReact(),e.getClientReact())&&!1===this.failed&&(this.player.blockCaught(e),e.destroy(),this.blocks.splice(s,1),window.dispatchEvent(new CustomEvent("level:scoreUpdate",{detail:{score:this.scorePerBlock}})),0===this.blocks.length&&this.destroy("level:success"))})}destroy(e){this.timer.destroy(),this.player.destroy(),this.blocks.forEach((e,s)=>{e.destroy(),this.blocks.splice(s,1)}),o.removeEventListener("timer:done"),window.dispatchEvent(new Event(e)),this.el.remove()}}window.addEventListener("load",()=>new class{constructor(){this.levelsPerGame=i.game.levelsPerGame,this.currentLevelsPlayed=0,this.startElementsPerLevel=i.game.startElementsPerLevel,this.elementsIncreasePerLevel=i.game.elementsIncreasePerLevel,this.scorePerElement=i.game.scorePerElement,this.gui=new d,this.maxScore=this.calculateMaxScore(),this.gameLoop(),["level:success","level:failed"].map(e=>{window.addEventListener(e,e=>this.update(e.type))}),["game:start:click","level:success:click","level:failed:click"].map(e=>{window.addEventListener(e,()=>this.startNewLevel())}),window.addEventListener("game:end:click",()=>this.restart())}calculateMaxScore(){let e=0;for(let s=0;s<this.levelsPerGame;s++)e+=(this.startElementsPerLevel+(0===s?0:this.elementsIncreasePerLevel*s))*this.scorePerElement;return e}gameLoop(){void 0!==this.level&&this.level.update(),requestAnimationFrame(()=>this.gameLoop())}update(e){this.currentLevelsPlayed++,this.currentLevelsPlayed!==this.levelsPerGame?this.gui.show(e):this.gui.gameEnd(this.maxScore)}startNewLevel(){this.level&&!1===this.level.failed&&(this.startElementsPerLevel+=this.elementsIncreasePerLevel),delete this.level,this.gui.hide(),this.level=new b(this.startElementsPerLevel,this.scorePerElement)}restart(){this.gui.restart(),this.currentLevelsPlayed=0,this.startElementsPerLevel=i.game.startElementsPerLevel,delete this.level}})},function(e,s){e.exports=/\b(4r5e|5h1t|5hit|a55|anal|anus|ar5e|arrse|arse|ass|ass-fucker|asses|assfucker|assfukka|asshole|assholes|asswhole|a_s_s|b!tch|b00bs|b17ch|b1tch|ballbag|balls|ballsack|bastard|beastial|beastiality|bellend|bestial|bestiality|bi\+ch|biatch|bitch|bitcher|bitchers|bitches|bitchin|bitching|bloody|blow job|blowjob|blowjobs|boiolas|bollock|bollok|boner|boob|boobs|booobs|boooobs|booooobs|booooooobs|breasts|buceta|bugger|bum|bunny fucker|butt|butthole|buttmuch|buttplug|c0ck|c0cksucker|carpet muncher|cawk|chink|cipa|cl1t|clit|clitoris|clits|cnut|cock|cock-sucker|cockface|cockhead|cockmunch|cockmuncher|cocks|cocksuck|cocksucked|cocksucker|cocksucking|cocksucks|cocksuka|cocksukka|cok|cokmuncher|coksucka|coon|cox|crap|cum|cummer|cumming|cums|cumshot|cunilingus|cunillingus|cunnilingus|cunt|cuntlick|cuntlicker|cuntlicking|cunts|cyalis|cyberfuc|cyberfuck|cyberfucked|cyberfucker|cyberfuckers|cyberfucking|d1ck|damn|dick|dickhead|dildo|dildos|dink|dinks|dirsa|dlck|dog-fucker|doggin|dogging|donkeyribber|doosh|duche|dyke|ejaculate|ejaculated|ejaculates|ejaculating|ejaculatings|ejaculation|ejakulate|f u c k|f u c k e r|f4nny|fag|fagging|faggitt|faggot|faggs|fagot|fagots|fags|fanny|fannyflaps|fannyfucker|fanyy|fatass|fcuk|fcuker|fcuking|feck|fecker|felching|fellate|fellatio|fingerfuck|fingerfucked|fingerfucker|fingerfuckers|fingerfucking|fingerfucks|fistfuck|fistfucked|fistfucker|fistfuckers|fistfucking|fistfuckings|fistfucks|flange|fook|fooker|fuck|fucka|fucked|fucker|fuckers|fuckhead|fuckheads|fuckin|fucking|fuckings|fuckingshitmotherfucker|fuckme|fucks|fuckwhit|fuckwit|fudge packer|fudgepacker|fuk|fuker|fukker|fukkin|fuks|fukwhit|fukwit|fux|fux0r|f_u_c_k|gangbang|gangbanged|gangbangs|gaylord|gaysex|goatse|God|god-dam|god-damned|goddamn|goddamned|hardcoresex|hell|heshe|hoar|hoare|hoer|homo|hore|horniest|horny|hotsex|jack-off|jackoff|jap|jerk-off|jism|jiz|jizm|jizz|kawk|knob|knobead|knobed|knobend|knobhead|knobjocky|knobjokey|kock|kondum|kondums|kum|kummer|kumming|kums|kunilingus|l3i\+ch|l3itch|labia|lust|lusting|m0f0|m0fo|m45terbate|ma5terb8|ma5terbate|masochist|master-bate|masterb8|masterbat*|masterbat3|masterbate|masterbation|masterbations|masturbate|mo-fo|mof0|mofo|mothafuck|mothafucka|mothafuckas|mothafuckaz|mothafucked|mothafucker|mothafuckers|mothafuckin|mothafucking|mothafuckings|mothafucks|mother fucker|motherfuck|motherfucked|motherfucker|motherfuckers|motherfuckin|motherfucking|motherfuckings|motherfuckka|motherfucks|muff|mutha|muthafecker|muthafuckker|muther|mutherfucker|n1gga|n1gger|nazi|nigg3r|nigg4h|nigga|niggah|niggas|niggaz|nigger|niggers|nob|nob jokey|nobhead|nobjocky|nobjokey|numbnuts|nutsack|orgasim|orgasims|orgasm|orgasms|p0rn|pawn|pecker|penis|penisfucker|phonesex|phuck|phuk|phuked|phuking|phukked|phukking|phuks|phuq|pigfucker|pimpis|piss|pissed|pisser|pissers|pisses|pissflaps|pissin|pissing|pissoff|poop|porn|porno|pornography|pornos|prick|pricks|pron|pube|pusse|pussi|pussies|pussy|pussys|rectum|retard|rimjaw|rimming|s hit|s.o.b.|sadist|schlong|screwing|scroat|scrote|scrotum|semen|sex|sh!\+|sh!t|sh1t|shag|shagger|shaggin|shagging|shemale|shi\+|shit|shitdick|shite|shited|shitey|shitfuck|shitfull|shithead|shiting|shitings|shits|shitted|shitter|shitters|shitting|shittings|shitty|skank|slut|sluts|smegma|smut|snatch|son-of-a-bitch|spac|spunk|s_h_i_t|t1tt1e5|t1tties|teets|teez|testical|testicle|tit|titfuck|tits|titt|tittie5|tittiefucker|titties|tittyfuck|tittywank|titwank|tosser|turd|tw4t|twat|twathead|twatty|twunt|twunter|v14gra|v1gra|vagina|viagra|vulva|w00se|wang|wank|wanker|wanky|whoar|whore|willies|willy|xrated|xxx)\b/gi},function(e,s){e.exports=["4r5e","5h1t","5hit","a55","anal","anus","ar5e","arrse","arse","ass","ass-fucker","asses","assfucker","assfukka","asshole","assholes","asswhole","a_s_s","b!tch","b00bs","b17ch","b1tch","ballbag","balls","ballsack","bastard","beastial","beastiality","bellend","bestial","bestiality","bi+ch","biatch","bitch","bitcher","bitchers","bitches","bitchin","bitching","bloody","blow job","blowjob","blowjobs","boiolas","bollock","bollok","boner","boob","boobs","booobs","boooobs","booooobs","booooooobs","breasts","buceta","bugger","bum","bunny fucker","butt","butthole","buttmuch","buttplug","c0ck","c0cksucker","carpet muncher","cawk","chink","cipa","cl1t","clit","clitoris","clits","cnut","cock","cock-sucker","cockface","cockhead","cockmunch","cockmuncher","cocks","cocksuck","cocksucked","cocksucker","cocksucking","cocksucks","cocksuka","cocksukka","cok","cokmuncher","coksucka","coon","cox","crap","cum","cummer","cumming","cums","cumshot","cunilingus","cunillingus","cunnilingus","cunt","cuntlick","cuntlicker","cuntlicking","cunts","cyalis","cyberfuc","cyberfuck","cyberfucked","cyberfucker","cyberfuckers","cyberfucking","d1ck","damn","dick","dickhead","dildo","dildos","dink","dinks","dirsa","dlck","dog-fucker","doggin","dogging","donkeyribber","doosh","duche","dyke","ejaculate","ejaculated","ejaculates","ejaculating","ejaculatings","ejaculation","ejakulate","f u c k","f u c k e r","f4nny","fag","fagging","faggitt","faggot","faggs","fagot","fagots","fags","fanny","fannyflaps","fannyfucker","fanyy","fatass","fcuk","fcuker","fcuking","feck","fecker","felching","fellate","fellatio","fingerfuck","fingerfucked","fingerfucker","fingerfuckers","fingerfucking","fingerfucks","fistfuck","fistfucked","fistfucker","fistfuckers","fistfucking","fistfuckings","fistfucks","flange","fook","fooker","fuck","fucka","fucked","fucker","fuckers","fuckhead","fuckheads","fuckin","fucking","fuckings","fuckingshitmotherfucker","fuckme","fucks","fuckwhit","fuckwit","fudge packer","fudgepacker","fuk","fuker","fukker","fukkin","fuks","fukwhit","fukwit","fux","fux0r","f_u_c_k","gangbang","gangbanged","gangbangs","gaylord","gaysex","goatse","God","god-dam","god-damned","goddamn","goddamned","hardcoresex","hell","heshe","hoar","hoare","hoer","homo","hore","horniest","horny","hotsex","jack-off","jackoff","jap","jerk-off","jism","jiz","jizm","jizz","kawk","knob","knobead","knobed","knobend","knobhead","knobjocky","knobjokey","kock","kondum","kondums","kum","kummer","kumming","kums","kunilingus","l3i+ch","l3itch","labia","lust","lusting","m0f0","m0fo","m45terbate","ma5terb8","ma5terbate","masochist","master-bate","masterb8","masterbat*","masterbat3","masterbate","masterbation","masterbations","masturbate","mo-fo","mof0","mofo","mothafuck","mothafucka","mothafuckas","mothafuckaz","mothafucked","mothafucker","mothafuckers","mothafuckin","mothafucking","mothafuckings","mothafucks","mother fucker","motherfuck","motherfucked","motherfucker","motherfuckers","motherfuckin","motherfucking","motherfuckings","motherfuckka","motherfucks","muff","mutha","muthafecker","muthafuckker","muther","mutherfucker","n1gga","n1gger","nazi","nigg3r","nigg4h","nigga","niggah","niggas","niggaz","nigger","niggers","nob","nob jokey","nobhead","nobjocky","nobjokey","numbnuts","nutsack","orgasim","orgasims","orgasm","orgasms","p0rn","pawn","pecker","penis","penisfucker","phonesex","phuck","phuk","phuked","phuking","phukked","phukking","phuks","phuq","pigfucker","pimpis","piss","pissed","pisser","pissers","pisses","pissflaps","pissin","pissing","pissoff","poop","porn","porno","pornography","pornos","prick","pricks","pron","pube","pusse","pussi","pussies","pussy","pussys","rectum","retard","rimjaw","rimming","s hit","s.o.b.","sadist","schlong","screwing","scroat","scrote","scrotum","semen","sex","sh!+","sh!t","sh1t","shag","shagger","shaggin","shagging","shemale","shi+","shit","shitdick","shite","shited","shitey","shitfuck","shitfull","shithead","shiting","shitings","shits","shitted","shitter","shitters","shitting","shittings","shitty","skank","slut","sluts","smegma","smut","snatch","son-of-a-bitch","spac","spunk","s_h_i_t","t1tt1e5","t1tties","teets","teez","testical","testicle","tit","titfuck","tits","titt","tittie5","tittiefucker","titties","tittyfuck","tittywank","titwank","tosser","turd","tw4t","twat","twathead","twatty","twunt","twunter","v14gra","v1gra","vagina","viagra","vulva","w00se","wang","wank","wanker","wanky","whoar","whore","willies","willy","xrated","xxx"]},function(e,s){e.exports={"4r5e":1,"5h1t":1,"5hit":1,a55:1,anal:1,anus:1,ar5e:1,arrse:1,arse:1,ass:1,"ass-fucker":1,asses:1,assfucker:1,assfukka:1,asshole:1,assholes:1,asswhole:1,a_s_s:1,"b!tch":1,b00bs:1,b17ch:1,b1tch:1,ballbag:1,balls:1,ballsack:1,bastard:1,beastial:1,beastiality:1,bellend:1,bestial:1,bestiality:1,"bi+ch":1,biatch:1,bitch:1,bitcher:1,bitchers:1,bitches:1,bitchin:1,bitching:1,bloody:1,"blow job":1,blowjob:1,blowjobs:1,boiolas:1,bollock:1,bollok:1,boner:1,boob:1,boobs:1,booobs:1,boooobs:1,booooobs:1,booooooobs:1,breasts:1,buceta:1,bugger:1,bum:1,"bunny fucker":1,butt:1,butthole:1,buttmuch:1,buttplug:1,c0ck:1,c0cksucker:1,"carpet muncher":1,cawk:1,chink:1,cipa:1,cl1t:1,clit:1,clitoris:1,clits:1,cnut:1,cock:1,"cock-sucker":1,cockface:1,cockhead:1,cockmunch:1,cockmuncher:1,cocks:1,cocksuck:1,cocksucked:1,cocksucker:1,cocksucking:1,cocksucks:1,cocksuka:1,cocksukka:1,cok:1,cokmuncher:1,coksucka:1,coon:1,cox:1,crap:1,cum:1,cummer:1,cumming:1,cums:1,cumshot:1,cunilingus:1,cunillingus:1,cunnilingus:1,cunt:1,cuntlick:1,cuntlicker:1,cuntlicking:1,cunts:1,cyalis:1,cyberfuc:1,cyberfuck:1,cyberfucked:1,cyberfucker:1,cyberfuckers:1,cyberfucking:1,d1ck:1,damn:1,dick:1,dickhead:1,dildo:1,dildos:1,dink:1,dinks:1,dirsa:1,dlck:1,"dog-fucker":1,doggin:1,dogging:1,donkeyribber:1,doosh:1,duche:1,dyke:1,ejaculate:1,ejaculated:1,ejaculates:1,ejaculating:1,ejaculatings:1,ejaculation:1,ejakulate:1,"f u c k":1,"f u c k e r":1,f4nny:1,fag:1,fagging:1,faggitt:1,faggot:1,faggs:1,fagot:1,fagots:1,fags:1,fanny:1,fannyflaps:1,fannyfucker:1,fanyy:1,fatass:1,fcuk:1,fcuker:1,fcuking:1,feck:1,fecker:1,felching:1,fellate:1,fellatio:1,fingerfuck:1,fingerfucked:1,fingerfucker:1,fingerfuckers:1,fingerfucking:1,fingerfucks:1,fistfuck:1,fistfucked:1,fistfucker:1,fistfuckers:1,fistfucking:1,fistfuckings:1,fistfucks:1,flange:1,fook:1,fooker:1,fuck:1,fucka:1,fucked:1,fucker:1,fuckers:1,fuckhead:1,fuckheads:1,fuckin:1,fucking:1,fuckings:1,fuckingshitmotherfucker:1,fuckme:1,fucks:1,fuckwhit:1,fuckwit:1,"fudge packer":1,fudgepacker:1,fuk:1,fuker:1,fukker:1,fukkin:1,fuks:1,fukwhit:1,fukwit:1,fux:1,fux0r:1,f_u_c_k:1,gangbang:1,gangbanged:1,gangbangs:1,gaylord:1,gaysex:1,goatse:1,God:1,"god-dam":1,"god-damned":1,goddamn:1,goddamned:1,hardcoresex:1,hell:1,heshe:1,hoar:1,hoare:1,hoer:1,homo:1,hore:1,horniest:1,horny:1,hotsex:1,"jack-off":1,jackoff:1,jap:1,"jerk-off":1,jism:1,jiz:1,jizm:1,jizz:1,kawk:1,knob:1,knobead:1,knobed:1,knobend:1,knobhead:1,knobjocky:1,knobjokey:1,kock:1,kondum:1,kondums:1,kum:1,kummer:1,kumming:1,kums:1,kunilingus:1,"l3i+ch":1,l3itch:1,labia:1,lust:1,lusting:1,m0f0:1,m0fo:1,m45terbate:1,ma5terb8:1,ma5terbate:1,masochist:1,"master-bate":1,masterb8:1,"masterbat*":1,masterbat3:1,masterbate:1,masterbation:1,masterbations:1,masturbate:1,"mo-fo":1,mof0:1,mofo:1,mothafuck:1,mothafucka:1,mothafuckas:1,mothafuckaz:1,mothafucked:1,mothafucker:1,mothafuckers:1,mothafuckin:1,mothafucking:1,mothafuckings:1,mothafucks:1,"mother fucker":1,motherfuck:1,motherfucked:1,motherfucker:1,motherfuckers:1,motherfuckin:1,motherfucking:1,motherfuckings:1,motherfuckka:1,motherfucks:1,muff:1,mutha:1,muthafecker:1,muthafuckker:1,muther:1,mutherfucker:1,n1gga:1,n1gger:1,nazi:1,nigg3r:1,nigg4h:1,nigga:1,niggah:1,niggas:1,niggaz:1,nigger:1,niggers:1,nob:1,"nob jokey":1,nobhead:1,nobjocky:1,nobjokey:1,numbnuts:1,nutsack:1,orgasim:1,orgasims:1,orgasm:1,orgasms:1,p0rn:1,pawn:1,pecker:1,penis:1,penisfucker:1,phonesex:1,phuck:1,phuk:1,phuked:1,phuking:1,phukked:1,phukking:1,phuks:1,phuq:1,pigfucker:1,pimpis:1,piss:1,pissed:1,pisser:1,pissers:1,pisses:1,pissflaps:1,pissin:1,pissing:1,pissoff:1,poop:1,porn:1,porno:1,pornography:1,pornos:1,prick:1,pricks:1,pron:1,pube:1,pusse:1,pussi:1,pussies:1,pussy:1,pussys:1,rectum:1,retard:1,rimjaw:1,rimming:1,"s hit":1,"s.o.b.":1,sadist:1,schlong:1,screwing:1,scroat:1,scrote:1,scrotum:1,semen:1,sex:1,"sh!+":1,"sh!t":1,sh1t:1,shag:1,shagger:1,shaggin:1,shagging:1,shemale:1,"shi+":1,shit:1,shitdick:1,shite:1,shited:1,shitey:1,shitfuck:1,shitfull:1,shithead:1,shiting:1,shitings:1,shits:1,shitted:1,shitter:1,shitters:1,shitting:1,shittings:1,shitty:1,skank:1,slut:1,sluts:1,smegma:1,smut:1,snatch:1,"son-of-a-bitch":1,spac:1,spunk:1,s_h_i_t:1,t1tt1e5:1,t1tties:1,teets:1,teez:1,testical:1,testicle:1,tit:1,titfuck:1,tits:1,titt:1,tittie5:1,tittiefucker:1,titties:1,tittyfuck:1,tittywank:1,titwank:1,tosser:1,turd:1,tw4t:1,twat:1,twathead:1,twatty:1,twunt:1,twunter:1,v14gra:1,v1gra:1,vagina:1,viagra:1,vulva:1,w00se:1,wang:1,wank:1,wanker:1,wanky:1,whoar:1,whore:1,willies:1,willy:1,xrated:1,xxx:1}},function(e,s,t){e.exports={object:t(5),array:t(4),regex:t(3)}},function(e){e.exports={words:["ahole","anus","ash0le","ash0les","asholes","ass","Ass Monkey","Assface","assh0le","assh0lez","asshole","assholes","assholz","asswipe","azzhole","bassterds","bastard","bastards","bastardz","basterds","basterdz","Biatch","bitch","bitches","Blow Job","boffing","butthole","buttwipe","c0ck","c0cks","c0k","Carpet Muncher","cawk","cawks","Clit","cnts","cntz","cock","cockhead","cock-head","cocks","CockSucker","cock-sucker","crap","cum","cunt","cunts","cuntz","dick","dild0","dild0s","dildo","dildos","dilld0","dilld0s","dominatricks","dominatrics","dominatrix","dyke","enema","f u c k","f u c k e r","fag","fag1t","faget","fagg1t","faggit","faggot","fagit","fags","fagz","faig","faigs","fart","flipping the bird","fuck","fucker","fuckin","fucking","fucks","Fudge Packer","fuk","Fukah","Fuken","fuker","Fukin","Fukk","Fukkah","Fukken","Fukker","Fukkin","g00k","gay","gayboy","gaygirl","gays","gayz","God-damned","h00r","h0ar","h0re","hells","hoar","hoor","hoore","jackoff","jap","japs","jerk-off","jisim","jiss","jizm","jizz","knob","knobs","knobz","kunt","kunts","kuntz","Lesbian","Lezzian","Lipshits","Lipshitz","masochist","masokist","massterbait","masstrbait","masstrbate","masterbaiter","masterbate","masterbates","Motha Fucker","Motha Fuker","Motha Fukkah","Motha Fukker","Mother Fucker","Mother Fukah","Mother Fuker","Mother Fukkah","Mother Fukker","mother-fucker","Mutha Fucker","Mutha Fukah","Mutha Fuker","Mutha Fukkah","Mutha Fukker","n1gr","nastt","nigger;","nigur;","niiger;","niigr;","orafis","orgasim;","orgasm","orgasum","oriface","orifice","orifiss","packi","packie","packy","paki","pakie","paky","pecker","peeenus","peeenusss","peenus","peinus","pen1s","penas","penis","penis-breath","penus","penuus","Phuc","Phuck","Phuk","Phuker","Phukker","polac","polack","polak","Poonani","pr1c","pr1ck","pr1k","pusse","pussee","pussy","puuke","puuker","queer","queers","queerz","qweers","qweerz","qweir","recktum","rectum","retard","sadist","scank","schlong","screwing","semen","sex","sexy","Sh!t","sh1t","sh1ter","sh1ts","sh1tter","sh1tz","shit","shits","shitter","Shitty","Shity","shitz","Shyt","Shyte","Shytty","Shyty","skanck","skank","skankee","skankey","skanks","Skanky","slag","slut","sluts","Slutty","slutz","son-of-a-bitch","tit","turd","va1jina","vag1na","vagiina","vagina","vaj1na","vajina","vullva","vulva","w0p","wh00r","wh0re","whore","xrated","xxx","b!+ch","bitch","blowjob","clit","arschloch","fuck","shit","ass","asshole","b!tch","b17ch","b1tch","bastard","bi+ch","boiolas","buceta","c0ck","cawk","chink","cipa","clits","cock","cum","cunt","dildo","dirsa","ejakulate","fatass","fcuk","fuk","fux0r","hoer","hore","jism","kawk","l3itch","l3i+ch","lesbian","masturbate","masterbat*","masterbat3","motherfucker","s.o.b.","mofo","nazi","nigga","nigger","nutsack","phuck","pimpis","pusse","pussy","scrotum","sh!t","shemale","shi+","sh!+","slut","smut","teets","tits","boobs","b00bs","teez","testical","testicle","titt","w00se","jackoff","wank","whoar","whore","*damn","*dyke","*fuck*","*shit*","@$$","amcik","andskota","arse*","assrammer","ayir","bi7ch","bitch*","bollock*","breasts","butt-pirate","cabron","cazzo","chraa","chuj","Cock*","cunt*","d4mn","daygo","dego","dick*","dike*","dupa","dziwka","ejackulate","Ekrem*","Ekto","enculer","faen","fag*","fanculo","fanny","feces","feg","Felcher","ficken","fitt*","Flikker","foreskin","Fotze","Fu(*","fuk*","futkretzn","gay","gook","guiena","h0r","h4x0r","hell","helvete","hoer*","honkey","Huevon","hui","injun","jizz","kanker*","kike","klootzak","kraut","knulle","kuk","kuksuger","Kurac","kurwa","kusi*","kyrpa*","lesbo","mamhoon","masturbat*","merd*","mibun","monkleigh","mouliewop","muie","mulkku","muschi","nazis","nepesaurio","nigger*","orospu","paska*","perse","picka","pierdol*","pillu*","pimmel","piss*","pizda","poontsee","poop","porn","p0rn","pr0n","preteen","pula","pule","puta","puto","qahbeh","queef*","rautenberg","schaffer","scheiss*","schlampe","schmuck","screw","sh!t*","sharmuta","sharmute","shipal","shiz","skribz","skurwysyn","sphencter","spic","spierdalaj","splooge","suka","b00b*","testicle*","titt*","twat","vittu","wank*","wetback*","wichser","wop*","yed","zabourah"]}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,